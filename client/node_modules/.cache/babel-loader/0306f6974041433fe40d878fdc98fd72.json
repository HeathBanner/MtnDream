{"ast":null,"code":"import _regeneratorRuntime from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/MDToolbar.js\";\nimport React, { useContext, useState } from 'react';\nimport TextSize from './Tools/TextSize';\nimport Font from './Tools/Font';\nimport Styling from './Tools/Styling';\nimport Justify from './Tools/Justify';\nimport Margin from './Tools/Margin';\nimport Notification from '../Notification/Notification';\nimport { PreSubmit, FetchSubmit } from './Services/Services';\nimport { EditorContext } from '../../Context/EditorContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Icon, Button, Typography, Drawer } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      padding: 20,\n      background: '#ffffff',\n      position: 'fixed',\n      zIndex: 2,\n      boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)'\n    },\n    editorTools: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center',\n      flexWrap: 'wrap'\n    },\n    input: {\n      width: '80%'\n    },\n    menuButton: {\n      position: 'absolute',\n      left: 10,\n      top: '50%',\n      transform: 'translate(0%, -50%)'\n    },\n    save: {\n      position: 'relative',\n      backgroundColor: 'rgb(0, 0, 0, 0.2)',\n      transition: 'all 0.4s ease',\n      '&:hover': {\n        transform: 'scale(1.03)',\n        backgroundColor: 'rgb(0, 0, 0, 0.05)'\n      }\n    },\n    backButton: {\n      position: 'absolute',\n      bottom: 20,\n      left: '50%',\n      transform: 'translate(-50%, 0%)',\n      textDecoration: 'none',\n      color: 'inherit',\n      '&:hover': {\n        textDecoration: 'none',\n        color: 'inherit'\n      }\n    }\n  };\n});\nvar initNotify = {\n  error: false,\n  success: false,\n  warning: false,\n  message: \"\"\n};\n\nvar Toolbar = function Toolbar(props) {\n  var classes = useStyles();\n  var edit = useContext(EditorContext);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1]; // These will toggle the notification components\n\n\n  var _useState3 = useState(_objectSpread({}, initNotify)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      notify = _useState4[0],\n      setNotify = _useState4[1];\n\n  var handleClose = function handleClose() {\n    return setNotify(_objectSpread({}, initNotify));\n  };\n\n  var handleSave = function handleSave() {\n    var obj = PreSubmit(edit);\n    if (obj.error || obj.warning) return setNotify(_objectSpread({}, obj));\n    if (edit.isPublished) return handleChanges();\n    handleSubmit();\n  }; // If the preSubmit function passes with no errors or warnings it will\n  // then log the current date and store it within the database\n\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              res = FetchSubmit(edit, \"newArticle\");\n              setNotify(_objectSpread({}, res));\n              edit.setPublished();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // If the user has already published the article, this function will then\n  // update the article within the database\n\n\n  var handleChanges =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              res = FetchSubmit(edit, \"saveChanges\");\n              setNotify(_objectSpread({}, res));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleChanges() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Grid, {\n    className: classes.container,\n    justify: \"center\",\n    alignItems: \"center\",\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.editorTools,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.menuButton,\n    onClick: function onClick() {\n      return setOpen(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    fontSize: props.xs ? 'small' : 'large',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"menu\")), edit.title.isPublished ? React.createElement(Button, {\n    className: classes.save,\n    onClick: handleSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"save\"), React.createElement(Typography, {\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Save\")) : React.createElement(Button, {\n    className: classes.save,\n    onClick: handleSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"save\"), React.createElement(Typography, {\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Publish\")), React.createElement(Drawer, {\n    open: open,\n    onClose: function onClose() {\n      return setOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(TextSize, {\n    xs: props.xs,\n    margin: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(Font, {\n    xs: props.xs,\n    margin: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(Styling, {\n    xs: props.xs,\n    margin: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), React.createElement(Justify, {\n    xs: props.xs,\n    margin: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(Margin, {\n    xs: props.xs,\n    md: props.md,\n    margin: '0 auto',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    href: \"/blog\",\n    className: classes.backButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    fontSize: props.xs ? 'small' : 'large',\n    style: {\n      marginRight: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"exit_to_app\"), React.createElement(Typography, {\n    variant: props.xs ? 'body1' : 'h6',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Blog\"))))), React.createElement(Notification, {\n    notify: notify,\n    handleClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }));\n};\n\nexport default Toolbar;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/MDToolbar.js"],"names":["React","useContext","useState","TextSize","Font","Styling","Justify","Margin","Notification","PreSubmit","FetchSubmit","EditorContext","makeStyles","Grid","Icon","Button","Typography","Drawer","useStyles","theme","container","padding","background","position","zIndex","boxShadow","editorTools","display","justifyContent","alignItems","alignContent","flexWrap","input","width","menuButton","left","top","transform","save","backgroundColor","transition","backButton","bottom","textDecoration","color","initNotify","error","success","warning","message","Toolbar","props","classes","edit","open","setOpen","notify","setNotify","handleClose","handleSave","obj","isPublished","handleChanges","handleSubmit","res","setPublished","xs","title","marginLeft","md","marginRight"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,qBAAvC;AAEA,SAASC,aAAT,QAA8B,6BAA9B;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SACIC,IADJ,EAEIC,IAFJ,EAGIC,MAHJ,EAIIC,UAJJ,EAKIC,MALJ,QAMO,mBANP;AAQA,IAAMC,SAAS,GAAGN,UAAU,CAAC,UAACO,KAAD;AAAA,SAAY;AACrCC,IAAAA,SAAS,EAAE;AACPC,MAAAA,OAAO,EAAE,EADF;AAEPC,MAAAA,UAAU,EAAE,SAFL;AAGPC,MAAAA,QAAQ,EAAE,OAHH;AAIPC,MAAAA,MAAM,EAAE,CAJD;AAKPC,MAAAA,SAAS,EAAE;AALJ,KAD0B;AAQrCC,IAAAA,WAAW,EAAE;AACTC,MAAAA,OAAO,EAAE,MADA;AAETC,MAAAA,cAAc,EAAE,QAFP;AAGTC,MAAAA,UAAU,EAAE,QAHH;AAITC,MAAAA,YAAY,EAAE,QAJL;AAKTC,MAAAA,QAAQ,EAAE;AALD,KARwB;AAerCC,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE;AADJ,KAf8B;AAkBrCC,IAAAA,UAAU,EAAE;AACRX,MAAAA,QAAQ,EAAE,UADF;AAERY,MAAAA,IAAI,EAAE,EAFE;AAGRC,MAAAA,GAAG,EAAE,KAHG;AAIRC,MAAAA,SAAS,EAAE;AAJH,KAlByB;AAwBrCC,IAAAA,IAAI,EAAE;AACFf,MAAAA,QAAQ,EAAE,UADR;AAEFgB,MAAAA,eAAe,EAAE,mBAFf;AAGFC,MAAAA,UAAU,EAAE,eAHV;AAIF,iBAAW;AACPH,QAAAA,SAAS,EAAE,aADJ;AAEPE,QAAAA,eAAe,EAAE;AAFV;AAJT,KAxB+B;AAiCrCE,IAAAA,UAAU,EAAE;AACRlB,MAAAA,QAAQ,EAAE,UADF;AAERmB,MAAAA,MAAM,EAAE,EAFA;AAGRP,MAAAA,IAAI,EAAE,KAHE;AAIRE,MAAAA,SAAS,EAAE,qBAJH;AAKRM,MAAAA,cAAc,EAAE,MALR;AAMRC,MAAAA,KAAK,EAAE,SANC;AAOR,iBAAW;AACPD,QAAAA,cAAc,EAAE,MADT;AAEPC,QAAAA,KAAK,EAAE;AAFA;AAPH;AAjCyB,GAAZ;AAAA,CAAD,CAA5B;AA+CA,IAAMC,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE,KADQ;AAEfC,EAAAA,OAAO,EAAE,KAFM;AAGfC,EAAAA,OAAO,EAAE,KAHM;AAIfC,EAAAA,OAAO,EAAE;AAJM,CAAnB;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAEvB,MAAMC,OAAO,GAAGlC,SAAS,EAAzB;AACA,MAAMmC,IAAI,GAAGpD,UAAU,CAACU,aAAD,CAAvB;;AAHuB,kBAKCT,QAAQ,CAAC,KAAD,CALT;AAAA;AAAA,MAKhBoD,IALgB;AAAA,MAKVC,OALU,kBAOvB;;;AAPuB,mBAQKrD,QAAQ,mBAAM2C,UAAN,EARb;AAAA;AAAA,MAQhBW,MARgB;AAAA,MAQRC,SARQ;;AAUvB,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMD,SAAS,mBAAMZ,UAAN,EAAf;AAAA,GAApB;;AAEA,MAAMc,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,QAAMC,GAAG,GAAGnD,SAAS,CAAC4C,IAAD,CAArB;AACA,QAAIO,GAAG,CAACd,KAAJ,IAAac,GAAG,CAACZ,OAArB,EAA8B,OAAOS,SAAS,mBAAMG,GAAN,EAAhB;AAC9B,QAAIP,IAAI,CAACQ,WAAT,EAAsB,OAAOC,aAAa,EAApB;AAEtBC,IAAAA,YAAY;AACf,GAND,CAZuB,CAoBvB;AACA;;;AACA,MAAMA,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,cAAAA,GADY,GACNtD,WAAW,CAAC2C,IAAD,EAAO,YAAP,CADL;AAGlBI,cAAAA,SAAS,mBAAMO,GAAN,EAAT;AACAX,cAAAA,IAAI,CAACY,YAAL;;AAJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;;AAAA,oBAAZF,YAAY;AAAA;AAAA;AAAA,KAAlB,CAtBuB,CA6BvB;AACA;;;AACA,MAAMD,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACZE,cAAAA,GADY,GACNtD,WAAW,CAAC2C,IAAD,EAAO,aAAP,CADL;AAGlBI,cAAAA,SAAS,mBAAMO,GAAN,EAAT;;AAHkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbF,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAMA,SACI,oBAAC,IAAD;AACI,IAAA,SAAS,EAAEV,OAAO,CAAChC,SADvB;AAEI,IAAA,OAAO,EAAC,QAFZ;AAGI,IAAA,UAAU,EAAC,QAHf;AAII,IAAA,SAAS,MAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEgC,OAAO,CAAC1B,WAAzB;AAAsC,IAAA,IAAI,MAA1C;AAA2C,IAAA,EAAE,EAAE,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAE0B,OAAO,CAAClB,UADvB;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMqB,OAAO,CAAC,IAAD,CAAb;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AACI,IAAA,QAAQ,EAAEJ,KAAK,CAACe,EAAN,GAAW,OAAX,GAAqB,OADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,CAFJ,EAcQb,IAAI,CAACc,KAAL,CAAWN,WAAX,GAEA,oBAAC,MAAD;AACI,IAAA,SAAS,EAAET,OAAO,CAACd,IADvB;AAEI,IAAA,OAAO,EAAEqB,UAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAOI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAES,MAAAA,UAAU,EAAE;AAAd,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CAFA,GAcA,oBAAC,MAAD;AACI,IAAA,SAAS,EAAEhB,OAAO,CAACd,IADvB;AAEI,IAAA,OAAO,EAAEqB,UAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAOI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAES,MAAAA,UAAU,EAAE;AAAd,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPJ,CA5BR,EAyCI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAEd,IADV;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMC,OAAO,CAAC,KAAD,CAAb;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAEJ,KAAK,CAACe,EAApB;AAAwB,IAAA,MAAM,EAAE,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAMI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEf,KAAK,CAACe,EAAhB;AAAoB,IAAA,MAAM,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAQI,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAEf,KAAK,CAACe,EAAnB;AAAuB,IAAA,MAAM,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAUI,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAEf,KAAK,CAACe,EAAnB;AAAuB,IAAA,MAAM,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAYI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAEf,KAAK,CAACe,EAAlB;AAAsB,IAAA,EAAE,EAAEf,KAAK,CAACkB,EAAhC;AAAoC,IAAA,MAAM,EAAE,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAcI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,SAAS,EAAEjB,OAAO,CAACX,UAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,QAAQ,EAAEU,KAAK,CAACe,EAAN,GAAW,OAAX,GAAqB,OADnC;AAEI,IAAA,KAAK,EAAE;AAAEI,MAAAA,WAAW,EAAE;AAAf,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAOI,oBAAC,UAAD;AACI,IAAA,OAAO,EAAEnB,KAAK,CAACe,EAAN,GAAW,OAAX,GAAqB,IADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CAJJ,CAdJ,CAzCJ,CAPJ,EAqFI,oBAAC,YAAD;AACI,IAAA,MAAM,EAAEV,MADZ;AAEI,IAAA,WAAW,EAAEE,WAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArFJ,CADJ;AA6FH,CAlID;;AAoIA,eAAeR,OAAf","sourcesContent":["import React, {useContext, useState } from 'react';\n\nimport TextSize from './Tools/TextSize';\nimport Font from './Tools/Font';\nimport Styling from './Tools/Styling';\nimport Justify from './Tools/Justify';\nimport Margin from './Tools/Margin';\nimport Notification from '../Notification/Notification';\nimport { PreSubmit, FetchSubmit } from './Services/Services';\n\nimport { EditorContext } from '../../Context/EditorContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Grid,\n    Icon,\n    Button,\n    Typography,\n    Drawer\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: 20,\n        background: '#ffffff',\n        position: 'fixed',\n        zIndex: 2,\n        boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)',\n    },\n    editorTools: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n    },\n    input: {\n        width: '80%'\n    },\n    menuButton: {\n        position: 'absolute',\n        left: 10,\n        top: '50%',\n        transform: 'translate(0%, -50%)',\n    },\n    save: {\n        position: 'relative',\n        backgroundColor: 'rgb(0, 0, 0, 0.2)',\n        transition: 'all 0.4s ease',\n        '&:hover': {\n            transform: 'scale(1.03)',\n            backgroundColor: 'rgb(0, 0, 0, 0.05)',\n        },\n    },\n    backButton: {\n        position: 'absolute',\n        bottom: 20,\n        left: '50%',\n        transform: 'translate(-50%, 0%)',\n        textDecoration: 'none',\n        color: 'inherit',\n        '&:hover': {\n            textDecoration: 'none',\n            color: 'inherit',\n        },\n    },\n}));\n\nconst initNotify = {\n    error: false,\n    success: false,\n    warning: false,\n    message: \"\"\n};\n\nconst Toolbar = (props) => {\n\n    const classes = useStyles();\n    const edit = useContext(EditorContext);\n\n    const [open, setOpen] = useState(false);\n\n    // These will toggle the notification components\n    const [notify, setNotify] = useState({ ...initNotify });\n\n    const handleClose = () => setNotify({ ...initNotify });\n\n    const handleSave = () => {\n        const obj = PreSubmit(edit);\n        if (obj.error || obj.warning) return setNotify({ ...obj });\n        if (edit.isPublished) return handleChanges();\n\n        handleSubmit();\n    }\n\n    // If the preSubmit function passes with no errors or warnings it will\n    // then log the current date and store it within the database\n    const handleSubmit =  async () => {\n        const res = FetchSubmit(edit, \"newArticle\");\n\n        setNotify({ ...res });\n        edit.setPublished();\n    };\n\n    // If the user has already published the article, this function will then\n    // update the article within the database\n    const handleChanges = async () => {\n        const res = FetchSubmit(edit, \"saveChanges\");\n\n        setNotify({ ...res });\n    };\n\n    return (\n        <Grid\n            className={classes.container}\n            justify=\"center\"\n            alignItems=\"center\"\n            container\n        >\n\n            <Grid className={classes.editorTools} item xs={12}>\n\n                <Button\n                    className={classes.menuButton}\n                    onClick={() => setOpen(true)}\n                >\n                    <Icon\n                        fontSize={props.xs ? 'small' : 'large'}\n                    >\n                        menu\n                    </Icon>\n                </Button>\n\n                {\n                    edit.title.isPublished\n                        ?\n                    <Button\n                        className={classes.save}\n                        onClick={handleSave}\n                    >\n                        <Icon>\n                            save\n                        </Icon>\n                        <Typography style={{ marginLeft: 10 }}>\n                            Save\n                        </Typography>\n                    </Button>\n                        :\n                    <Button\n                        className={classes.save}\n                        onClick={handleSave}\n                    >\n                        <Icon>\n                            save\n                        </Icon>\n                        <Typography style={{ marginLeft: 10 }}>\n                            Publish\n                        </Typography>\n                    </Button>\n                }\n\n                <Drawer\n                    open={open}\n                    onClose={() => setOpen(false)}\n                >\n                    <TextSize xs={props.xs} margin={0} />\n                    \n                    <Font xs={props.xs} margin={0} />\n\n                    <Styling xs={props.xs} margin={0} />\n\n                    <Justify xs={props.xs} margin={0} />\n\n                    <Margin xs={props.xs} md={props.md} margin={'0 auto'} />\n\n                    <a\n                        href=\"/blog\"\n                        className={classes.backButton}\n                    >\n                        <Button>\n                            <Icon\n                                fontSize={props.xs ? 'small' : 'large'}\n                                style={{ marginRight: 10 }}\n                            >\n                                exit_to_app\n                            </Icon>\n                            <Typography\n                                variant={props.xs ? 'body1' : 'h6'}\n                            >\n                                Blog\n                            </Typography>\n                        </Button>\n                    </a>\n\n                </Drawer>\n\n            </Grid>\n\n            <Notification\n                notify={notify}\n                handleClose={handleClose}\n            />\n\n        </Grid>\n    );\n};\n\nexport default Toolbar;\n"]},"metadata":{},"sourceType":"module"}