{"ast":null,"code":"import _objectSpread from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/Context/EditorContext.js\";\nimport React, { useState, createContext, useEffect } from 'react';\nexport var EditorContext = createContext();\nvar initialStyling = {\n  bold: false,\n  italic: false,\n  underline: false,\n  color: 'black',\n  highlight: false\n};\nexport var EditorProvider = function EditorProvider(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editMode = _useState2[0],\n      setEditMode = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      articleList = _useState4[0],\n      setArticleList = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      input = _useState6[0],\n      setInput = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      article = _useState8[0],\n      setArticle = _useState8[1];\n\n  var _useState9 = useState(initialStyling),\n      _useState10 = _slicedToArray(_useState9, 2),\n      styling = _useState10[0],\n      setStyling = _useState10[1];\n\n  var _useState11 = useState('Roboto'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      font = _useState12[0],\n      setFont = _useState12[1];\n\n  var _useState13 = useState('left'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      justify = _useState14[0],\n      setJustify = _useState14[1];\n\n  var _useState15 = useState('body1'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      textStyle = _useState16[0],\n      setTextStyle = _useState16[1];\n\n  useEffect(function () {\n    fetch('/api/editors/getList').then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      return setArticleList(result);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  }, []);\n\n  var handleMode = function handleMode() {\n    setEditMode(!editMode);\n  };\n\n  var handleSubmit = function handleSubmit(data) {\n    fetch('/api/editors/newSection', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      console.log(result);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var handleInput = function handleInput(e) {\n    setInput(e.target.value);\n  };\n\n  var handleArticle = function handleArticle() {\n    var newArticle = article;\n    var section = {\n      text: input,\n      font: font,\n      justify: justify,\n      textStyle: textStyle,\n      bold: styling.bold,\n      italic: styling.italic,\n      underline: styling.underline,\n      color: styling.color,\n      highlight: styling.highlight\n    };\n    handleSubmit(section);\n    newArticle.push(section);\n    setArticle(newArticle);\n    setInput('');\n    setStyling(initialStyling);\n    setFont('Roboto');\n    setJustify('left');\n    setTextStyle('body1');\n  };\n\n  var handleFont = function handleFont(newFont) {\n    setFont(newFont);\n  };\n\n  var handleStyling = function handleStyling(style, color) {\n    switch (style) {\n      case 'bold':\n        return setStyling(_objectSpread({}, styling, {\n          bold: !styling.bold\n        }));\n\n      case 'italic':\n        return setStyling(_objectSpread({}, styling, {\n          italic: !styling.italic\n        }));\n\n      case 'underline':\n        return setStyling(_objectSpread({}, styling, {\n          underline: !styling.underline\n        }));\n\n      case 'color':\n        return setStyling(_objectSpread({}, styling, {\n          color: color\n        }));\n\n      case 'highlight':\n        return setStyling(_objectSpread({}, styling, {\n          highlight: !styling.highlight\n        }));\n\n      default:\n        return;\n    }\n\n    ;\n  };\n\n  var handleJustify = function handleJustify(justification) {\n    setJustify(justification);\n  };\n\n  var handleTextStyle = function handleTextStyle(style) {\n    setTextStyle(style);\n  };\n\n  return React.createElement(EditorContext.Provider, {\n    value: {\n      handleInput: handleInput,\n      input: input,\n      styling: styling,\n      handleStyling: handleStyling,\n      font: font,\n      handleFont: handleFont,\n      justify: justify,\n      handleJustify: handleJustify,\n      textStyle: textStyle,\n      handleTextStyle: handleTextStyle,\n      article: article,\n      handleArticle: handleArticle,\n      editMode: editMode,\n      handleMode: handleMode,\n      articleList: articleList\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/Context/EditorContext.js"],"names":["React","useState","createContext","useEffect","EditorContext","initialStyling","bold","italic","underline","color","highlight","EditorProvider","props","editMode","setEditMode","articleList","setArticleList","input","setInput","article","setArticle","styling","setStyling","font","setFont","justify","setJustify","textStyle","setTextStyle","fetch","then","res","json","result","catch","error","console","log","handleMode","handleSubmit","data","method","body","JSON","stringify","headers","handleInput","e","target","value","handleArticle","newArticle","section","text","push","handleFont","newFont","handleStyling","style","handleJustify","justification","handleTextStyle","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,OAAO,IAAMC,aAAa,GAAGF,aAAa,EAAnC;AAEP,IAAMG,cAAc,GAAG;AACnBC,EAAAA,IAAI,EAAE,KADa;AAEnBC,EAAAA,MAAM,EAAE,KAFW;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,KAAK,EAAE,OAJY;AAKnBC,EAAAA,SAAS,EAAE;AALQ,CAAvB;AAQA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAAA,kBAEHX,QAAQ,CAAC,KAAD,CAFL;AAAA;AAAA,MAE5BY,QAF4B;AAAA,MAElBC,WAFkB;;AAAA,mBAGGb,QAAQ,CAAC,EAAD,CAHX;AAAA;AAAA,MAG5Bc,WAH4B;AAAA,MAGfC,cAHe;;AAAA,mBAKTf,QAAQ,CAAC,EAAD,CALC;AAAA;AAAA,MAK5BgB,KAL4B;AAAA,MAKrBC,QALqB;;AAAA,mBAMLjB,QAAQ,CAAC,EAAD,CANH;AAAA;AAAA,MAM5BkB,OAN4B;AAAA,MAMnBC,UANmB;;AAAA,mBAOLnB,QAAQ,CAACI,cAAD,CAPH;AAAA;AAAA,MAO5BgB,OAP4B;AAAA,MAOnBC,UAPmB;;AAAA,oBAQXrB,QAAQ,CAAE,QAAF,CARG;AAAA;AAAA,MAQ5BsB,IAR4B;AAAA,MAQtBC,OARsB;;AAAA,oBASLvB,QAAQ,CAAC,MAAD,CATH;AAAA;AAAA,MAS5BwB,OAT4B;AAAA,MASnBC,UATmB;;AAAA,oBAUDzB,QAAQ,CAAC,OAAD,CAVP;AAAA;AAAA,MAU5B0B,SAV4B;AAAA,MAUjBC,YAViB;;AAYnCzB,EAAAA,SAAS,CAAC,YAAM;AAEZ0B,IAAAA,KAAK,CAAC,sBAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADT,EAECF,IAFD,CAEM,UAAAG,MAAM;AAAA,aAAIjB,cAAc,CAACiB,MAAD,CAAlB;AAAA,KAFZ,EAGCC,KAHD,CAGO,UAAAC,KAAK;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,KAHZ;AAKH,GAPQ,EAON,EAPM,CAAT;;AASA,MAAMG,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBxB,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH,GAFD;;AAIA,MAAM0B,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI,EAAI;AAGzBX,IAAAA,KAAK,CAAC,yBAAD,EAA2B;AAC5BY,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAFsB;AAG5BK,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAHmB,KAA3B,CAAL,CAKCf,IALD,CAKM,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KALT,EAMCF,IAND,CAMM,UAACG,MAAD,EAAY;AACdG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACH,KARD,EASCC,KATD,CASO,UAAAC,KAAK,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAXD;AAYH,GAfD;;AAiBA,MAAMW,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AACvB7B,IAAAA,QAAQ,CAAC6B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAIC,UAAU,GAAGhC,OAAjB;AACA,QAAIiC,OAAO,GAAG;AACVC,MAAAA,IAAI,EAAEpC,KADI;AAEVM,MAAAA,IAAI,EAAEA,IAFI;AAGVE,MAAAA,OAAO,EAAEA,OAHC;AAIVE,MAAAA,SAAS,EAAEA,SAJD;AAKVrB,MAAAA,IAAI,EAAEe,OAAO,CAACf,IALJ;AAMVC,MAAAA,MAAM,EAAEc,OAAO,CAACd,MANN;AAOVC,MAAAA,SAAS,EAAEa,OAAO,CAACb,SAPT;AAQVC,MAAAA,KAAK,EAAEY,OAAO,CAACZ,KARL;AASVC,MAAAA,SAAS,EAAEW,OAAO,CAACX;AATT,KAAd;AAYA6B,IAAAA,YAAY,CAACa,OAAD,CAAZ;AAEAD,IAAAA,UAAU,CAACG,IAAX,CAAgBF,OAAhB;AAEAhC,IAAAA,UAAU,CAAC+B,UAAD,CAAV;AACAjC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAI,IAAAA,UAAU,CAACjB,cAAD,CAAV;AACAmB,IAAAA,OAAO,CAAC,QAAD,CAAP;AACAE,IAAAA,UAAU,CAAC,MAAD,CAAV;AACAE,IAAAA,YAAY,CAAC,OAAD,CAAZ;AACH,GAxBD;;AA0BA,MAAM2B,UAAU,GAAG,SAAbA,UAAa,CAAEC,OAAF,EAAe;AAC9BhC,IAAAA,OAAO,CAACgC,OAAD,CAAP;AACH,GAFD;;AAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAEC,KAAF,EAASjD,KAAT,EAAoB;AACtC,YAAQiD,KAAR;AACI,WAAK,MAAL;AACI,eAAOpC,UAAU,mBAAMD,OAAN;AAAef,UAAAA,IAAI,EAAE,CAACe,OAAO,CAACf;AAA9B,WAAjB;;AACJ,WAAK,QAAL;AACI,eAAOgB,UAAU,mBAAMD,OAAN;AAAed,UAAAA,MAAM,EAAE,CAACc,OAAO,CAACd;AAAhC,WAAjB;;AACJ,WAAK,WAAL;AACI,eAAOe,UAAU,mBAAMD,OAAN;AAAeb,UAAAA,SAAS,EAAE,CAACa,OAAO,CAACb;AAAnC,WAAjB;;AACJ,WAAK,OAAL;AACI,eAAOc,UAAU,mBAAMD,OAAN;AAAeZ,UAAAA,KAAK,EAAEA;AAAtB,WAAjB;;AACJ,WAAK,WAAL;AACI,eAAOa,UAAU,mBAAMD,OAAN;AAAeX,UAAAA,SAAS,EAAE,CAACW,OAAO,CAACX;AAAnC,WAAjB;;AACJ;AACI;AAZR;;AAaC;AACJ,GAfD;;AAiBA,MAAMiD,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,aAAa,EAAI;AACnClC,IAAAA,UAAU,CAACkC,aAAD,CAAV;AACH,GAFD;;AAIA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAH,KAAK,EAAI;AAC7B9B,IAAAA,YAAY,CAAC8B,KAAD,CAAZ;AACH,GAFD;;AAIA,SACI,oBAAC,aAAD,CAAe,QAAf;AACI,IAAA,KAAK,EAAE;AACHZ,MAAAA,WAAW,EAAXA,WADG;AAEH7B,MAAAA,KAAK,EAALA,KAFG;AAGHI,MAAAA,OAAO,EAAPA,OAHG;AAIHoC,MAAAA,aAAa,EAAbA,aAJG;AAKHlC,MAAAA,IAAI,EAAJA,IALG;AAMHgC,MAAAA,UAAU,EAAVA,UANG;AAOH9B,MAAAA,OAAO,EAAPA,OAPG;AAQHkC,MAAAA,aAAa,EAAbA,aARG;AASHhC,MAAAA,SAAS,EAATA,SATG;AAUHkC,MAAAA,eAAe,EAAfA,eAVG;AAWH1C,MAAAA,OAAO,EAAPA,OAXG;AAYH+B,MAAAA,aAAa,EAAbA,aAZG;AAaHrC,MAAAA,QAAQ,EAARA,QAbG;AAcHyB,MAAAA,UAAU,EAAVA,UAdG;AAeHvB,MAAAA,WAAW,EAAXA;AAfG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmBKH,KAAK,CAACkD,QAnBX,CADJ;AAuBH,CA5HM","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\n\nexport const EditorContext = createContext();\n\nconst initialStyling = {\n    bold: false,\n    italic: false,\n    underline: false,\n    color: 'black',\n    highlight: false,\n}\n\nexport const EditorProvider = props => {\n\n    const [editMode, setEditMode] = useState(false);\n    const [articleList, setArticleList] = useState('');\n\n    const [input, setInput] = useState('');\n    const [article, setArticle] = useState([]);\n    const [styling, setStyling] = useState(initialStyling);\n    const [font, setFont] = useState( 'Roboto' );\n    const [justify, setJustify] = useState('left');\n    const [textStyle, setTextStyle] = useState('body1');\n    \n    useEffect(() => {\n\n        fetch('/api/editors/getList')\n        .then(res => res.json())\n        .then(result => setArticleList(result))\n        .catch(error => console.log(error));\n\n    }, [] )\n\n    const handleMode = () => {\n        setEditMode(!editMode);\n    }\n\n    const handleSubmit = data => {\n\n\n        fetch('/api/editors/newSection',{\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then(res => res.json())\n        .then((result) => {\n            console.log(result);\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    };\n\n    const handleInput = (e) => {\n        setInput(e.target.value);\n    };\n\n    const handleArticle = () => {\n        let newArticle = article;\n        let section = {\n            text: input,\n            font: font,\n            justify: justify,\n            textStyle: textStyle,\n            bold: styling.bold,\n            italic: styling.italic,\n            underline: styling.underline,\n            color: styling.color,\n            highlight: styling.highlight\n        }\n\n        handleSubmit(section);\n\n        newArticle.push(section);\n\n        setArticle(newArticle);\n        setInput('');\n        setStyling(initialStyling);\n        setFont('Roboto');\n        setJustify('left');\n        setTextStyle('body1');\n    };\n\n    const handleFont = ( newFont ) => {\n        setFont(newFont);\n    };\n\n    const handleStyling = ( style, color ) => {\n        switch (style) {\n            case 'bold':\n                return setStyling({ ...styling, bold: !styling.bold });\n            case 'italic':\n                return setStyling({ ...styling, italic: !styling.italic });\n            case 'underline':\n                return setStyling({ ...styling, underline: !styling.underline });\n            case 'color':\n                return setStyling({ ...styling, color: color });\n            case 'highlight':\n                return setStyling({ ...styling, highlight: !styling.highlight });\n            default:\n                return\n        };\n    };\n\n    const handleJustify = justification => {\n        setJustify(justification);\n    };\n\n    const handleTextStyle = style => {\n        setTextStyle(style);\n    };\n\n    return (\n        <EditorContext.Provider\n            value={{\n                handleInput,\n                input,\n                styling,\n                handleStyling,\n                font,\n                handleFont,\n                justify,\n                handleJustify,\n                textStyle,\n                handleTextStyle,\n                article,\n                handleArticle,\n                editMode,\n                handleMode,\n                articleList\n            }}\n        >\n            {props.children}\n        </EditorContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}