{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Login/Login.js\";\nimport React, { useState } from 'react';\nimport { Paper, Typography, TextField, Button } from '@material-ui/core';\n\nvar Login = function Login() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      signup = _useState2[0],\n      setSignup = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState({\n    open: false,\n    message: ''\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      success = _useState10[0],\n      setSuccess = _useState10[1];\n\n  var _useState11 = useState({\n    open: false,\n    message: ''\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  var handleSubmit = function handleSubmit() {\n    if (signup) {\n      var data = {\n        username: username,\n        email: email,\n        password: password\n      };\n      fetch('/api/users/signup', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        setSuccess({\n          open: true,\n          message: 'Sign up successful!'\n        });\n      }).catch(function (error) {\n        setError({\n          open: true,\n          message: error\n        });\n      });\n    } else {\n      var _data = {\n        email: email,\n        password: password\n      };\n      fetch('/api/users/login', {\n        method: 'POST',\n        body: JSON.stringify(_data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        setSuccess({\n          open: true,\n          message: 'Login Successful!'\n        });\n      }).catch(function (error) {\n        setError({\n          open: true,\n          message: error\n        });\n      });\n    }\n  };\n\n  return React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Login\"), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Username\",\n    type: \"email\",\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Username\",\n    type: \"password\",\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleSubmit,\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Submit\")), React.createElement(Button, {\n    onClick: function onClick() {\n      return setSignup(!signup);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Not Signed Up?\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Login/Login.js"],"names":["React","useState","Paper","Typography","TextField","Button","Login","signup","setSignup","username","setUsername","email","setEmail","password","setPassword","open","message","success","setSuccess","error","setError","handleSubmit","data","fetch","method","body","JSON","stringify","headers","then","res","json","result","catch","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { Paper, Typography, TextField, Button } from '@material-ui/core';\n\nconst Login = () => {\n\n    const [signup, setSignup] = useState(false);\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [success, setSuccess] = useState({\n        open: false,\n        message: '',\n    });\n    const [error, setError] = useState({\n        open: false,\n        message: '',\n    });\n\n    const handleSubmit = () => {\n        if (signup) {\n            const data = {\n                username,\n                email,\n                password,\n            };\n            fetch('/api/users/signup', {\n                method: 'POST',\n                body: JSON.stringify(data),\n                headers: { 'Content-Type': 'application/json' },\n            })\n                .then(res => res.json())\n                .then((result) => { setSuccess({ open: true, message: 'Sign up successful!' }); })\n                .catch((error) => { setError({ open: true, message: error }); });\n        } else {\n            const data = {\n                email,\n                password,\n            };\n            fetch('/api/users/login', {\n                method: 'POST',\n                body: JSON.stringify(data),\n                headers: { 'Content-Type': 'application/json' },\n            })\n                .then(res => res.json())\n                .then((result) => { setSuccess({ open: true, message: 'Login Successful!' }); })\n                .catch((error) => { setError({ open: true, message: error }); });\n        }\n    };\n\n    return (\n        <Paper>\n\n            <Typography variant=\"h4\">\n                Login\n            </Typography>\n\n            {/* <TextField\n                variant=\"outlined\"\n                label=\"Username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n            /> */}\n\n            <TextField\n                variant=\"outlined\"\n                label=\"Username\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n            />\n\n            <TextField\n                variant=\"outlined\"\n                label=\"Username\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n            />\n\n            <Button onClick={handleSubmit} variant=\"contained\">\n                <Typography variant=\"h6\">\n                    Submit\n                </Typography>\n            </Button>\n\n            <Button onClick={() => setSignup(!signup)}>\n                <Typography variant=\"body1\">\n                    Not Signed Up?\n                </Typography>\n            </Button>\n        \n        </Paper>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}