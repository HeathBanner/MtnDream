{"ast":null,"code":"var _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Interface.js\";\nimport React, { useContext, Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Grid, Drawer, List, Typography, Divider, ListItem, ListItemIcon, ListItemText, Icon } from '@material-ui/core';\nimport ArticleSelection from './ArticleSelection';\nimport Toolbar from './Toolbar';\nimport Preview from './Preview';\nimport { EditorContext } from '../../Context/EditorContext';\nvar editorSidebar = [{\n  text: 'Title',\n  icon: 'title',\n  param: 'title'\n}, {\n  text: 'Jumbotron',\n  icon: 'image',\n  param: 'jumbotron'\n}, {\n  text: 'Body',\n  icon: 'notes',\n  param: 'currentBody'\n}];\nvar drawerWidth = 240;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      marginTop: 40,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      flexWrap: 'wrap',\n      zIndex: 2\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      top: 60,\n      width: 240,\n      position: 'relative'\n    },\n    content: {\n      flexGrow: 1\n    }\n  };\n});\n\nvar Interface = function Interface() {\n  var classes = useStyles();\n  var holder = useContext(EditorContext);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), holder.editMode ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.root,\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, editorSidebar.map(function (item, index) {\n    return React.createElement(ListItem, {\n      onClick: function onClick() {\n        return holder.handleSectionMode(item.param);\n      },\n      button: true,\n      disabled: !(index === 0 || holder.title.text),\n      key: item.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, item.icon)), React.createElement(ListItemText, {\n      primary: item.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(Preview, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }))) : React.createElement(Grid, {\n    className: classes.root,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(ArticleSelection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })));\n};\n\nexport default Interface;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Interface.js"],"names":["React","useContext","Fragment","makeStyles","CssBaseline","Grid","Drawer","List","Typography","Divider","ListItem","ListItemIcon","ListItemText","Icon","ArticleSelection","Toolbar","Preview","EditorContext","editorSidebar","text","icon","param","drawerWidth","useStyles","theme","root","marginTop","display","justifyContent","alignItems","flexWrap","zIndex","drawer","width","flexShrink","drawerPaper","top","position","content","flexGrow","Interface","classes","holder","editMode","paper","toolbar","map","item","index","handleSectionMode","title"],"mappings":"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","sourcesContent":["import React, { useContext, Fragment } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Grid, Drawer, List, Typography, Divider, ListItem, ListItemIcon, ListItemText, Icon } from '@material-ui/core';\n\nimport ArticleSelection from './ArticleSelection';\nimport Toolbar from './Toolbar';\nimport Preview from './Preview';\n\nimport { EditorContext } from '../../Context/EditorContext';\n\nconst editorSidebar = [\n    {\n        text: 'Title',\n        icon: 'title',\n        param: 'title'\n    },\n    {\n        text: 'Jumbotron',\n        icon: 'image',\n        param: 'jumbotron'\n    },\n    {\n        text: 'Body',\n        icon: 'notes',\n        param: 'currentBody'\n    }\n]\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: 40,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        flexWrap: 'wrap',\n        zIndex: 2\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        top: 60,\n        width: 240,\n        position: 'relative',\n    },\n    content: {\n        flexGrow: 1,\n    },\n}));\n\nconst Interface = () => {\n\n    const classes = useStyles();\n\n    const holder = useContext(EditorContext);\n    \n    return (\n        <Fragment>\n\n                    <CssBaseline />\n                {\n                    holder.editMode\n            \n                        ?\n                    <Fragment>\n\n                    <Grid className={classes.root} item xs={2}>\n\n                        <Drawer\n                            className={classes.drawer}\n                            variant=\"permanent\"\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                        >\n\n                            <div className={classes.toolbar} />\n\n                            <List>\n\n                                {\n                                    editorSidebar.map((item, index) => (\n\n                                        <ListItem \n                                            onClick={() => holder.handleSectionMode(item.param)} \n                                            button\n                                            disabled={!(index === 0 || holder.title.text)}\n                                            key={item.text}\n                                        >\n\n                                            <ListItemIcon>\n\n                                                <Icon>{item.icon}</Icon>\n\n                                            </ListItemIcon>\n\n                                            <ListItemText primary={item.text} />\n\n                                        </ListItem>\n                                    ))\n                                }\n\n                            </List>\n\n                        </Drawer>\n\n\n                        </Grid>\n                        <Grid item xs={10}>\n\n                            {/* <main className={classes.content}> */}\n    \n    \n    \n    \n                                        <Toolbar />\n                                        <Preview />\n    \n    \n                            {/* </main> */}\n                        </Grid>\n\n\n                    </Fragment>\n\n\n                            :\n                        \n                    <Grid className={classes.root} item xs={12}>\n                            \n                            <ArticleSelection />\n                        \n                    </Grid>        \n\n                }\n        </Fragment>\n\n\n    );\n};\n\nexport default Interface;"]},"metadata":{},"sourceType":"module"}