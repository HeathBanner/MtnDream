{"ast":null,"code":"import _regeneratorRuntime from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Contact/Form.js\";\nimport React, { useState, useContext } from 'react';\nimport { MediaContext } from '../../Context/MediaQuery';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { Divider, Grid, Paper, TextField, Typography, Button, Snackbar, SnackbarContent, Slide, Icon, IconButton } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  var _formPaper;\n\n  return {\n    formContainer: {\n      height: '100vh',\n      backgroundColor: '#18121E',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexWrap: 'wrap'\n    },\n    formPaper: (_formPaper = {}, _defineProperty(_formPaper, theme.breakpoints.up('lg'), {\n      width: '50%',\n      padding: '30px 60px'\n    }), _defineProperty(_formPaper, \"width\", '70%'), _defineProperty(_formPaper, \"padding\", 30), _defineProperty(_formPaper, \"display\", 'flex'), _defineProperty(_formPaper, \"justifyContent\", 'center'), _defineProperty(_formPaper, \"alignItems\", 'center'), _defineProperty(_formPaper, \"alignContent\", 'center'), _defineProperty(_formPaper, \"flexWrap\", 'wrap'), _formPaper),\n    formHeader: {\n      color: '#25472e'\n    },\n    input: {\n      width: '100%',\n      marginTop: 20\n    },\n    button: {\n      padding: 10,\n      marginTop: 20,\n      width: '100%',\n      color: 'white',\n      backgroundColor: '#25472e',\n      transition: 'all 0.4s ease',\n      '&:hover': {\n        transform: 'scale(1.01)'\n      }\n    },\n    snackbar: {\n      backgroundColor: green[600]\n    }\n  };\n});\nvar initInfo = {\n  name: '',\n  email: '',\n  phone: '',\n  message: ''\n};\nexport default (function () {\n  var classes = useStyles();\n  var media = useContext(MediaContext);\n\n  var _useState = useState(_objectSpread({}, initInfo)),\n      _useState2 = _slicedToArray(_useState, 2),\n      info = _useState2[0],\n      setInfo = _useState2[1];\n\n  var _useState3 = useState('Your contact information has been sent!'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      status = _useState4[0],\n      setStatus = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      open = _useState6[0],\n      setOpen = _useState6[1];\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var options, res, json;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = {\n                method: 'POST',\n                body: JSON.stringify(info),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context.next = 3;\n              return fetch('/api/contact/contactMe', options);\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              json = _context.sent;\n\n              if (json) {\n                _context.next = 9;\n                break;\n              }\n\n              return _context.abrupt(\"return\", setStatus('Something went wrong!'));\n\n            case 9:\n              setOpen(true);\n              setInfo(_objectSpread({}, initInfo));\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleClose = function handleClose() {\n    return setOpen(false);\n  };\n\n  var slideTransition = function slideTransition(props) {\n    return React.createElement(Slide, Object.assign({}, props, {\n      direction: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(Grid, {\n    className: classes.formContainer,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.formPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.formHeader,\n    variant: media.xs ? 'h4' : 'h2',\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Contact Us!\"), React.createElement(Divider, {\n    style: {\n      width: '70%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Name\",\n    value: info.name,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        name: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Email\",\n    value: info.email,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        email: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Phone\",\n    value: info.phone,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        phone: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Message\",\n    value: info.message,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        message: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.button,\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: media.xs ? 'h6' : 'h5',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Submit\")), React.createElement(Snackbar, {\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: slideTransition,\n    ContentProps: {\n      'aria-describedby': 'message-id'\n    },\n    autoHideDuration: 6000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: classes.snackbar,\n    message: React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, status),\n    action: React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"close\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }))));\n});","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Contact/Form.js"],"names":["React","useState","useContext","MediaContext","makeStyles","green","Divider","Grid","Paper","TextField","Typography","Button","Snackbar","SnackbarContent","Slide","Icon","IconButton","useStyles","theme","formContainer","height","backgroundColor","display","justifyContent","alignItems","flexWrap","formPaper","breakpoints","up","width","padding","formHeader","color","input","marginTop","button","transition","transform","snackbar","initInfo","name","email","phone","message","classes","media","info","setInfo","status","setStatus","open","setOpen","handleSubmit","options","method","body","JSON","stringify","headers","fetch","res","json","handleClose","slideTransition","props","xs","className","textFieldLabels","inputBase","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { MediaContext } from '../../Context/MediaQuery';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport {\n    Divider,\n    Grid,\n    Paper,\n    TextField,\n    Typography,\n    Button,\n    Snackbar,\n    SnackbarContent,\n    Slide,\n    Icon,\n    IconButton\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    formContainer: {\n        height: '100vh',\n        backgroundColor: '#18121E',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n    },\n    formPaper: {\n        [theme.breakpoints.up('lg')]: {\n            width: '50%',\n            padding: '30px 60px'\n        },\n        width: '70%',\n        padding: 30,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap'\n    },\n    formHeader: {\n        color: '#25472e',\n    },\n    input: {\n        width: '100%',\n        marginTop: 20,\n    },\n    button: {\n        padding: 10,\n        marginTop: 20,\n        width: '100%',\n        color: 'white',\n        backgroundColor: '#25472e',\n        transition: 'all 0.4s ease',\n        '&:hover': {\n            transform: 'scale(1.01)',\n        },\n    },\n    snackbar: {\n        backgroundColor: green[600]\n    }\n}));\n\nconst initInfo = {\n    name: '',\n    email: '',\n    phone: '',\n    message: ''\n};\n\nexport default() => {\n\n    const classes = useStyles();\n    const media = useContext(MediaContext);\n\n    const [info, setInfo] = useState({ ...initInfo });\n    const [status, setStatus] = useState('Your contact information has been sent!');\n    const [open, setOpen] = useState(false);\n\n    const handleSubmit = async () => {\n        const options = {\n            method: 'POST',\n            body: JSON.stringify(info),\n            headers: { 'Content-Type': 'application/json' }\n        };\n        const res = await fetch('/api/contact/contactMe', options);\n        const json = await res.json();\n\n        if (!json) return setStatus('Something went wrong!');\n\n        setOpen(true);\n        setInfo({ ...initInfo });\n    };\n\n    const handleClose = () => setOpen(false);\n\n    const slideTransition = (props) => {\n        return <Slide {...props} direction=\"right\" />;\n    };\n\n    return (\n        <Grid className={classes.formContainer} item xs={12}>\n            <Paper className={classes.formPaper}>\n                <Typography\n                    className={classes.formHeader}\n                    variant={media.xs ? 'h4' : 'h2'}\n                    align=\"center\"\n                >\n                    Contact Us!\n                </Typography>\n\n                <Divider style={{ width: '70%' }} />\n\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Name\"\n                    value={info.name}\n                    onChange={(e) => setInfo({ ...info, name: e.target.value })}\n                />\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Email\"\n                    value={info.email}\n                    onChange={(e) => setInfo({ ...info, email: e.target.value })}\n                />\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Phone\"\n                    value={info.phone}\n                    onChange={(e) => setInfo({ ...info, phone: e.target.value })}\n                />\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Message\"\n                    value={info.message}\n                    onChange={(e) => setInfo({ ...info, message: e.target.value })}\n                />\n\n                <Button\n                    className={classes.button}\n                    onClick={handleSubmit}\n                >\n                    <Typography variant={media.xs ? 'h6' : 'h5'}>\n                        Submit\n                    </Typography>\n                </Button>\n\n                <Snackbar \n                    open={open}\n                    onClose={handleClose}\n                    TransitionComponent={ slideTransition }\n                    ContentProps={{ 'aria-describedby': 'message-id' }}\n                    autoHideDuration={6000}\n                >\n                    <SnackbarContent \n                        className={classes.snackbar}\n                        message={ \n                            <Typography variant=\"h6\" align=\"center\">\n                                {status}\n                            </Typography>\n                        }\n                        action={\n                            <IconButton color=\"inherit\" onClick={handleClose}>\n                                <Icon>close</Icon>\n                            </IconButton>\n                        }\n                    />\n                </Snackbar>\n            </Paper>\n        </Grid>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}