{"ast":null,"code":"var _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Preview.js\";\nimport React, { useContext, useEffect, Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\nimport { EditorContext } from '../../Context/EditorContext';\n\nvar Preview = function Preview() {\n  var holder = useContext(EditorContext);\n  var useStyles = makeStyles(function (theme) {\n    return {\n      typo: {\n        fontFamily: \"\".concat(holder.title.font, \", Helvetica, Arial, sans-serif\"),\n        fontWeight: holder.title.bold ? 'bold' : 'normal',\n        fontStyle: holder.title.italic ? 'italic' : 'normal',\n        textDecoration: holder.title.underline ? 'underline' : 'none',\n        textAlign: holder.title.justify,\n        color: holder.title.color,\n        backgroundColor: holder.title.highlight ? '#ffff00' : 'none'\n      },\n      body: {\n        fontFamily: \"\".concat(holder.currentBody.font, \", Helvetica, Arial, sans-serif\"),\n        fontWeight: holder.currentBody.bold ? 'bold' : 'normal',\n        fontStyle: holder.currentBody.italic ? 'italic' : 'normal',\n        textDecoration: holder.currentBody.underline ? 'underline' : 'none',\n        textAlign: holder.currentBody.justify,\n        color: holder.currentBody.color,\n        backgroundColor: holder.currentBody.highlight ? '#ffff00' : 'none'\n      }\n    };\n  });\n  var classes = useStyles();\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.typo,\n    variant: holder.title.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, holder.title.text), holder.jumbotron ? React.createElement(\"img\", {\n    style: {\n      width: '100%',\n      height: 'auto'\n    },\n    src: holder.jumbotron,\n    alt: holder.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }) : '', holder.body.map(function (section, index) {\n    return React.createElement(Typography, {\n      onClick: function onClick() {\n        return holder.editBodyEl(index);\n      },\n      style: {\n        fontFamily: \"\".concat(section.font, \", Helvetica, Arial, sans-serif\"),\n        fontWeight: section.bold ? 'bold' : 'normal',\n        fontStyle: section.italic ? 'italic' : 'normal',\n        textDecoration: section.underline ? 'underline' : 'none',\n        color: section.color,\n        backgroundColor: section.highlight ? '#ffff00' : 'none'\n      },\n      variant: section.textStyle,\n      align: section.justify,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, section.text);\n  }), React.createElement(Typography, {\n    className: classes.body,\n    variant: holder.currentBody.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, holder.currentBody.text)));\n};\n\nexport default Preview;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Preview.js"],"names":["React","useContext","useEffect","Fragment","makeStyles","Grid","Typography","EditorContext","Preview","holder","useStyles","theme","typo","fontFamily","title","font","fontWeight","bold","fontStyle","italic","textDecoration","underline","textAlign","justify","color","backgroundColor","highlight","body","currentBody","classes","textStyle","text","jumbotron","width","height","map","section","index","editBodyEl"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, Fragment } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\n\nimport { EditorContext } from '../../Context/EditorContext';\n\nconst Preview = () => {\n\n    const holder = useContext(EditorContext);\n\n    const useStyles = makeStyles(theme => ({\n        typo: {\n            fontFamily: `${holder.title.font}, Helvetica, Arial, sans-serif`,\n            fontWeight: holder.title.bold ? 'bold' : 'normal',\n            fontStyle: holder.title.italic ? 'italic' : 'normal',\n            textDecoration: holder.title.underline ? 'underline' : 'none',\n            textAlign: holder.title.justify,\n            color: holder.title.color,\n            backgroundColor: holder.title.highlight ? '#ffff00' : 'none'\n        },\n        body: {\n            fontFamily: `${holder.currentBody.font}, Helvetica, Arial, sans-serif`,\n            fontWeight: holder.currentBody.bold ? 'bold' : 'normal',\n            fontStyle: holder.currentBody.italic ? 'italic' : 'normal',\n            textDecoration: holder.currentBody.underline ? 'underline' : 'none',\n            textAlign: holder.currentBody.justify,\n            color: holder.currentBody.color,\n            backgroundColor: holder.currentBody.highlight ? '#ffff00' : 'none' \n        },\n    }));\n    \n    const classes = useStyles();\n\n    return (\n        \n        <Grid container>\n\n            <Grid item xs={12}>\n\n\n\n                <Typography className={classes.typo} variant={holder.title.textStyle}>\n                    {holder.title.text}\n                </Typography>\n\n                {\n                    holder.jumbotron\n                        ?\n                    <img style={{ width: '100%', height: 'auto' }} src={holder.jumbotron} alt={holder.title} />\n                        :\n                    ''\n                }\n                \n                { \n                    holder.body.map((section, index) => {\n                        return (\n\n                            <Typography\n                                onClick={() => holder.editBodyEl(index)}\n                                style={{\n                                    fontFamily: `${section.font}, Helvetica, Arial, sans-serif`,\n                                    fontWeight: section.bold ? 'bold' : 'normal',\n                                    fontStyle: section.italic ? 'italic' : 'normal',\n                                    textDecoration: section.underline ? 'underline' : 'none',\n                                    color: section.color,\n                                    backgroundColor: section.highlight ? '#ffff00' : 'none'                        \n                                }}\n                                variant={section.textStyle}\n                                align={section.justify}\n                                key={index}\n                            >\n                                {section.text}\n                            </Typography>\n                        )\n                    })\n                }\n\n                <Typography className={classes.body} variant={holder.currentBody.textStyle}>\n                    {holder.currentBody.text}\n                </Typography>\n\n            </Grid>\n\n        </Grid>\n    );\n};\n\nexport default Preview;"]},"metadata":{},"sourceType":"module"}