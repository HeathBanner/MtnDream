{"ast":null,"code":"import _objectSpread from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Navigation/Drawer.js\";\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, Icon, IconButton } from '@material-ui/core';\nimport { MediaContext } from '../../Context/MediaQuery';\nvar useStyles = makeStyles(function (theme) {\n  var _list;\n\n  return {\n    drawer: {\n      background: 'linear-gradient(135deg, rgb(26, 118, 30) 0%, rgb(26, 118, 30) 23%,rgb(72, 215, 80) 23%, rgb(72, 215, 80) 28%,rgb(34, 176, 39) 28%, rgb(34, 176, 39) 35%,rgb(42, 126, 41) 35%, rgb(42, 126, 41) 100%)'\n    },\n    menuIcon: {\n      color: 'white',\n      transition: 'transform .4s ease',\n      '&:hover': {\n        transform: 'scale(1.1)'\n      }\n    },\n    list: (_list = {}, _defineProperty(_list, theme.breakpoints.up('lg'), {\n      width: 300\n    }), _defineProperty(_list, theme.breakpoints.down('xs'), {\n      width: 150\n    }), _defineProperty(_list, \"width\", 250), _list),\n    listItems: {\n      '&:hover': {\n        transform: 'translate(20px, 0px)'\n      },\n      transition: 'transform .4s ease',\n      marginBottom: 20,\n      padding: '12px 22px',\n      color: 'white',\n      background: 'rgb(0, 0, 0, 0.2)'\n    },\n    iconButtons: _defineProperty({}, theme.breakpoints.down('xs'), {\n      minWidth: 26\n    }),\n    menuList: {\n      marginTop: '30px'\n    },\n    fullList: {\n      width: 'auto'\n    }\n  };\n});\nvar drawerList = [{\n  text: 'Home',\n  icon: 'home',\n  link: '/'\n}, // {\n//   text: 'Explore',\n//   icon: 'explore',\n//   link: '/explore'\n// },\n{\n  text: 'Contact',\n  icon: 'contact_phone',\n  link: '/contact'\n}];\n\nvar TemporaryDrawer = function TemporaryDrawer(props) {\n  var classes = useStyles();\n  var media = useContext(MediaContext);\n\n  var _React$useState = React.useState({\n    left: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var getVariant = function getVariant() {\n    switch (true) {\n      case media.xs:\n        return 'h6';\n\n      case media.sm:\n        return 'h5';\n\n      case media.md:\n        return 'h5';\n\n      default:\n        return 'h4';\n    }\n  };\n\n  var toggleDrawer = function toggleDrawer(side, open) {\n    return function (event) {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      } else {\n        setState(_objectSpread({}, state, {\n          left: open\n        }));\n      }\n    };\n  };\n\n  var sideList = function sideList() {\n    return React.createElement(\"div\", {\n      className: classes.list,\n      role: \"presentation\",\n      onClick: toggleDrawer('left', false),\n      onKeyDown: toggleDrawer('left', false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(List, {\n      className: classes.menuList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, drawerList.map(function (item) {\n      return React.createElement(Link, {\n        key: item.text,\n        style: {\n          textDecoration: 'none',\n          color: 'black'\n        },\n        to: item.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        className: classes.listItems,\n        button: true,\n        key: item.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        className: classes.iconButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        style: {\n          color: 'white'\n        },\n        fontSize: !media.sm ? 'large' : 'small',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, item.icon)), React.createElement(ListItemText, {\n        primary: item.text,\n        primaryTypographyProps: {\n          variant: getVariant()\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })));\n    })));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: toggleDrawer('left', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    className: classes.menuIcon,\n    fontSize: props.query ? 'small' : 'large',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"menu\")), React.createElement(Drawer, {\n    PaperProps: {\n      style: {\n        background: 'linear-gradient(135deg, rgb(26, 118, 30) 0%, rgb(26, 118, 30) 23%,rgb(72, 215, 80) 23%, rgb(72, 215, 80) 28%,rgb(34, 176, 39) 28%, rgb(34, 176, 39) 35%,rgb(42, 126, 41) 35%, rgb(42, 126, 41) 100%)'\n      }\n    },\n    open: state.left,\n    onClose: toggleDrawer('left', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, sideList('left')));\n};\n\nexport default TemporaryDrawer;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Navigation/Drawer.js"],"names":["React","useContext","Link","makeStyles","Drawer","List","ListItem","ListItemIcon","ListItemText","Icon","IconButton","MediaContext","useStyles","theme","drawer","background","menuIcon","color","transition","transform","list","breakpoints","up","width","down","listItems","marginBottom","padding","iconButtons","minWidth","menuList","marginTop","fullList","drawerList","text","icon","link","TemporaryDrawer","props","classes","media","useState","left","state","setState","getVariant","xs","sm","md","toggleDrawer","side","open","event","type","key","sideList","map","item","textDecoration","iconButton","variant","query","style"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,YAAjC,EAA+CC,YAA/C,EAA6DC,IAA7D,EAAmEC,UAAnE,QAAqF,mBAArF;AAEA,SAASC,YAAT,QAA6B,0BAA7B;AAEA,IAAMC,SAAS,GAAGT,UAAU,CAAC,UAAAU,KAAK;AAAA;;AAAA,SAAK;AACrCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,UAAU,EAAE;AADN,KAD6B;AAIrCC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE,OADC;AAERC,MAAAA,UAAU,EAAE,oBAFJ;AAGR,iBAAW;AACTC,QAAAA,SAAS,EAAE;AADF;AAHH,KAJ2B;AAWrCC,IAAAA,IAAI,sCACDP,KAAK,CAACQ,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CADC,EAC4B;AAC5BC,MAAAA,KAAK,EAAE;AADqB,KAD5B,0BAIDV,KAAK,CAACQ,WAAN,CAAkBG,IAAlB,CAAuB,IAAvB,CAJC,EAI8B;AAC9BD,MAAAA,KAAK,EAAE;AADuB,KAJ9B,mCAOK,GAPL,SAXiC;AAoBrCE,IAAAA,SAAS,EAAE;AACT,iBAAW;AACTN,QAAAA,SAAS,EAAE;AADF,OADF;AAITD,MAAAA,UAAU,EAAE,oBAJH;AAKTQ,MAAAA,YAAY,EAAE,EALL;AAMTC,MAAAA,OAAO,EAAE,WANA;AAOTV,MAAAA,KAAK,EAAE,OAPE;AAQTF,MAAAA,UAAU,EAAE;AARH,KApB0B;AA8BrCa,IAAAA,WAAW,sBACRf,KAAK,CAACQ,WAAN,CAAkBG,IAAlB,CAAuB,IAAvB,CADQ,EACuB;AAC9BK,MAAAA,QAAQ,EAAE;AADoB,KADvB,CA9B0B;AAmCrCC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,SAAS,EAAE;AADH,KAnC2B;AAsCrCC,IAAAA,QAAQ,EAAE;AACRT,MAAAA,KAAK,EAAE;AADC;AAtC2B,GAAL;AAAA,CAAN,CAA5B;AA2CA,IAAMU,UAAU,GAAG,CACjB;AACEC,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,IAAI,EAAE;AAHR,CADiB,EAMjB;AACA;AACA;AACA;AACA;AACA;AACEF,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,IAAI,EAAE,eAFR;AAGEC,EAAAA,IAAI,EAAE;AAHR,CAXiB,CAAnB;;AAuBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAE/B,MAAMC,OAAO,GAAG3B,SAAS,EAAzB;AACA,MAAM4B,KAAK,GAAGvC,UAAU,CAACU,YAAD,CAAxB;;AAH+B,wBAKLX,KAAK,CAACyC,QAAN,CAAe;AACvCC,IAAAA,IAAI,EAAE;AADiC,GAAf,CALK;AAAA;AAAA,MAKxBC,KALwB;AAAA,MAKjBC,QALiB;;AAS/B,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAEvB,YAAQ,IAAR;AAEE,WAAKL,KAAK,CAACM,EAAX;AACE,eAAO,IAAP;;AACF,WAAKN,KAAK,CAACO,EAAX;AACE,eAAO,IAAP;;AACF,WAAKP,KAAK,CAACQ,EAAX;AACE,eAAO,IAAP;;AACF;AACE,eAAO,IAAP;AATJ;AAWD,GAbD;;AAeA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,IAAP;AAAA,WAAgB,UAAAC,KAAK,EAAI;AAE5C,UAAIA,KAAK,CAACC,IAAN,KAAe,SAAf,KAA6BD,KAAK,CAACE,GAAN,KAAc,KAAd,IAAuBF,KAAK,CAACE,GAAN,KAAc,OAAlE,CAAJ,EAAgF;AAC9E;AACD,OAFD,MAGK;AACHV,QAAAA,QAAQ,mBAAMD,KAAN;AAAaD,UAAAA,IAAI,EAAES;AAAnB,WAAR;AACD;AACF,KARoB;AAAA,GAArB;;AAUA,MAAMI,QAAQ,GAAG,SAAXA,QAAW;AAAA,WAEf;AACE,MAAA,SAAS,EAAEhB,OAAO,CAACnB,IADrB;AAEE,MAAA,IAAI,EAAC,cAFP;AAGE,MAAA,OAAO,EAAE6B,YAAY,CAAC,MAAD,EAAS,KAAT,CAHvB;AAIE,MAAA,SAAS,EAAEA,YAAY,CAAC,MAAD,EAAS,KAAT,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEV,OAAO,CAACT,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGIG,UAAU,CAACuB,GAAX,CAAe,UAACC,IAAD;AAAA,aAEb,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACvB,IAAhB;AAAsB,QAAA,KAAK,EAAE;AAACwB,UAAAA,cAAc,EAAE,MAAjB;AAAyBzC,UAAAA,KAAK,EAAE;AAAhC,SAA7B;AAAuE,QAAA,EAAE,EAAEwC,IAAI,CAACrB,IAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAEG,OAAO,CAACd,SAA7B;AAAwC,QAAA,MAAM,MAA9C;AAA+C,QAAA,GAAG,EAAEgC,IAAI,CAACvB,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAEK,OAAO,CAACoB,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAE1C,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAiC,QAAA,QAAQ,EAAE,CAACuB,KAAK,CAACO,EAAP,GAAY,OAAZ,GAAsB,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2EU,IAAI,CAACtB,IAAhF,CADF,CAFF,EAME,oBAAC,YAAD;AACE,QAAA,OAAO,EAAEsB,IAAI,CAACvB,IADhB;AAEE,QAAA,sBAAsB,EAAE;AACtB0B,UAAAA,OAAO,EAAEf,UAAU;AADG,SAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAFF,CAFa;AAAA,KAAf,CAHJ,CANF,CAFe;AAAA,GAAjB;;AAuCA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEI,YAAY,CAAC,MAAD,EAAS,IAAT,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEV,OAAO,CAACvB,QAAzB;AAAmC,IAAA,QAAQ,EAAEsB,KAAK,CAACuB,KAAN,GAAc,OAAd,GAAwB,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CAFF,EAUE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE;AACL/C,QAAAA,UAAU,EAAE;AADP;AADG,KADd;AAME,IAAA,IAAI,EAAE4B,KAAK,CAACD,IANd;AAOE,IAAA,OAAO,EAAEO,YAAY,CAAC,MAAD,EAAS,KAAT,CAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGM,QAAQ,CAAC,MAAD,CAVX,CAVF,CAFF;AA4BD,CArGD;;AAuGA,eAAelB,eAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, Icon, IconButton } from '@material-ui/core';\n\nimport { MediaContext } from '../../Context/MediaQuery';\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    background: 'linear-gradient(135deg, rgb(26, 118, 30) 0%, rgb(26, 118, 30) 23%,rgb(72, 215, 80) 23%, rgb(72, 215, 80) 28%,rgb(34, 176, 39) 28%, rgb(34, 176, 39) 35%,rgb(42, 126, 41) 35%, rgb(42, 126, 41) 100%)',\n  },\n  menuIcon: {\n    color: 'white',\n    transition: 'transform .4s ease',\n    '&:hover': {\n      transform: 'scale(1.1)'\n    },\n  },\n  list: {\n    [theme.breakpoints.up('lg')]: {\n      width: 300\n    },\n    [theme.breakpoints.down('xs')]: {\n      width: 150\n    },\n    width: 250,\n  },\n  listItems: {\n    '&:hover': {\n      transform: 'translate(20px, 0px)'\n    },\n    transition: 'transform .4s ease',\n    marginBottom: 20,\n    padding: '12px 22px',\n    color: 'white',\n    background: 'rgb(0, 0, 0, 0.2)'\n  },\n  iconButtons: {\n    [theme.breakpoints.down('xs')]: {\n      minWidth: 26\n    },\n  },\n  menuList: {\n    marginTop: '30px',\n  },\n  fullList: {\n    width: 'auto',\n  },\n}));\n\nconst drawerList = [\n  {\n    text: 'Home',\n    icon: 'home',\n    link: '/'\n  },\n  // {\n  //   text: 'Explore',\n  //   icon: 'explore',\n  //   link: '/explore'\n  // },\n  {\n    text: 'Contact',\n    icon: 'contact_phone',\n    link: '/contact'\n  },\n  // {\n  //   text: 'Blog',\n  //   icon: 'vertical_split',\n  //   link: '/blog'\n  // }\n]\n\nconst TemporaryDrawer = props => {\n\n  const classes = useStyles();\n  const media = useContext(MediaContext);\n\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const getVariant = () => {\n\n    switch (true) {\n\n      case media.xs:\n        return 'h6';\n      case media.sm:\n        return 'h5';\n      case media.md:\n        return 'h5';\n      default:\n        return 'h4';\n    }\n  };\n\n  const toggleDrawer = (side, open) => event => {\n\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    else {\n      setState({ ...state, left: open });\n    }\n  };\n\n  const sideList = () => (\n\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer('left', false)}\n      onKeyDown={toggleDrawer('left', false)}\n    >\n      <List className={classes.menuList}>\n\n        {\n          drawerList.map((item) => (\n\n            <Link key={item.text} style={{textDecoration: 'none', color: 'black'}} to={item.link}>\n              \n              <ListItem className={classes.listItems} button key={item.text}>\n              \n                <ListItemIcon className={classes.iconButton}>\n                  <Icon style={{ color: 'white' }} fontSize={!media.sm ? 'large' : 'small'}>{item.icon}</Icon>\n                </ListItemIcon>\n                \n                <ListItemText \n                  primary={item.text} \n                  primaryTypographyProps={{\n                    variant: getVariant(),\n                  }}\n                />\n              \n              </ListItem>\n\n            </Link>\n          ))\n        }\n\n      </List>\n\n    </div>\n  );\n\n  return (\n\n    <div>\n\n      <IconButton onClick={toggleDrawer('left', true)}>\n\n        <Icon className={classes.menuIcon} fontSize={props.query ? 'small' : 'large'}>\n          menu\n        </Icon>\n\n      </IconButton>\n      \n      <Drawer \n        PaperProps={{ \n          style: {\n            background: 'linear-gradient(135deg, rgb(26, 118, 30) 0%, rgb(26, 118, 30) 23%,rgb(72, 215, 80) 23%, rgb(72, 215, 80) 28%,rgb(34, 176, 39) 28%, rgb(34, 176, 39) 35%,rgb(42, 126, 41) 35%, rgb(42, 126, 41) 100%)',\n          }\n        }}\n        open={state.left} \n        onClose={toggleDrawer('left', false)}\n      >\n        \n        {sideList('left')}\n      \n      </Drawer>\n\n    </div>\n  );\n};\n\nexport default TemporaryDrawer;"]},"metadata":{},"sourceType":"module"}