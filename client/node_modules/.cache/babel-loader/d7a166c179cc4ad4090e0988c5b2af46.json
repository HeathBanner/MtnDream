{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Toolbar.js\";\nimport React, { useContext, useState } from 'react';\nimport TextSize from './Tools/TextSize';\nimport Font from './Tools/Font';\nimport Styling from './Tools/Styling';\nimport Justify from './Tools/Justify';\nimport Margin from './Tools/Margin';\nimport { EditorContext } from '../../Context/EditorContext';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { Grid, Icon, Fab, Button, Snackbar, SnackbarContent } from '@material-ui/core';\nvar months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      padding: 20,\n      background: '#ffffff',\n      position: 'fixed',\n      top: 70,\n      zIndex: 2,\n      boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)'\n    },\n    editorTools: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    input: {\n      width: '80%'\n    },\n    save: {\n      position: 'relative',\n      backgroundColor: 'rgb(0, 0, 0, 0.2)',\n      transition: 'all 0.4s ease',\n      '&:hover': {\n        transform: 'scale(1.03)',\n        backgroundColor: 'rgb(0, 0, 0, 0.05)'\n      }\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n});\n\nvar Toolbar = function Toolbar() {\n  var classes = useStyles();\n  var holder = useContext(EditorContext);\n\n  var _useState = useState({\n    open: false,\n    message: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState({\n    open: false,\n    message: 'Article saved!'\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      success = _useState4[0],\n      setSuccess = _useState4[1];\n\n  var closeError = function closeError() {\n    setError({\n      open: false,\n      message: ''\n    });\n  };\n\n  var closeSuccess = function closeSuccess() {\n    setSuccess(false);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var now = new Date();\n    var date = {\n      parsedDate: \"\".concat(months[now.getMonth()], \" \").concat(now.getDate()),\n      epoch: now.getTime()\n    };\n    var data = {\n      title: holder.title,\n      description: holder.description,\n      readLength: holder.readLengthreadLength,\n      jumbotron: holder.jumbotron,\n      body: holder.body,\n      date: date\n    };\n    fetch('/api/editors/newArticle', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      if (result.error) {\n        return setError(result.error);\n      }\n\n      setSuccess(true);\n    }).catch(function (error) {\n      setError(error);\n    });\n  };\n\n  var handleChanges = function handleChanges() {\n    var data = {\n      title: holder.title,\n      description: holder.description,\n      readLength: holder.readLengthreadLength,\n      jumbotron: holder.jumbotron,\n      body: holder.body\n    };\n    fetch('/api/editors/saveChanges', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      if (result.error) {\n        return setError(result.error);\n      }\n\n      setSuccess(true);\n    }).catch(function (error) {\n      return setError(error);\n    });\n  };\n\n  return React.createElement(Grid, {\n    className: classes.container,\n    justify: \"center\",\n    alignItems: \"center\",\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, holder.title.isPublished ? React.createElement(Fab, {\n    className: classes.save,\n    onClick: handleChanges,\n    variant: \"extended\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"save\"), React.createElement(Typography, {\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Save\")) : React.createElement(Fab, {\n    className: classes.save,\n    onClick: handleSubmit,\n    variant: \"extended\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"save\"), React.createElement(Typography, {\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Publish\")), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    open: error.open,\n    autoHideDuration: 6000,\n    onClose: closeError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: classes.error,\n    message: React.createElement(Typography, {\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"error\"), error.message),\n    action: React.createElement(Button, {\n      onClick: closeError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"close\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: function onClick() {\n      return setError({\n        open: true,\n        message: 'You dun messed up...'\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"CLick meh\")), React.createElement(Grid, {\n    className: classes.editorTools,\n    item: true,\n    xs: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(TextSize, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(Font, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(Styling, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(Justify, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), React.createElement(Margin, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })));\n};\n\nexport default Toolbar;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Toolbar.js"],"names":["React","useContext","useState","TextSize","Font","Styling","Justify","Margin","EditorContext","makeStyles","Typography","Grid","Icon","Fab","Button","Snackbar","SnackbarContent","months","useStyles","theme","container","padding","background","position","top","zIndex","boxShadow","editorTools","display","justifyContent","alignItems","input","width","save","backgroundColor","transition","transform","error","palette","dark","message","Toolbar","classes","holder","open","setError","success","setSuccess","closeError","closeSuccess","handleSubmit","now","Date","date","parsedDate","getMonth","getDate","epoch","getTime","data","title","description","readLength","readLengthreadLength","jumbotron","body","fetch","method","JSON","stringify","headers","then","res","json","result","catch","handleChanges","isPublished","marginLeft","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\n\nimport TextSize from './Tools/TextSize';\nimport Font from './Tools/Font';\nimport Styling from './Tools/Styling';\nimport Justify from './Tools/Justify';\nimport Margin from './Tools/Margin';\n\nimport { EditorContext } from '../../Context/EditorContext';\n\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { Grid, Icon, Fab, Button, Snackbar, SnackbarContent } from '@material-ui/core';\n\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        padding: 20,\n        background: '#ffffff',\n        position: 'fixed',\n        top: 70,\n        zIndex: 2,\n        boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)',\n    },\n    editorTools: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    input: {\n        width: '80%'\n    },\n    save: {\n        position: 'relative',\n        backgroundColor: 'rgb(0, 0, 0, 0.2)',\n        transition: 'all 0.4s ease',\n        '&:hover': {\n            transform: 'scale(1.03)',\n            backgroundColor: 'rgb(0, 0, 0, 0.05)',\n        },\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\nconst Toolbar = () => {\n\n    const classes = useStyles();\n    const holder = useContext(EditorContext);\n\n    const [error, setError] = useState({\n        open: false,\n        message: '',\n    });\n    const [success, setSuccess] = useState({\n        open: false,\n        message: 'Article saved!'\n    });\n\n    const closeError = () => { setError({ open: false, message: '' }); };\n\n    const closeSuccess = () => { setSuccess(false); };\n\n    const handleSubmit = () => {\n        const now = new Date();\n        const date = {\n            parsedDate: `${months[now.getMonth()]} ${now.getDate()}`,\n            epoch: now.getTime(),\n        };\n        const data = {\n            title: holder.title,\n            description: holder.description,\n            readLength: holder.readLengthreadLength,\n            jumbotron: holder.jumbotron,\n            body: holder.body,\n            date,\n        };\n        fetch('/api/editors/newArticle',{\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(res => res.json())\n            .then((result) => {\n                if (result.error) { return setError(result.error); }\n                setSuccess(true);\n            })\n            .catch((error) => { setError(error); });\n    };\n\n    const handleChanges = () => {\n        const data = {\n            title: holder.title,\n            description: holder.description,\n            readLength: holder.readLengthreadLength,\n            jumbotron: holder.jumbotron,\n            body: holder.body,\n        };\n        fetch('/api/editors/saveChanges', {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(res => res.json())\n            .then((result) => {\n                if (result.error) { return setError(result.error); }\n                setSuccess(true);\n            })\n            .catch((error) => { return setError(error); });\n    };\n\n    return (\n        <Grid className={classes.container} justify=\"center\" alignItems=\"center\" container>\n\n            <Grid item xs={1}>\n\n                    {\n                        holder.title.isPublished\n                            ?\n                        <Fab className={classes.save} onClick={handleChanges} variant=\"extended\">\n                            <Icon>save</Icon>\n                            <Typography style={{ marginLeft: 10 }}>\n                                Save\n                            </Typography>\n                        </Fab>\n                            :\n                        <Fab className={classes.save} onClick={handleSubmit} variant=\"extended\">\n                            <Icon>save</Icon>\n                            <Typography style={{ marginLeft: 10 }}>\n                                Publish\n                            </Typography>\n                        </Fab>\n                    }\n\n                    <Snackbar\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                        }}\n                        open={error.open}\n                        autoHideDuration={6000}\n                        onClose={closeError}\n                    >\n                        <SnackbarContent\n                            className={classes.error}\n                            message={\n                                <Typography className={classes.message}>\n                                    <Icon>error</Icon>\n                                    {error.message}\n                                </Typography>\n                            }\n                            action={\n                                <Button onClick={closeError}>\n                                    <Icon>close</Icon>\n                                </Button>\n                            }\n                        />\n                    </Snackbar>\n\n                    <Button onClick={() => setError({ open: true, message: 'You dun messed up...' })}>\n                            CLick meh\n                    </Button>\n\n            </Grid>\n            <Grid className={classes.editorTools} item xs={11}>\n\n                <TextSize />\n                \n                <Font />\n\n                <Styling />\n\n                <Justify />\n\n                <Margin />\n\n            </Grid>\n\n        </Grid>\n    );\n};\n\nexport default Toolbar;\n"]},"metadata":{},"sourceType":"module"}