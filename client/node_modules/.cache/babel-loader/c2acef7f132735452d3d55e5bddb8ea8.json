{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/TextSize.js\";\nimport React, { useState, useContext } from 'react';\nimport { Menu, MenuItem, Button, Icon, Typography } from '@material-ui/core';\nimport { EditorContext } from '../../../Context/EditorContext';\nvar textOptions = [{\n  cb: 'h1'\n}, {\n  cb: 'h2'\n}, {\n  cb: 'h3'\n}, {\n  cb: 'h4'\n}, {\n  cb: 'h5'\n}, {\n  cb: 'h6'\n}, {\n  cb: 'subtitle1'\n}, {\n  cb: 'subtitle2'\n}, {\n  cb: 'body1'\n}, {\n  cb: 'body2'\n}, {\n  cb: 'caption'\n}, {\n  cb: 'button'\n}, {\n  cb: 'overline'\n}, {\n  cb: 'srOnly'\n}, {\n  cb: 'inherit'\n}];\nexport default (function (_ref) {\n  var margin = _ref.margin,\n      xs = _ref.xs;\n  var holder = useContext(EditorContext);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      anchorEl = _useState2[0],\n      setAnchorEl = _useState2[1];\n\n  var handleOpen = function handleOpen(e) {\n    return setAnchorEl(e.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    return setAnchorEl(null);\n  };\n\n  var wrapper = function wrapper(newStyle) {\n    holder.handleTextStyle(newStyle);\n    handleClose();\n  };\n\n  var sizeSwitch = function sizeSwitch() {\n    switch (holder.sectionMode.el) {\n      case 'body':\n        return React.createElement(Button, {\n          style: {\n            marginRight: margin\n          },\n          onClick: handleOpen,\n          variant: \"contained\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: xs ? 'subtitle1' : 'subtitle1',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, holder[holder.sectionMode.el][holder.sectionMode.index].textStyle));\n\n      case 'jumbotron':\n        return React.createElement(Button, {\n          style: {\n            marginRight: margin\n          },\n          disabled: true,\n          variant: \"contained\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"lock\"));\n\n      case 'image':\n        return React.createElement(Button, {\n          style: {\n            marginRight: margin\n          },\n          disabled: true,\n          variant: \"contained\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"lock\"));\n\n      case 'readLength':\n        return React.createElement(Button, {\n          style: {\n            marginRight: margin\n          },\n          disabled: true,\n          variant: \"contained\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"lock\"));\n\n      default:\n        return React.createElement(Button, {\n          style: {\n            marginRight: margin\n          },\n          onClick: handleOpen,\n          variant: \"contained\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: xs ? 'subtitle2' : 'subtitle2',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, holder[holder.sectionMode.el].textStyle));\n    }\n  };\n\n  return React.createElement(React.Fragment, null, sizeSwitch(), React.createElement(Menu, {\n    id: \"textSize\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, textOptions.map(function (item) {\n    return React.createElement(MenuItem, {\n      key: item.cb,\n      onClick: function onClick() {\n        return wrapper(item.cb);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, item.cb);\n  })));\n});","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/TextSize.js"],"names":["React","useState","useContext","Menu","MenuItem","Button","Icon","Typography","EditorContext","textOptions","cb","margin","xs","holder","anchorEl","setAnchorEl","handleOpen","e","currentTarget","handleClose","wrapper","newStyle","handleTextStyle","sizeSwitch","sectionMode","el","marginRight","index","textStyle","Boolean","map","item"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\n\nimport {\n    Menu,\n    MenuItem,\n    Button,\n    Icon,\n    Typography\n} from '@material-ui/core';\n\nimport { EditorContext } from '../../../Context/EditorContext';\n\nconst textOptions = [\n    {\n        cb: 'h1'\n    },\n    {\n        cb: 'h2'\n    },\n    {\n        cb: 'h3'\n    },\n    {\n        cb: 'h4'\n    },\n    {\n        cb: 'h5'\n    },\n    {\n        cb: 'h6'\n    },\n    {\n        cb: 'subtitle1'\n    },\n    {\n        cb: 'subtitle2'\n    },\n    {\n        cb: 'body1'\n    },\n    {\n        cb: 'body2'\n    },\n    {\n        cb: 'caption'\n    },\n    {\n        cb: 'button'\n    },\n    {\n        cb: 'overline'\n    },\n    {\n        cb: 'srOnly'\n    },\n    {\n        cb: 'inherit'\n    }\n];\n\nexport default ({ margin, xs }) => {\n    \n    const holder = useContext(EditorContext);\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleOpen = (e) => setAnchorEl(e.currentTarget);\n    const handleClose = () => setAnchorEl(null);\n\n    const wrapper = (newStyle) => {\n        holder.handleTextStyle(newStyle);\n        handleClose();\n    };\n\n    const sizeSwitch = () => {\n        switch (holder.sectionMode.el) {\n            case 'body':\n                return <Button\n                            style={{ marginRight: margin }}\n                            onClick={handleOpen}\n                            variant=\"contained\"\n                        >\n                            <Typography\n                                variant={xs ? 'subtitle1' : 'subtitle1'}\n                            >\n                                {holder[holder.sectionMode.el][holder.sectionMode.index].textStyle}\n                            </Typography>\n                        </Button>;\n            case 'jumbotron':\n                return <Button\n                            style={{ marginRight: margin }}\n                            disabled={true}\n                            variant=\"contained\"\n                        >\n                            <Icon>lock</Icon>\n                        </Button>;\n            case 'image':\n                return <Button \n                            style={{ marginRight: margin }}\n                            disabled={true}\n                            variant=\"contained\"\n                        >\n                            <Icon>lock</Icon>\n                        </Button>;\n            case 'readLength':\n                return <Button\n                            style={{ marginRight: margin }}\n                            disabled={true}\n                            variant=\"contained\"\n                        >\n                            <Icon>lock</Icon>\n                        </Button>;\n            default:\n                return <Button\n                            style={{ marginRight: margin }}\n                            onClick={handleOpen}\n                            variant=\"contained\"\n                        >\n                            <Typography\n                                variant={xs ? 'subtitle2' : 'subtitle2'}\n                            >\n                                {holder[holder.sectionMode.el].textStyle}\n                            </Typography>\n                        </Button>;\n        }\n    };\n\n    return (\n        <>\n            {sizeSwitch()}\n\n            <Menu\n                id=\"textSize\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {textOptions.map((item) => {\n                    return (\n                        <MenuItem key={item.cb} onClick={() => wrapper(item.cb)}>\n                            {item.cb}\n                        </MenuItem>\n                    );\n                })}    \n            </Menu>\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}