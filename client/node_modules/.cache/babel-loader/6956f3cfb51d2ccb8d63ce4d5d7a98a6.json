{"ast":null,"code":"var _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Templates/ArticleTemplate.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport profilePhoto from '../../../resources/avatar';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Avatar } from '@material-ui/core';\nvar useStyles = makeStyles(function () {\n  return {\n    paper: {\n      width: '70%',\n      marginTop: 40,\n      padding: 30,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      cursor: 'pointer',\n      boxShadow: '2px 2px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\n      borderRadius: 10,\n      backgroundColor: '#fff',\n      textDecoration: 'none',\n      color: 'inherit'\n    },\n    infoContainer: {\n      position: 'relative',\n      height: 60,\n      marginTop: 20,\n      paddingLeft: 80,\n      display: 'inline-flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      alignContent: 'center',\n      flexWrap: 'wrap',\n      flexBasis: 'auto'\n    },\n    avatar: {\n      height: 60,\n      width: 60,\n      position: 'absolute',\n      top: 0,\n      left: 0\n    }\n  };\n});\nexport default (function (_ref) {\n  var title = _ref.title,\n      jumbotron = _ref.jumbotron,\n      description = _ref.description,\n      date = _ref.date,\n      readLength = _ref.readLength;\n  var classes = useStyles();\n  var imgHelper = \"data:image/jpeg;base64,\";\n  if (!jumbotron.src) return \"\";\n  var data = Buffer.from(jumbotron.src.data, 'binary');\n  return React.createElement(Link, {\n    className: classes.paper,\n    key: title.text,\n    to: \"/editor/\".concat(title.text),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      width: '100%',\n      marginBottom: 20\n    },\n    align: \"center\",\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, title.text), React.createElement(Typography, {\n    style: {\n      width: '100%'\n    },\n    align: \"center\",\n    variant: \"h5\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, description.text), React.createElement(\"div\", {\n    className: classes.infoContainer,\n    style: {\n      width: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    src: \"data:image/jpeg;base64,\".concat(profilePhoto),\n    alt: \"Terri Banner Profile Photo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Terri Banner\")), React.createElement(Typography, {\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"\".concat(date.parsedDate, \" \"), \" \\u2022 \", \" \".concat(readLength.text, \" min read\"))), React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      marginTop: 10,\n      marginBottom: 10,\n      width: '50%'\n    },\n    src: \"\".concat(imgHelper).concat(data),\n    alt: title.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Templates/ArticleTemplate.js"],"names":["React","Link","profilePhoto","makeStyles","Typography","Avatar","useStyles","paper","width","marginTop","padding","display","justifyContent","alignItems","flexWrap","cursor","boxShadow","borderRadius","backgroundColor","textDecoration","color","infoContainer","position","height","paddingLeft","alignContent","flexBasis","avatar","top","left","title","jumbotron","description","date","readLength","classes","imgHelper","src","data","Buffer","from","text","marginBottom","parsedDate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport profilePhoto from '../../../resources/avatar';\n\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Avatar } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n    paper: {\n        width: '70%',\n        marginTop: 40,\n        padding: 30,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n        cursor: 'pointer',\n        boxShadow: '2px 2px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\n        borderRadius: 10,\n        backgroundColor: '#fff',\n        textDecoration: 'none',\n        color: 'inherit'\n    },\n    infoContainer: {\n        position: 'relative',\n        height: 60,\n        marginTop: 20,\n        paddingLeft: 80,\n        display: 'inline-flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n        flexBasis: 'auto',\n    },\n    avatar: {\n        height: 60,\n        width: 60,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    }\n}));\n\nexport default ({ title, jumbotron, description, date, readLength  }) => {\n\n    const classes = useStyles();\n    const imgHelper = \"data:image/jpeg;base64,\";\n    \n    if (!jumbotron.src) return \"\";\n    const data = Buffer.from(jumbotron.src.data, 'binary');\n    return (\n        <Link\n            className={classes.paper}\n            key={title.text}\n            to={`/editor/${title.text}`}\n        >\n            <Typography\n                style={{ width: '100%', marginBottom: 20 }}\n                align=\"center\"\n                variant=\"h2\"\n            >\n                {title.text}\n            </Typography>\n\n            <Typography\n                style={{ width: '100%'}}\n                align=\"center\"\n                variant=\"h5\"\n                color=\"textSecondary\"\n            >\n                {description.text}\n            </Typography>\n\n            <div className={classes.infoContainer} style={{ width: 'auto' }}>\n                <Avatar\n                    className={classes.avatar}\n                    src={`data:image/jpeg;base64,${profilePhoto}`}\n                    alt=\"Terri Banner Profile Photo\"\n                />\n\n                <div style={{ width: '100%' }}>\n                    <Typography>\n                        Terri Banner\n                    </Typography>\n                </div>\n\n                <Typography color=\"textSecondary\">\n                    {`${date.parsedDate} `} &#8226; {` ${readLength.text} min read`}\n                </Typography>\n            </div>\n\n            <div\n                style={{\n                    width: '100%',\n                    display: 'flex',\n                    justifyContent: 'center',\n                }}\n            >\n                <img\n                    style={{\n                        marginTop: 10,\n                        marginBottom: 10,\n                        width: '50%',\n                    }}\n                    src={`${imgHelper}${data}`}\n                    alt={title.text}\n                />\n            </div>\n        </Link>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}