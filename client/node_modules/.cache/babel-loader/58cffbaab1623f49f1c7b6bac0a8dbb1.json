{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Login/Login.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, TextField, Button } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      width: '60%',\n      padding: 40,\n      position: 'fixed',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexWrap: 'wrap'\n    },\n    inputs: {\n      width: '100%',\n      marginTop: 20\n    },\n    submit: {\n      width: '100%',\n      padding: 10,\n      marginTop: 20,\n      color: 'rgb(255, 255, 255)'\n    },\n    loginSignup: {\n      width: '100%',\n      padding: 10,\n      marginTop: 20\n    }\n  };\n});\n\nvar Login = function Login() {\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      signup = _useState2[0],\n      setSignup = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState({\n    open: false,\n    message: ''\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      success = _useState10[0],\n      setSuccess = _useState10[1];\n\n  var _useState11 = useState({\n    open: false,\n    message: ''\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  var handleSubmit = function handleSubmit() {\n    if (signup) {\n      var data = {\n        username: username,\n        email: email,\n        password: password\n      };\n      fetch('/api/users/signup', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        setSuccess({\n          open: true,\n          message: 'Sign up successful!'\n        });\n      }).catch(function (error) {\n        setError({\n          open: true,\n          message: error\n        });\n      });\n    } else {\n      var _data = {\n        email: email,\n        password: password\n      };\n      fetch('/api/users/login', {\n        method: 'POST',\n        body: JSON.stringify(_data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        setSuccess({\n          open: true,\n          message: 'Login Successful!'\n        });\n      }).catch(function (error) {\n        setError({\n          open: true,\n          message: error\n        });\n      });\n    }\n  };\n\n  if (signup) {\n    return React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Login\"), React.createElement(TextField, {\n      variant: \"outlined\",\n      label: \"Username\",\n      value: username,\n      onChange: function onChange(e) {\n        return setUsername(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      className: classes.inputs,\n      variant: \"outlined\",\n      label: \"Email\",\n      type: \"email\",\n      value: email,\n      onChange: function onChange(e) {\n        return setEmail(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      className: classes.inputs,\n      variant: \"outlined\",\n      label: \"Password\",\n      type: \"password\",\n      value: password,\n      onChange: function onChange(e) {\n        return setPassword(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: classes.submit,\n      onClick: handleSubmit,\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(Button, {\n      className: classes.loginSignup,\n      onClick: function onClick() {\n        return setSignup(!signup);\n      },\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Already Signed Up?\")));\n  } else {\n    return React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Login\"), React.createElement(TextField, {\n      className: classes.inputs,\n      variant: \"outlined\",\n      label: \"Email\",\n      type: \"email\",\n      value: email,\n      onChange: function onChange(e) {\n        return setEmail(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      className: classes.inputs,\n      variant: \"outlined\",\n      label: \"Password\",\n      type: \"password\",\n      value: password,\n      onChange: function onChange(e) {\n        return setPassword(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: classes.submit,\n      onClick: handleSubmit,\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(Button, {\n      className: classes.loginSignup,\n      onClick: function onClick() {\n        return setSignup(!signup);\n      },\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Not Signed Up?\")));\n  }\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Login/Login.js"],"names":["React","useState","makeStyles","Paper","Typography","TextField","Button","useStyles","theme","paper","width","padding","position","top","left","transform","display","justifyContent","alignItems","flexWrap","inputs","marginTop","submit","color","loginSignup","Login","classes","signup","setSignup","username","setUsername","email","setEmail","password","setPassword","open","message","success","setSuccess","error","setError","handleSubmit","data","fetch","method","body","JSON","stringify","headers","then","res","json","result","catch","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, TextField, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        width: '60%',\n        padding: 40,\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n    },\n    inputs: {\n        width: '100%',\n        marginTop: 20,\n    },\n    submit: {\n        width: '100%',\n        padding: 10,\n        marginTop: 20,\n        color: 'rgb(255, 255, 255)',\n    },\n    loginSignup: {\n        width: '100%',\n        padding: 10,\n        marginTop: 20,\n    }\n}));\n\nconst Login = () => {\n\n    const classes = useStyles();\n\n    const [signup, setSignup] = useState(false);\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [success, setSuccess] = useState({\n        open: false,\n        message: '',\n    });\n    const [error, setError] = useState({\n        open: false,\n        message: '',\n    });\n\n    const handleSubmit = () => {\n        if (signup) {\n            const data = {\n                username,\n                email,\n                password,\n            };\n            fetch('/api/users/signup', {\n                method: 'POST',\n                body: JSON.stringify(data),\n                headers: { 'Content-Type': 'application/json' },\n            })\n                .then(res => res.json())\n                .then((result) => { setSuccess({ open: true, message: 'Sign up successful!' }); })\n                .catch((error) => { setError({ open: true, message: error }); });\n        } else {\n            const data = {\n                email,\n                password,\n            };\n            fetch('/api/users/login', {\n                method: 'POST',\n                body: JSON.stringify(data),\n                headers: { 'Content-Type': 'application/json' },\n            })\n                .then(res => res.json())\n                .then((result) => { setSuccess({ open: true, message: 'Login Successful!' }); })\n                .catch((error) => { setError({ open: true, message: error }); });\n        }\n    };\n\n    if (signup) {\n        return (\n            <Paper className={classes.paper}>\n    \n                <Typography variant=\"h2\">\n                    Login\n                </Typography>\n    \n                <TextField\n                    variant=\"outlined\"\n                    label=\"Username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n    \n                <TextField\n                    className={classes.inputs}\n                    variant=\"outlined\"\n                    label=\"Email\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n    \n                <TextField\n                    className={classes.inputs}\n                    variant=\"outlined\"\n                    label=\"Password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n    \n                <Button\n                    className={classes.submit}\n                    onClick={handleSubmit}\n                    variant=\"contained\"\n                >\n                    <Typography variant=\"h6\">\n                        Submit\n                    </Typography>\n                </Button>\n    \n                <Button\n                    className={classes.loginSignup}\n                    onClick={() => setSignup(!signup)}\n                    variant=\"contained\"\n                >\n                    <Typography variant=\"body1\">\n                        Already Signed Up?\n                    </Typography>\n                </Button>\n            \n            </Paper>\n        );    \n    } else {\n        return (\n            <Paper className={classes.paper}>\n    \n                <Typography variant=\"h2\">\n                    Login\n                </Typography>\n    \n                <TextField\n                    className={classes.inputs}\n                    variant=\"outlined\"\n                    label=\"Email\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n    \n                <TextField\n                    className={classes.inputs}\n                    variant=\"outlined\"\n                    label=\"Password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n    \n                <Button\n                    className={classes.submit}\n                    onClick={handleSubmit}\n                    variant=\"contained\"\n                >\n                    <Typography variant=\"h6\">\n                        Submit\n                    </Typography>\n                </Button>\n    \n                <Button\n                    className={classes.loginSignup}\n                    onClick={() => setSignup(!signup)}\n                    variant=\"contained\"\n                >\n                    <Typography variant=\"body1\">\n                        Not Signed Up?\n                    </Typography>\n                </Button>\n            \n            </Paper>\n        );\n    }\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}