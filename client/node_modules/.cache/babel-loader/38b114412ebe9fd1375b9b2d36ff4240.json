{"ast":null,"code":"import _toConsumableArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Contact/Form.js\";\nimport React, { useState, useContext } from 'react';\nimport { MediaContext } from '../../Context/MediaQuery';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { Divider, Grid, Paper, TextField, Typography, Button, Snackbar, SnackbarContent, Slide, Icon, IconButton } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  var _formPaper;\n\n  return {\n    formContainer: {\n      height: '100vh',\n      backgroundColor: '#18121E',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexWrap: 'wrap'\n    },\n    formPaper: (_formPaper = {}, _defineProperty(_formPaper, theme.breakpoints.up('lg'), {\n      width: '50%',\n      padding: '30px 60px'\n    }), _defineProperty(_formPaper, \"width\", '70%'), _defineProperty(_formPaper, \"padding\", 30), _defineProperty(_formPaper, \"display\", 'flex'), _defineProperty(_formPaper, \"justifyContent\", 'center'), _defineProperty(_formPaper, \"alignItems\", 'center'), _defineProperty(_formPaper, \"alignContent\", 'center'), _defineProperty(_formPaper, \"flexWrap\", 'wrap'), _formPaper),\n    formHeader: {\n      color: '#25472e'\n    },\n    input: {\n      width: '100%',\n      marginTop: 20\n    },\n    button: {\n      padding: 10,\n      marginTop: 20,\n      width: '100%',\n      color: 'white',\n      backgroundColor: '#25472e',\n      transition: 'all 0.4s ease',\n      '&:hover': {\n        transform: 'scale(1.01)'\n      }\n    },\n    snackbar: {\n      backgroundColor: green[600]\n    }\n  };\n});\nvar initInfo = {\n  name: '',\n  email: '',\n  phone: '',\n  message: '',\n  notify: {\n    error: false,\n    warning: false,\n    success: false,\n    messae: \"\"\n  }\n};\nexport default (function () {\n  var classes = useStyles();\n  var media = useContext(MediaContext);\n\n  var _useState = useState(_objectSpread({}, initInfo)),\n      _useState2 = _slicedToArray(_useState, 2),\n      info = _useState2[0],\n      setInfo = _useState2[1];\n\n  var warning = info.warning,\n      error = info.error,\n      success = info.success,\n      message = info.message;\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var options, res, json;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              console.log(\"FIRE\");\n              options = {\n                method: 'POST',\n                body: JSON.stringify(info),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context.next = 5;\n              return fetch('/api/contact/contactMe', options);\n\n            case 5:\n              res = _context.sent;\n              _context.next = 8;\n              return res.json();\n\n            case 8:\n              json = _context.sent;\n\n              if (json) {\n                _context.next = 11;\n                break;\n              }\n\n              return _context.abrupt(\"return\", setInfo(_objectSpread({}, info, {\n                notify: _objectSpread({}, info.notify, {\n                  error: true,\n                  message: \"Something went wrong :(\"\n                })\n              })));\n\n            case 11:\n              console.log(json);\n              setInfo(_objectSpread({}, info, {\n                notify: _objectSpread({}, info.notify, {\n                  success: true,\n                  message: \"Contact was successful!\"\n                })\n              }));\n              _context.next = 18;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              setInfo(_objectSpread({}, info, {\n                notify: _objectSpread({}, info.notify, {\n                  error: true,\n                  message: \"Something went wrong\"\n                })\n              }));\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 15]]);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleClose = function handleClose() {\n    return setInfo.apply(void 0, _toConsumableArray(initInfo));\n  };\n\n  var slideTransition = function slideTransition(props) {\n    return React.createElement(Slide, Object.assign({}, props, {\n      direction: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(Grid, {\n    className: classes.formContainer,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.formPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.formHeader,\n    variant: media.xs ? 'h4' : 'h2',\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Contact Us!\"), React.createElement(Divider, {\n    style: {\n      width: '70%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Name\",\n    value: info.name,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        name: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Email\",\n    value: info.email,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        email: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Phone\",\n    value: info.phone,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        phone: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Message\",\n    value: info.message,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        message: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.button,\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: media.xs ? 'h6' : 'h5',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Submit\")), React.createElement(Snackbar, {\n    open: warning || error || success,\n    onClose: handleClose,\n    TransitionComponent: slideTransition,\n    ContentProps: {\n      'aria-describedby': 'message-id'\n    },\n    autoHideDuration: 6000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: classes.snackbar,\n    message: React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, message),\n    action: React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"close\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }))));\n});","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Contact/Form.js"],"names":["React","useState","useContext","MediaContext","makeStyles","green","Divider","Grid","Paper","TextField","Typography","Button","Snackbar","SnackbarContent","Slide","Icon","IconButton","useStyles","theme","formContainer","height","backgroundColor","display","justifyContent","alignItems","flexWrap","formPaper","breakpoints","up","width","padding","formHeader","color","input","marginTop","button","transition","transform","snackbar","initInfo","name","email","phone","message","notify","error","warning","success","messae","classes","media","info","setInfo","handleSubmit","console","log","options","method","body","JSON","stringify","headers","fetch","res","json","handleClose","slideTransition","props","xs","className","textFieldLabels","inputBase","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { MediaContext } from '../../Context/MediaQuery';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport {\n    Divider,\n    Grid,\n    Paper,\n    TextField,\n    Typography,\n    Button,\n    Snackbar,\n    SnackbarContent,\n    Slide,\n    Icon,\n    IconButton\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    formContainer: {\n        height: '100vh',\n        backgroundColor: '#18121E',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n    },\n    formPaper: {\n        [theme.breakpoints.up('lg')]: {\n            width: '50%',\n            padding: '30px 60px'\n        },\n        width: '70%',\n        padding: 30,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap'\n    },\n    formHeader: {\n        color: '#25472e',\n    },\n    input: {\n        width: '100%',\n        marginTop: 20,\n    },\n    button: {\n        padding: 10,\n        marginTop: 20,\n        width: '100%',\n        color: 'white',\n        backgroundColor: '#25472e',\n        transition: 'all 0.4s ease',\n        '&:hover': {\n            transform: 'scale(1.01)',\n        },\n    },\n    snackbar: {\n        backgroundColor: green[600]\n    }\n}));\n\nconst initInfo = {\n    name: '',\n    email: '',\n    phone: '',\n    message: '',\n    notify: {\n        error: false,\n        warning: false,\n        success: false,\n        messae: \"\"\n    }\n};\n\nexport default() => {\n\n    const classes = useStyles();\n    const media = useContext(MediaContext);\n\n    const [info, setInfo] = useState({ ...initInfo });\n    const { warning, error, success, message } = info;\n\n    const handleSubmit = async () => {\n        try {\n            console.log(\"FIRE\");\n            const options = {\n                method: 'POST',\n                body: JSON.stringify(info),\n                headers: { 'Content-Type': 'application/json' }\n            };\n            const res = await fetch('/api/contact/contactMe', options);\n            const json = await res.json();\n    \n            if (!json) {\n                return setInfo({\n                    ...info,\n                    notify: {\n                        ...info.notify,\n                        error: true,\n                        message: \"Something went wrong :(\"\n                    }\n                });\n            }\n            console.log(json);\n    \n            setInfo({\n                ...info,\n                notify: {\n                    ...info.notify,\n                    success: true,\n                    message: \"Contact was successful!\"\n                }\n            });\n        } catch (error) {\n            setInfo({\n                ...info,\n                notify: {\n                    ...info.notify,\n                    error: true,\n                    message: \"Something went wrong\"\n                }\n            });\n        }\n    };\n\n    const handleClose = () => setInfo(...initInfo);\n\n    const slideTransition = (props) => {\n        return <Slide {...props} direction=\"right\" />;\n    };\n\n    return (\n        <Grid className={classes.formContainer} item xs={12}>\n            <Paper className={classes.formPaper}>\n                <Typography\n                    className={classes.formHeader}\n                    variant={media.xs ? 'h4' : 'h2'}\n                    align=\"center\"\n                >\n                    Contact Us!\n                </Typography>\n\n                <Divider style={{ width: '70%' }} />\n\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Name\"\n                    value={info.name}\n                    onChange={(e) => setInfo({ ...info, name: e.target.value })}\n                />\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Email\"\n                    value={info.email}\n                    onChange={(e) => setInfo({ ...info, email: e.target.value })}\n                />\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Phone\"\n                    value={info.phone}\n                    onChange={(e) => setInfo({ ...info, phone: e.target.value })}\n                />\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Message\"\n                    value={info.message}\n                    onChange={(e) => setInfo({ ...info, message: e.target.value })}\n                />\n\n                <Button\n                    className={classes.button}\n                    onClick={handleSubmit}\n                >\n                    <Typography variant={media.xs ? 'h6' : 'h5'}>\n                        Submit\n                    </Typography>\n                </Button>\n\n                <Snackbar\n                    open={warning || error || success}\n                    onClose={handleClose}\n                    TransitionComponent={ slideTransition }\n                    ContentProps={{ 'aria-describedby': 'message-id' }}\n                    autoHideDuration={6000}\n                >\n                    <SnackbarContent \n                        className={classes.snackbar}\n                        message={ \n                            <Typography variant=\"h6\" align=\"center\">\n                                {message}\n                            </Typography>\n                        }\n                        action={\n                            <IconButton color=\"inherit\" onClick={handleClose}>\n                                <Icon>close</Icon>\n                            </IconButton>\n                        }\n                    />\n                </Snackbar>\n            </Paper>\n        </Grid>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}