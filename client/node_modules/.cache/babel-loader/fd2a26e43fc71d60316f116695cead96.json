{"ast":null,"code":"import _defineProperty from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/Context/EditorContext.js\";\nimport React, { useState, createContext, useEffect } from 'react';\nexport var EditorContext = createContext();\nvar initialStyling = {\n  bold: false,\n  italic: false,\n  underline: false,\n  color: 'black',\n  highlight: false\n};\nvar intialPreview = {\n  text: '',\n  styling: initialStyling,\n  font: 'Roboto',\n  justify: 'left',\n  textStyle: 'body1'\n};\nexport var EditorProvider = function EditorProvider(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editMode = _useState2[0],\n      setEditMode = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      articleList = _useState4[0],\n      setArticleList = _useState4[1];\n\n  var _useState5 = useState('title'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sectionMode = _useState6[0],\n      setSectionMode = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      title = _useState8[0],\n      setTitle = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      jumbotron = _useState10[0],\n      setJumbotron = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      body = _useState12[0],\n      setBody = _useState12[1];\n\n  var _useState13 = useState({\n    title: intialPreview,\n    jumbotron: '',\n    body: [intialPreview]\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      preview = _useState14[0],\n      setPreview = _useState14[1];\n\n  var _useState15 = useState(initialStyling),\n      _useState16 = _slicedToArray(_useState15, 2),\n      styling = _useState16[0],\n      setStyling = _useState16[1];\n\n  var _useState17 = useState('Roboto'),\n      _useState18 = _slicedToArray(_useState17, 2),\n      font = _useState18[0],\n      setFont = _useState18[1];\n\n  var _useState19 = useState('left'),\n      _useState20 = _slicedToArray(_useState19, 2),\n      justify = _useState20[0],\n      setJustify = _useState20[1];\n\n  var _useState21 = useState('body1'),\n      _useState22 = _slicedToArray(_useState21, 2),\n      textStyle = _useState22[0],\n      setTextStyle = _useState22[1];\n\n  useEffect(function () {\n    fetch('/api/editors/getList').then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      return setArticleList(result);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  }, []);\n  useEffect(function () {\n    console.log(sectionMode);\n  }, [sectionMode]);\n\n  var handleMode = function handleMode() {\n    setEditMode(!editMode);\n  };\n\n  var handleSectionMode = function handleSectionMode(newSection) {\n    switch (newSection) {\n      case 'title':\n      case newSection !== sectionMode:\n        setSectionMode(newSection);\n        break;\n\n      case 'jumbotron':\n      case newSection !== sectionMode:\n        setSectionMode(newSection);\n        break;\n\n      case 'body':\n      case newSection !== sectionMode:\n        setSectionMode(newSection);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  var handleSubmit = function handleSubmit(data) {\n    fetch('/api/editors/newSection', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      console.log(result);\n      setPreview(result);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var handleInput = function handleInput(e) {\n    var input = e.target.value;\n    setPreview(_objectSpread({}, preview, _defineProperty({}, sectionMode, preview[sectionMode] + input)));\n  };\n\n  var handleArticle = function handleArticle() {\n    var section = {\n      sectionMode: sectionMode,\n      title: preview.title,\n      jumbotron: preview.jumbotron,\n      text: preview.body,\n      font: font,\n      justify: justify,\n      textStyle: textStyle,\n      bold: styling.bold,\n      italic: styling.italic,\n      underline: styling.underline,\n      color: styling.color,\n      highlight: styling.highlight\n    };\n    handleSubmit(section);\n    setStyling(initialStyling);\n    setFont('Roboto');\n    setJustify('left');\n    setTextStyle('body1');\n  };\n\n  var handleFont = function handleFont(newFont) {\n    setFont(newFont);\n  };\n\n  var handleStyling = function handleStyling(style, color) {\n    switch (style) {\n      case 'bold':\n        setPreview(_objectSpread({}, preview, _defineProperty({}, sectionMode, _objectSpread({}, preview[sectionMode], _defineProperty({}, preview[sectionMode].styling, _objectSpread({}, [preview[sectionMode].styling], {\n          bold: !styling.bold\n        }))))));\n        break;\n\n      case 'italic':\n        setStyling(_objectSpread({}, styling, {\n          italic: !styling.italic\n        }));\n        break;\n\n      case 'underline':\n        setStyling(_objectSpread({}, styling, {\n          underline: !styling.underline\n        }));\n        break;\n\n      case 'color':\n        setStyling(_objectSpread({}, styling, {\n          color: color\n        }));\n        break;\n\n      case 'highlight':\n        setStyling(_objectSpread({}, styling, {\n          highlight: !styling.highlight\n        }));\n        break;\n\n      default:\n        return;\n    }\n\n    ;\n  };\n\n  var handleJustify = function handleJustify(justification) {\n    setJustify(justification);\n  };\n\n  var handleTextStyle = function handleTextStyle(style) {\n    setTextStyle(style);\n  };\n\n  return React.createElement(EditorContext.Provider, {\n    value: {\n      handleInput: handleInput,\n      title: title,\n      jumbotron: jumbotron,\n      body: body,\n      preview: preview,\n      styling: styling,\n      handleStyling: handleStyling,\n      font: font,\n      handleFont: handleFont,\n      justify: justify,\n      handleJustify: handleJustify,\n      textStyle: textStyle,\n      handleTextStyle: handleTextStyle,\n      handleArticle: handleArticle,\n      editMode: editMode,\n      handleMode: handleMode,\n      articleList: articleList,\n      sectionMode: sectionMode,\n      handleSectionMode: handleSectionMode\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/Context/EditorContext.js"],"names":["React","useState","createContext","useEffect","EditorContext","initialStyling","bold","italic","underline","color","highlight","intialPreview","text","styling","font","justify","textStyle","EditorProvider","props","editMode","setEditMode","articleList","setArticleList","sectionMode","setSectionMode","title","setTitle","jumbotron","setJumbotron","body","setBody","preview","setPreview","setStyling","setFont","setJustify","setTextStyle","fetch","then","res","json","result","catch","error","console","log","handleMode","handleSectionMode","newSection","handleSubmit","data","method","JSON","stringify","headers","handleInput","e","input","target","value","handleArticle","section","handleFont","newFont","handleStyling","style","handleJustify","justification","handleTextStyle","children"],"mappings":"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","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\n\nexport const EditorContext = createContext();\n\nconst initialStyling = {\n    bold: false,\n    italic: false,\n    underline: false,\n    color: 'black',\n    highlight: false,\n}\n\nconst intialPreview = {\n    text: '',\n    styling: initialStyling,\n    font: 'Roboto',\n    justify: 'left',\n    textStyle: 'body1',\n}\n\nexport const EditorProvider = props => {\n\n    const [editMode, setEditMode] = useState(false);\n    const [articleList, setArticleList] = useState('');\n\n    const [sectionMode, setSectionMode] = useState('title');\n    const [title, setTitle] = useState('');\n    const [jumbotron, setJumbotron] = useState('');\n    const [body, setBody] = useState('');\n    const [preview, setPreview] = useState({\n        title: intialPreview,\n        jumbotron: '',\n        body: [ intialPreview ],\n    });\n\n    const [styling, setStyling] = useState(initialStyling);\n    const [font, setFont] = useState( 'Roboto' );\n    const [justify, setJustify] = useState('left');\n    const [textStyle, setTextStyle] = useState('body1');\n    \n    useEffect(() => {\n\n        fetch('/api/editors/getList')\n        .then(res => res.json())\n        .then(result => setArticleList(result))\n        .catch(error => console.log(error));\n\n    }, [] )\n\n    useEffect(() => {\n        console.log(sectionMode)\n    }, [sectionMode])\n\n    const handleMode = () => {\n        setEditMode(!editMode);\n    }\n\n    const handleSectionMode = (newSection) => {\n        switch (newSection) {\n\n            case 'title':\n            case newSection !== sectionMode:\n                setSectionMode(newSection);\n                break;\n\n            case 'jumbotron':\n            case newSection !== sectionMode:\n                setSectionMode(newSection);\n                break;\n\n            case 'body':\n            case newSection !== sectionMode:\n                setSectionMode(newSection);\n                break;\n\n            default:\n                return\n        }\n    };\n\n    const handleSubmit = data => {\n\n\n        fetch('/api/editors/newSection',{\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then(res => res.json())\n        .then((result) => {\n            console.log(result);\n            setPreview(result);\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    };\n\n    const handleInput = (e) => {\n\n        let input = e.target.value;\n\n        setPreview({ ...preview, [sectionMode]: preview[sectionMode]+input });\n    };\n\n    const handleArticle = () => {\n\n        let section = {\n            sectionMode: sectionMode,\n            title: preview.title,\n            jumbotron: preview.jumbotron,\n            text: preview.body,\n            font: font,\n            justify: justify,\n            textStyle: textStyle,\n            bold: styling.bold,\n            italic: styling.italic,\n            underline: styling.underline,\n            color: styling.color,\n            highlight: styling.highlight\n        }\n\n        handleSubmit(section);\n\n        setStyling(initialStyling);\n        setFont('Roboto');\n        setJustify('left');\n        setTextStyle('body1');\n    };\n\n    const handleFont = ( newFont ) => {\n        setFont(newFont);\n    };\n\n    const handleStyling = ( style, color ) => {\n        switch (style) {\n            case 'bold':\n                setPreview({ ...preview, [sectionMode]: { ...preview[sectionMode], [preview[sectionMode].styling]: { ...[preview[sectionMode].styling], bold: !styling.bold }}});\n                break; \n                \n            case 'italic':\n                setStyling({ ...styling, italic: !styling.italic });\n                break;\n\n            case 'underline':\n                setStyling({ ...styling, underline: !styling.underline });\n                break;\n            \n            case 'color':\n                setStyling({ ...styling, color: color });\n                break;\n            \n            case 'highlight':\n                setStyling({ ...styling, highlight: !styling.highlight });\n                break; \n\n            default:\n                return\n        };\n    };\n\n    const handleJustify = justification => {\n        setJustify(justification);\n    };\n\n    const handleTextStyle = style => {\n        setTextStyle(style);\n    };\n\n    return (\n        <EditorContext.Provider\n            value={{\n                handleInput,\n                title,\n                jumbotron,\n                body,\n                preview,\n                styling,\n                handleStyling,\n                font,\n                handleFont,\n                justify,\n                handleJustify,\n                textStyle,\n                handleTextStyle,\n                handleArticle,\n                editMode,\n                handleMode,\n                articleList,\n                sectionMode,\n                handleSectionMode\n            }}\n        >\n            {props.children}\n        </EditorContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}