{"ast":null,"code":"import _objectSpread from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/Context/EditorContext.js\";\nimport React, { useState, createContext, useEffect } from 'react';\nexport var EditorContext = createContext();\nvar initialStyling = {\n  bold: false,\n  italic: false,\n  underline: false,\n  color: 'black',\n  highlight: false\n};\nexport var EditorProvider = function EditorProvider(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editMode = _useState2[0],\n      setEditMode = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      articleList = _useState4[0],\n      setArticleList = _useState4[1];\n\n  var _useState5 = useState('title'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sectionMode = _useState6[0],\n      setSectionMode = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      title = _useState8[0],\n      setTitle = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      jumbotron = _useState10[0],\n      setJumbotron = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      body = _useState12[0],\n      setBody = _useState12[1];\n\n  var _useState13 = useState({\n    title: '',\n    jumbotron: '',\n    body: ''\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      preview = _useState14[0],\n      setPreview = _useState14[1];\n\n  var _useState15 = useState(initialStyling),\n      _useState16 = _slicedToArray(_useState15, 2),\n      styling = _useState16[0],\n      setStyling = _useState16[1];\n\n  var _useState17 = useState('Roboto'),\n      _useState18 = _slicedToArray(_useState17, 2),\n      font = _useState18[0],\n      setFont = _useState18[1];\n\n  var _useState19 = useState('left'),\n      _useState20 = _slicedToArray(_useState19, 2),\n      justify = _useState20[0],\n      setJustify = _useState20[1];\n\n  var _useState21 = useState('body1'),\n      _useState22 = _slicedToArray(_useState21, 2),\n      textStyle = _useState22[0],\n      setTextStyle = _useState22[1];\n\n  useEffect(function () {\n    fetch('/api/editors/getList').then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      return setArticleList(result);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  }, []);\n  useEffect(function () {\n    console.log(sectionMode);\n  }, [sectionMode]);\n\n  var handleMode = function handleMode() {\n    setEditMode(!editMode);\n  };\n\n  var handleSectionMode = function handleSectionMode(newSection) {\n    switch (newSection) {\n      case 'title':\n      case newSection !== sectionMode:\n        setSectionMode(newSection);\n        break;\n\n      case 'jumbotron':\n      case newSection !== sectionMode:\n        setSectionMode(newSection);\n        break;\n\n      case 'body':\n      case newSection !== sectionMode:\n        setSectionMode(newSection);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  var handleSubmit = function handleSubmit(data) {\n    fetch('/api/editors/newSection', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      console.log(result);\n      setPreview(result);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var handleInput = function handleInput(e) {\n    var input = e.target.value;\n\n    switch (sectionMode) {\n      case 'title':\n        setTitle(input);\n        break;\n\n      case 'jumbotron':\n        setJumbotron(input);\n        break;\n\n      case 'body':\n        setBody(input);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  var handleArticle = function handleArticle() {\n    var section = {\n      sectionMode: sectionMode,\n      title: title,\n      jumbotron: jumbotron,\n      text: body,\n      font: font,\n      justify: justify,\n      textStyle: textStyle,\n      bold: styling.bold,\n      italic: styling.italic,\n      underline: styling.underline,\n      color: styling.color,\n      highlight: styling.highlight\n    };\n    handleSubmit(section);\n    setBody('');\n    setStyling(initialStyling);\n    setFont('Roboto');\n    setJustify('left');\n    setTextStyle('body1');\n  };\n\n  var handleFont = function handleFont(newFont) {\n    setFont(newFont);\n  };\n\n  var handleStyling = function handleStyling(style, color) {\n    switch (style) {\n      case 'bold':\n        setStyling(_objectSpread({}, styling, {\n          bold: !styling.bold\n        }));\n        break;\n\n      case 'italic':\n        setStyling(_objectSpread({}, styling, {\n          italic: !styling.italic\n        }));\n        break;\n\n      case 'underline':\n        setStyling(_objectSpread({}, styling, {\n          underline: !styling.underline\n        }));\n        break;\n\n      case 'color':\n        setStyling(_objectSpread({}, styling, {\n          color: color\n        }));\n        break;\n\n      case 'highlight':\n        setStyling(_objectSpread({}, styling, {\n          highlight: !styling.highlight\n        }));\n        break;\n\n      default:\n        return;\n    }\n\n    ;\n  };\n\n  var handleJustify = function handleJustify(justification) {\n    setJustify(justification);\n  };\n\n  var handleTextStyle = function handleTextStyle(style) {\n    setTextStyle(style);\n  };\n\n  return React.createElement(EditorContext.Provider, {\n    value: {\n      handleInput: handleInput,\n      title: title,\n      jumbotron: jumbotron,\n      body: body,\n      preview: preview,\n      styling: styling,\n      handleStyling: handleStyling,\n      font: font,\n      handleFont: handleFont,\n      justify: justify,\n      handleJustify: handleJustify,\n      textStyle: textStyle,\n      handleTextStyle: handleTextStyle,\n      handleArticle: handleArticle,\n      editMode: editMode,\n      handleMode: handleMode,\n      articleList: articleList,\n      sectionMode: sectionMode,\n      handleSectionMode: handleSectionMode\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/Context/EditorContext.js"],"names":["React","useState","createContext","useEffect","EditorContext","initialStyling","bold","italic","underline","color","highlight","EditorProvider","props","editMode","setEditMode","articleList","setArticleList","sectionMode","setSectionMode","title","setTitle","jumbotron","setJumbotron","body","setBody","preview","setPreview","styling","setStyling","font","setFont","justify","setJustify","textStyle","setTextStyle","fetch","then","res","json","result","catch","error","console","log","handleMode","handleSectionMode","newSection","handleSubmit","data","method","JSON","stringify","headers","handleInput","e","input","target","value","handleArticle","section","text","handleFont","newFont","handleStyling","style","handleJustify","justification","handleTextStyle","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,OAAO,IAAMC,aAAa,GAAGF,aAAa,EAAnC;AAEP,IAAMG,cAAc,GAAG;AACnBC,EAAAA,IAAI,EAAE,KADa;AAEnBC,EAAAA,MAAM,EAAE,KAFW;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,KAAK,EAAE,OAJY;AAKnBC,EAAAA,SAAS,EAAE;AALQ,CAAvB;AAQA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAAA,kBAEHX,QAAQ,CAAC,KAAD,CAFL;AAAA;AAAA,MAE5BY,QAF4B;AAAA,MAElBC,WAFkB;;AAAA,mBAGGb,QAAQ,CAAC,EAAD,CAHX;AAAA;AAAA,MAG5Bc,WAH4B;AAAA,MAGfC,cAHe;;AAAA,mBAKGf,QAAQ,CAAC,OAAD,CALX;AAAA;AAAA,MAK5BgB,WAL4B;AAAA,MAKfC,cALe;;AAAA,mBAMTjB,QAAQ,CAAC,EAAD,CANC;AAAA;AAAA,MAM5BkB,KAN4B;AAAA,MAMrBC,QANqB;;AAAA,mBAODnB,QAAQ,CAAC,EAAD,CAPP;AAAA;AAAA,MAO5BoB,SAP4B;AAAA,MAOjBC,YAPiB;;AAAA,oBAQXrB,QAAQ,CAAC,EAAD,CARG;AAAA;AAAA,MAQ5BsB,IAR4B;AAAA,MAQtBC,OARsB;;AAAA,oBASLvB,QAAQ,CAAC;AACnCkB,IAAAA,KAAK,EAAE,EAD4B;AAEnCE,IAAAA,SAAS,EAAE,EAFwB;AAGnCE,IAAAA,IAAI,EAAE;AAH6B,GAAD,CATH;AAAA;AAAA,MAS5BE,OAT4B;AAAA,MASnBC,UATmB;;AAAA,oBAeLzB,QAAQ,CAACI,cAAD,CAfH;AAAA;AAAA,MAe5BsB,OAf4B;AAAA,MAenBC,UAfmB;;AAAA,oBAgBX3B,QAAQ,CAAE,QAAF,CAhBG;AAAA;AAAA,MAgB5B4B,IAhB4B;AAAA,MAgBtBC,OAhBsB;;AAAA,oBAiBL7B,QAAQ,CAAC,MAAD,CAjBH;AAAA;AAAA,MAiB5B8B,OAjB4B;AAAA,MAiBnBC,UAjBmB;;AAAA,oBAkBD/B,QAAQ,CAAC,OAAD,CAlBP;AAAA;AAAA,MAkB5BgC,SAlB4B;AAAA,MAkBjBC,YAlBiB;;AAoBnC/B,EAAAA,SAAS,CAAC,YAAM;AAEZgC,IAAAA,KAAK,CAAC,sBAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADT,EAECF,IAFD,CAEM,UAAAG,MAAM;AAAA,aAAIvB,cAAc,CAACuB,MAAD,CAAlB;AAAA,KAFZ,EAGCC,KAHD,CAGO,UAAAC,KAAK;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,KAHZ;AAKH,GAPQ,EAON,EAPM,CAAT;AASAtC,EAAAA,SAAS,CAAC,YAAM;AACZuC,IAAAA,OAAO,CAACC,GAAR,CAAY1B,WAAZ;AACH,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAM2B,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB9B,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH,GAFD;;AAIA,MAAMgC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,UAAD,EAAgB;AACtC,YAAQA,UAAR;AAEI,WAAK,OAAL;AACA,WAAKA,UAAU,KAAK7B,WAApB;AACIC,QAAAA,cAAc,CAAC4B,UAAD,CAAd;AACA;;AAEJ,WAAK,WAAL;AACA,WAAKA,UAAU,KAAK7B,WAApB;AACIC,QAAAA,cAAc,CAAC4B,UAAD,CAAd;AACA;;AAEJ,WAAK,MAAL;AACA,WAAKA,UAAU,KAAK7B,WAApB;AACIC,QAAAA,cAAc,CAAC4B,UAAD,CAAd;AACA;;AAEJ;AACI;AAlBR;AAoBH,GArBD;;AAuBA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI,EAAI;AAGzBb,IAAAA,KAAK,CAAC,yBAAD,EAA2B;AAC5Bc,MAAAA,MAAM,EAAE,MADoB;AAE5B1B,MAAAA,IAAI,EAAE2B,IAAI,CAACC,SAAL,CAAeH,IAAf,CAFsB;AAG5BI,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAHmB,KAA3B,CAAL,CAKChB,IALD,CAKM,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KALT,EAMCF,IAND,CAMM,UAACG,MAAD,EAAY;AACdG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAb,MAAAA,UAAU,CAACa,MAAD,CAAV;AACH,KATD,EAUCC,KAVD,CAUO,UAAAC,KAAK,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAZD;AAaH,GAhBD;;AAkBA,MAAMY,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AAEvB,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAArB;;AAEA,YAAQxC,WAAR;AAEI,WAAK,OAAL;AACIG,QAAAA,QAAQ,CAACmC,KAAD,CAAR;AACA;;AACJ,WAAK,WAAL;AACIjC,QAAAA,YAAY,CAACiC,KAAD,CAAZ;AACA;;AACJ,WAAK,MAAL;AACI/B,QAAAA,OAAO,CAAC+B,KAAD,CAAP;AACA;;AACJ;AACI;AAZR;AAcH,GAlBD;;AAoBA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAExB,QAAIC,OAAO,GAAG;AACV1C,MAAAA,WAAW,EAAEA,WADH;AAEVE,MAAAA,KAAK,EAAEA,KAFG;AAGVE,MAAAA,SAAS,EAATA,SAHU;AAIVuC,MAAAA,IAAI,EAAErC,IAJI;AAKVM,MAAAA,IAAI,EAAEA,IALI;AAMVE,MAAAA,OAAO,EAAEA,OANC;AAOVE,MAAAA,SAAS,EAAEA,SAPD;AAQV3B,MAAAA,IAAI,EAAEqB,OAAO,CAACrB,IARJ;AASVC,MAAAA,MAAM,EAAEoB,OAAO,CAACpB,MATN;AAUVC,MAAAA,SAAS,EAAEmB,OAAO,CAACnB,SAVT;AAWVC,MAAAA,KAAK,EAAEkB,OAAO,CAAClB,KAXL;AAYVC,MAAAA,SAAS,EAAEiB,OAAO,CAACjB;AAZT,KAAd;AAeAqC,IAAAA,YAAY,CAACY,OAAD,CAAZ;AAEAnC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAI,IAAAA,UAAU,CAACvB,cAAD,CAAV;AACAyB,IAAAA,OAAO,CAAC,QAAD,CAAP;AACAE,IAAAA,UAAU,CAAC,MAAD,CAAV;AACAE,IAAAA,YAAY,CAAC,OAAD,CAAZ;AACH,GAxBD;;AA0BA,MAAM2B,UAAU,GAAG,SAAbA,UAAa,CAAEC,OAAF,EAAe;AAC9BhC,IAAAA,OAAO,CAACgC,OAAD,CAAP;AACH,GAFD;;AAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAEC,KAAF,EAASvD,KAAT,EAAoB;AACtC,YAAQuD,KAAR;AACI,WAAK,MAAL;AACIpC,QAAAA,UAAU,mBAAMD,OAAN;AAAerB,UAAAA,IAAI,EAAE,CAACqB,OAAO,CAACrB;AAA9B,WAAV;AACA;;AAEJ,WAAK,QAAL;AACIsB,QAAAA,UAAU,mBAAMD,OAAN;AAAepB,UAAAA,MAAM,EAAE,CAACoB,OAAO,CAACpB;AAAhC,WAAV;AACA;;AAEJ,WAAK,WAAL;AACIqB,QAAAA,UAAU,mBAAMD,OAAN;AAAenB,UAAAA,SAAS,EAAE,CAACmB,OAAO,CAACnB;AAAnC,WAAV;AACA;;AAEJ,WAAK,OAAL;AACIoB,QAAAA,UAAU,mBAAMD,OAAN;AAAelB,UAAAA,KAAK,EAAEA;AAAtB,WAAV;AACA;;AAEJ,WAAK,WAAL;AACImB,QAAAA,UAAU,mBAAMD,OAAN;AAAejB,UAAAA,SAAS,EAAE,CAACiB,OAAO,CAACjB;AAAnC,WAAV;AACA;;AAEJ;AACI;AAtBR;;AAuBC;AACJ,GAzBD;;AA2BA,MAAMuD,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,aAAa,EAAI;AACnClC,IAAAA,UAAU,CAACkC,aAAD,CAAV;AACH,GAFD;;AAIA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAH,KAAK,EAAI;AAC7B9B,IAAAA,YAAY,CAAC8B,KAAD,CAAZ;AACH,GAFD;;AAIA,SACI,oBAAC,aAAD,CAAe,QAAf;AACI,IAAA,KAAK,EAAE;AACHX,MAAAA,WAAW,EAAXA,WADG;AAEHlC,MAAAA,KAAK,EAALA,KAFG;AAGHE,MAAAA,SAAS,EAATA,SAHG;AAIHE,MAAAA,IAAI,EAAJA,IAJG;AAKHE,MAAAA,OAAO,EAAPA,OALG;AAMHE,MAAAA,OAAO,EAAPA,OANG;AAOHoC,MAAAA,aAAa,EAAbA,aAPG;AAQHlC,MAAAA,IAAI,EAAJA,IARG;AASHgC,MAAAA,UAAU,EAAVA,UATG;AAUH9B,MAAAA,OAAO,EAAPA,OAVG;AAWHkC,MAAAA,aAAa,EAAbA,aAXG;AAYHhC,MAAAA,SAAS,EAATA,SAZG;AAaHkC,MAAAA,eAAe,EAAfA,eAbG;AAcHT,MAAAA,aAAa,EAAbA,aAdG;AAeH7C,MAAAA,QAAQ,EAARA,QAfG;AAgBH+B,MAAAA,UAAU,EAAVA,UAhBG;AAiBH7B,MAAAA,WAAW,EAAXA,WAjBG;AAkBHE,MAAAA,WAAW,EAAXA,WAlBG;AAmBH4B,MAAAA,iBAAiB,EAAjBA;AAnBG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAuBKjC,KAAK,CAACwD,QAvBX,CADJ;AA2BH,CA9LM","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\n\nexport const EditorContext = createContext();\n\nconst initialStyling = {\n    bold: false,\n    italic: false,\n    underline: false,\n    color: 'black',\n    highlight: false,\n}\n\nexport const EditorProvider = props => {\n\n    const [editMode, setEditMode] = useState(false);\n    const [articleList, setArticleList] = useState('');\n\n    const [sectionMode, setSectionMode] = useState('title');\n    const [title, setTitle] = useState('');\n    const [jumbotron, setJumbotron] = useState('');\n    const [body, setBody] = useState('');\n    const [preview, setPreview] = useState({\n        title: '',\n        jumbotron: '',\n        body: '',\n    });\n\n    const [styling, setStyling] = useState(initialStyling);\n    const [font, setFont] = useState( 'Roboto' );\n    const [justify, setJustify] = useState('left');\n    const [textStyle, setTextStyle] = useState('body1');\n    \n    useEffect(() => {\n\n        fetch('/api/editors/getList')\n        .then(res => res.json())\n        .then(result => setArticleList(result))\n        .catch(error => console.log(error));\n\n    }, [] )\n\n    useEffect(() => {\n        console.log(sectionMode)\n    }, [sectionMode])\n\n    const handleMode = () => {\n        setEditMode(!editMode);\n    }\n\n    const handleSectionMode = (newSection) => {\n        switch (newSection) {\n\n            case 'title':\n            case newSection !== sectionMode:\n                setSectionMode(newSection);\n                break;\n\n            case 'jumbotron':\n            case newSection !== sectionMode:\n                setSectionMode(newSection);\n                break;\n\n            case 'body':\n            case newSection !== sectionMode:\n                setSectionMode(newSection);\n                break;\n\n            default:\n                return\n        }\n    };\n\n    const handleSubmit = data => {\n\n\n        fetch('/api/editors/newSection',{\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then(res => res.json())\n        .then((result) => {\n            console.log(result);\n            setPreview(result);\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    };\n\n    const handleInput = (e) => {\n\n        let input = e.target.value;\n\n        switch (sectionMode) {\n\n            case 'title':\n                setTitle(input);\n                break;\n            case 'jumbotron':\n                setJumbotron(input);\n                break;\n            case 'body':\n                setBody(input);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const handleArticle = () => {\n\n        let section = {\n            sectionMode: sectionMode,\n            title: title,\n            jumbotron,\n            text: body,\n            font: font,\n            justify: justify,\n            textStyle: textStyle,\n            bold: styling.bold,\n            italic: styling.italic,\n            underline: styling.underline,\n            color: styling.color,\n            highlight: styling.highlight\n        }\n\n        handleSubmit(section);\n\n        setBody('');\n        setStyling(initialStyling);\n        setFont('Roboto');\n        setJustify('left');\n        setTextStyle('body1');\n    };\n\n    const handleFont = ( newFont ) => {\n        setFont(newFont);\n    };\n\n    const handleStyling = ( style, color ) => {\n        switch (style) {\n            case 'bold':\n                setStyling({ ...styling, bold: !styling.bold });\n                break; \n                \n            case 'italic':\n                setStyling({ ...styling, italic: !styling.italic });\n                break;\n\n            case 'underline':\n                setStyling({ ...styling, underline: !styling.underline });\n                break;\n            \n            case 'color':\n                setStyling({ ...styling, color: color });\n                break;\n            \n            case 'highlight':\n                setStyling({ ...styling, highlight: !styling.highlight });\n                break; \n\n            default:\n                return\n        };\n    };\n\n    const handleJustify = justification => {\n        setJustify(justification);\n    };\n\n    const handleTextStyle = style => {\n        setTextStyle(style);\n    };\n\n    return (\n        <EditorContext.Provider\n            value={{\n                handleInput,\n                title,\n                jumbotron,\n                body,\n                preview,\n                styling,\n                handleStyling,\n                font,\n                handleFont,\n                justify,\n                handleJustify,\n                textStyle,\n                handleTextStyle,\n                handleArticle,\n                editMode,\n                handleMode,\n                articleList,\n                sectionMode,\n                handleSectionMode\n            }}\n        >\n            {props.children}\n        </EditorContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}