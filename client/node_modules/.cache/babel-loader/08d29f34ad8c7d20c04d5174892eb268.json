{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/MDToolbar.js\";\nimport React, { useContext, useState } from 'react';\nimport TextSize from './Tools/TextSize';\nimport Font from './Tools/Font';\nimport Styling from './Tools/Styling';\nimport Justify from './Tools/Justify';\nimport Margin from './Tools/Margin';\nimport { EditorContext } from '../../Context/EditorContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green, amber } from '@material-ui/core/colors';\nimport { Grid, Icon, Fab, Button, Snackbar, SnackbarContent, Typography, Drawer } from '@material-ui/core';\nvar months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      padding: 20,\n      background: '#ffffff',\n      position: 'fixed',\n      top: 70,\n      zIndex: 2,\n      boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)'\n    },\n    editorTools: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center',\n      flexWrap: 'wrap'\n    },\n    input: {\n      width: '80%'\n    },\n    save: {\n      position: 'relative',\n      backgroundColor: 'rgb(0, 0, 0, 0.2)',\n      transition: 'all 0.4s ease',\n      '&:hover': {\n        transform: 'scale(1.03)',\n        backgroundColor: 'rgb(0, 0, 0, 0.05)'\n      }\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark\n    },\n    warning: {\n      backgroundColor: amber[700]\n    },\n    success: {\n      backgroundColor: green[600]\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n});\n\nvar Toolbar = function Toolbar() {\n  var classes = useStyles();\n  var holder = useContext(EditorContext);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState({\n    open: false,\n    message: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState({\n    open: false,\n    message: 'Article saved!'\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      success = _useState6[0],\n      setSuccess = _useState6[1];\n\n  var _useState7 = useState({\n    open: false,\n    messsage: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      warning = _useState8[0],\n      setWarning = _useState8[1];\n\n  var closeError = function closeError() {\n    setError({\n      open: false,\n      message: ''\n    });\n  };\n\n  var closeSuccess = function closeSuccess() {\n    setSuccess({\n      open: false,\n      message: 'Article Saved!'\n    });\n  };\n\n  var closeWarning = function closeWarning() {\n    setWarning({\n      open: false,\n      message: ''\n    });\n  };\n\n  var preSubmit = function preSubmit() {\n    switch (true) {\n      case !holder.title.text:\n        setWarning({\n          open: true,\n          message: 'Title is required!'\n        });\n        break;\n\n      case !holder.description.text:\n        setWarning({\n          open: true,\n          message: 'Description is required!'\n        });\n        break;\n\n      case !holder.readLength.text:\n        setWarning({\n          open: true,\n          message: 'Read Length is required!'\n        });\n        break;\n\n      case !holder.jumbotron.src:\n        setWarning({\n          open: true,\n          message: 'Jumbotron is required!'\n        });\n        break;\n\n      case !holder.body[0].text:\n        setWarning({\n          open: true,\n          message: 'A body section is required!'\n        });\n        break;\n\n      case holder.title.isPublished:\n        handleChanges();\n        break;\n\n      case !holder.title.isPublished:\n        handleSubmit();\n        break;\n\n      default:\n        setError({\n          open: true,\n          message: 'Something went wrong :('\n        });\n        break;\n    }\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var now = new Date();\n    var date = {\n      parsedDate: \"\".concat(months[now.getMonth()], \" \").concat(now.getDate()),\n      epoch: now.getTime()\n    };\n    var data = {\n      title: holder.title,\n      description: holder.description,\n      readLength: holder.readLength,\n      jumbotron: holder.jumbotron,\n      body: holder.body,\n      date: date\n    };\n    fetch('/api/editors/newArticle', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      if (result.error) {\n        return setError({\n          open: true,\n          message: result.error\n        });\n      }\n\n      setSuccess({\n        open: true,\n        message: 'Article published!'\n      });\n      holder.setPublished();\n    }).catch(function (error) {\n      setError({\n        open: true,\n        message: error\n      });\n    });\n  };\n\n  var handleChanges = function handleChanges() {\n    var data = {\n      title: holder.title,\n      description: holder.description,\n      readLength: holder.readLength,\n      jumbotron: holder.jumbotron,\n      body: holder.body\n    };\n    fetch('/api/editors/saveChanges', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      if (result.error) {\n        return setError({\n          open: true,\n          message: result.error\n        });\n      }\n\n      setSuccess({\n        open: true,\n        message: 'Article Saved!'\n      });\n    }).catch(function (error) {\n      setError({\n        open: true,\n        message: error\n      });\n    });\n  };\n\n  return React.createElement(Grid, {\n    className: classes.container,\n    justify: \"center\",\n    alignItems: \"center\",\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.editorTools,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick() {\n      return setOpen(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"menu\")), React.createElement(Drawer, {\n    open: open,\n    onClose: function onClose() {\n      return setOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, holder.title.isPublished ? React.createElement(Fab, {\n    className: classes.save,\n    onClick: preSubmit,\n    variant: \"extended\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"save\"), React.createElement(Typography, {\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Save\")) : React.createElement(Fab, {\n    className: classes.save,\n    onClick: preSubmit,\n    variant: \"extended\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"save\"), React.createElement(Typography, {\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"Publish\")), React.createElement(TextSize, {\n    margin: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }), React.createElement(Font, {\n    margin: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }), React.createElement(Styling, {\n    margin: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }), React.createElement(Justify, {\n    margin: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }), React.createElement(Margin, {\n    margin: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }))));\n};\n\nexport default Toolbar;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/MDToolbar.js"],"names":["React","useContext","useState","TextSize","Font","Styling","Justify","Margin","EditorContext","makeStyles","green","amber","Grid","Icon","Fab","Button","Snackbar","SnackbarContent","Typography","Drawer","months","useStyles","theme","container","padding","background","position","top","zIndex","boxShadow","editorTools","display","justifyContent","alignItems","alignContent","flexWrap","input","width","save","backgroundColor","transition","transform","error","palette","dark","warning","success","message","Toolbar","classes","holder","open","setOpen","setError","setSuccess","messsage","setWarning","closeError","closeSuccess","closeWarning","preSubmit","title","text","description","readLength","jumbotron","src","body","isPublished","handleChanges","handleSubmit","now","Date","date","parsedDate","getMonth","getDate","epoch","getTime","data","fetch","method","JSON","stringify","headers","then","res","json","result","setPublished","catch","marginLeft"],"mappings":"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","sourcesContent":["import React, {\n    useContext,\n    useState,\n} from 'react';\n\nimport TextSize from './Tools/TextSize';\nimport Font from './Tools/Font';\nimport Styling from './Tools/Styling';\nimport Justify from './Tools/Justify';\nimport Margin from './Tools/Margin';\n\nimport { EditorContext } from '../../Context/EditorContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green, amber } from '@material-ui/core/colors';\nimport {\n    Grid,\n    Icon,\n    Fab,\n    Button,\n    Snackbar,\n    SnackbarContent,\n    Typography,\n    Drawer,\n} from '@material-ui/core';\n\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        padding: 20,\n        background: '#ffffff',\n        position: 'fixed',\n        top: 70,\n        zIndex: 2,\n        boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)',\n    },\n    editorTools: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n    },\n    input: {\n        width: '80%'\n    },\n    save: {\n        position: 'relative',\n        backgroundColor: 'rgb(0, 0, 0, 0.2)',\n        transition: 'all 0.4s ease',\n        '&:hover': {\n            transform: 'scale(1.03)',\n            backgroundColor: 'rgb(0, 0, 0, 0.05)',\n        },\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    success: {\n        backgroundColor: green[600],\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\nconst Toolbar = () => {\n\n    const classes = useStyles();\n    const holder = useContext(EditorContext);\n\n    const [open, setOpen] = useState(false);\n    const [error, setError] = useState({\n        open: false,\n        message: '',\n    });\n    const [success, setSuccess] = useState({\n        open: false,\n        message: 'Article saved!'\n    });\n    const [warning, setWarning] = useState({\n        open: false,\n        messsage: '',\n    });\n\n    const closeError = () => { setError({ open: false, message: '' }); };\n    const closeSuccess = () => { setSuccess({ open: false, message: 'Article Saved!' }); };\n    const closeWarning = () => { setWarning({ open: false, message: '' }); };\n\n    const preSubmit = () => {\n        switch (true) {\n            case !holder.title.text:\n                setWarning({ open: true, message: 'Title is required!' });\n                break;\n            case !holder.description.text:\n                setWarning({ open: true, message: 'Description is required!' });\n                break;\n            case !holder.readLength.text:\n                setWarning({ open: true, message: 'Read Length is required!' });\n                break;\n            case !holder.jumbotron.src:\n                setWarning({ open: true, message: 'Jumbotron is required!' });\n                break;\n            case !holder.body[0].text:\n                setWarning({ open: true, message: 'A body section is required!' });\n                break;\n            case holder.title.isPublished:\n                handleChanges();\n                break;\n            case !holder.title.isPublished:\n                handleSubmit();\n                break;\n            default:\n                setError({ open: true, message: 'Something went wrong :(' });\n                break;\n        }\n    };\n\n    const handleSubmit = () => {\n        const now = new Date();\n        const date = {\n            parsedDate: `${months[now.getMonth()]} ${now.getDate()}`,\n            epoch: now.getTime(),\n        };\n        const data = {\n            title: holder.title,\n            description: holder.description,\n            readLength: holder.readLength,\n            jumbotron: holder.jumbotron,\n            body: holder.body,\n            date,\n        };\n        fetch('/api/editors/newArticle',{\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(res => res.json())\n            .then((result) => {\n                if (result.error) {\n                    return setError({ open: true, message: result.error });\n                }\n                setSuccess({ open: true, message: 'Article published!' });\n                holder.setPublished();\n            })\n            .catch((error) => { setError({ open: true, message: error }); });\n    };\n\n    const handleChanges = () => {\n        const data = {\n            title: holder.title,\n            description: holder.description,\n            readLength: holder.readLength,\n            jumbotron: holder.jumbotron,\n            body: holder.body,\n        };\n        fetch('/api/editors/saveChanges', {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(res => res.json())\n            .then((result) => {\n                if (result.error) {\n                    return setError({ open: true, message: result.error });\n                }\n                setSuccess({ open: true, message: 'Article Saved!' });\n            })\n            .catch((error) => { setError({ open: true, message: error }); });\n    };\n\n    return (\n        <Grid\n            className={classes.container}\n            justify=\"center\"\n            alignItems=\"center\"\n            container\n        >\n\n            <Grid className={classes.editorTools} item xs={12}>\n\n                <Button onClick={() => setOpen(true)}>\n                    <Icon>\n                        menu\n                    </Icon>\n                </Button>\n\n                <Drawer\n                    open={open}\n                    onClose={() => setOpen(false)}\n                >\n\n                    {\n                        holder.title.isPublished\n                            ?\n                        <Fab\n                            className={classes.save}\n                            onClick={preSubmit}\n                            variant=\"extended\"\n                        >\n                            <Icon>\n                                save\n                            </Icon>\n                            <Typography style={{ marginLeft: 10 }}>\n                                Save\n                            </Typography>\n                        </Fab>\n                            :\n                        <Fab\n                            className={classes.save}\n                            onClick={preSubmit}\n                            variant=\"extended\"\n                        >\n                            <Icon>\n                                save\n                            </Icon>\n                            <Typography style={{ marginLeft: 10 }}>\n                                Publish\n                            </Typography>\n                        </Fab>\n                    }\n\n                    <TextSize margin={0} />\n                    \n                    <Font margin={0} />\n\n                    <Styling margin={0} />\n\n                    <Justify margin={0} />\n\n                    <Margin margin={0} />\n\n                </Drawer>\n\n            </Grid>\n\n        </Grid>\n    );\n};\n\nexport default Toolbar;\n"]},"metadata":{},"sourceType":"module"}