{"ast":null,"code":"var _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/Context/MediaQuery.js\";\nimport React, { createContext } from 'react';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nexport var MediaContext = createContext();\nexport var MediaProvider = function MediaProvider(props) {\n  var theme = useTheme();\n  var xl = useMediaQuery(theme.breakpoints.up('lg'));\n  var lg = useMediaQuery(theme.breakpoints.down('lg'));\n  var md = useMediaQuery(theme.breakpoints.down('md'));\n  var sm = useMediaQuery(theme.breakpoints.down('sm'));\n  var xs = useMediaQuery(theme.breakpoints.down('xs'));\n\n  var getWidth = function getWidth() {\n    switch (true) {\n      case xs:\n        return console.log('XS');\n\n      case sm:\n        return console.log('SM');\n\n      case md:\n        return console.log('MD');\n\n      case lg:\n        return console.log('LG');\n\n      default:\n        console.log('XL');\n    }\n  };\n\n  getWidth();\n  return React.createElement(MediaContext.Provider, {\n    value: {\n      xl: xl,\n      lg: lg,\n      md: md,\n      sm: sm,\n      xs: xs\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/Context/MediaQuery.js"],"names":["React","createContext","useTheme","useMediaQuery","MediaContext","MediaProvider","props","theme","xl","breakpoints","up","lg","down","md","sm","xs","getWidth","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,OAAO,IAAMC,YAAY,GAAGH,aAAa,EAAlC;AAEP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAElC,MAAMC,KAAK,GAAGL,QAAQ,EAAtB;AAEA,MAAMM,EAAE,GAAGL,aAAa,CAACI,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,CAAxB;AACA,MAAMC,EAAE,GAAGR,aAAa,CAACI,KAAK,CAACE,WAAN,CAAkBG,IAAlB,CAAuB,IAAvB,CAAD,CAAxB;AACA,MAAMC,EAAE,GAAGV,aAAa,CAACI,KAAK,CAACE,WAAN,CAAkBG,IAAlB,CAAuB,IAAvB,CAAD,CAAxB;AACA,MAAME,EAAE,GAAGX,aAAa,CAACI,KAAK,CAACE,WAAN,CAAkBG,IAAlB,CAAuB,IAAvB,CAAD,CAAxB;AACA,MAAMG,EAAE,GAAGZ,aAAa,CAACI,KAAK,CAACE,WAAN,CAAkBG,IAAlB,CAAuB,IAAvB,CAAD,CAAxB;;AAEA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,YAAO,IAAP;AACI,WAAKD,EAAL;AACI,eAAOE,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAP;;AACJ,WAAKJ,EAAL;AACI,eAAOG,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAP;;AACJ,WAAKL,EAAL;AACI,eAAOI,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAP;;AACJ,WAAKP,EAAL;AACI,eAAOM,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAP;;AACJ;AACID,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AAVR;AAYH,GAbD;;AAeAF,EAAAA,QAAQ;AAER,SAEI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAER,MAAAA,EAAE,EAAFA,EAAF;AAAMG,MAAAA,EAAE,EAAFA,EAAN;AAAUE,MAAAA,EAAE,EAAFA,EAAV;AAAcC,MAAAA,EAAE,EAAFA,EAAd;AAAkBC,MAAAA,EAAE,EAAFA;AAAlB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEMT,KAAK,CAACa,QAFZ,CAFJ;AAQH,CAnCM","sourcesContent":["import React, { createContext } from 'react';\n\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nexport const MediaContext = createContext();\n\nexport const MediaProvider = props => {\n\n    const theme = useTheme();\n\n    const xl = useMediaQuery(theme.breakpoints.up('lg'))\n    const lg = useMediaQuery(theme.breakpoints.down('lg'));\n    const md = useMediaQuery(theme.breakpoints.down('md'));\n    const sm = useMediaQuery(theme.breakpoints.down('sm'));\n    const xs = useMediaQuery(theme.breakpoints.down('xs'));\n\n    const getWidth = () => {\n        switch(true) {\n            case xs:\n                return console.log('XS');\n            case sm:\n                return console.log('SM');\n            case md:\n                return console.log('MD');\n            case lg:\n                return console.log('LG');\n            default:\n                console.log('XL');\n        }\n    };\n\n    getWidth();\n\n    return (\n\n        <MediaContext.Provider value={{ xl, lg, md, sm, xs }} >\n\n            { props.children }\n\n        </MediaContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}