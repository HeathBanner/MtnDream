{"ast":null,"code":"import _objectSpread from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Contact/Form.js\";\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { Divider, Grid, Paper, TextField, Typography, Button, Snackbar, SnackbarContent, Slide, Icon, IconButton } from '@material-ui/core';\nimport { MediaContext } from '../../Context/MediaQuery';\nvar initInfo = {\n  name: '',\n  email: '',\n  phone: '',\n  message: ''\n};\nvar useStyles = makeStyles(function (theme) {\n  var _formPaper, _input, _inputBase, _MuiInputLabelOutl, _textFieldLabels, _button;\n\n  return {\n    formContainer: {\n      paddingTop: 300,\n      paddingBottom: 100,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexWrap: 'wrap'\n    },\n    formPaper: (_formPaper = {}, _defineProperty(_formPaper, theme.breakpoints.up('lg'), {\n      width: '60%',\n      padding: '30px 60px'\n    }), _defineProperty(_formPaper, \"width\", '70%'), _defineProperty(_formPaper, \"padding\", 30), _defineProperty(_formPaper, \"background\", 'linear-gradient(120deg, #ffffff 30%, #f6fff5 90%)'), _defineProperty(_formPaper, \"display\", 'flex'), _defineProperty(_formPaper, \"justifyContent\", 'center'), _defineProperty(_formPaper, \"alignItems\", 'center'), _defineProperty(_formPaper, \"alignContent\", 'center'), _defineProperty(_formPaper, \"flexWrap\", 'wrap'), _formPaper),\n    input: (_input = {}, _defineProperty(_input, theme.breakpoints.up('lg'), {\n      marginTop: 40\n    }), _defineProperty(_input, theme.breakpoints.up('sm'), {\n      marginTop: 30\n    }), _defineProperty(_input, \"width\", '100%'), _defineProperty(_input, \"marginTop\", 20), _input),\n    inputBase: (_inputBase = {}, _defineProperty(_inputBase, theme.breakpoints.down('lg'), {\n      fontSize: '1.5rem',\n      padding: 15\n    }), _defineProperty(_inputBase, theme.breakpoints.down('md'), {\n      fontSize: '1.2rem',\n      padding: '10px 10px'\n    }), _defineProperty(_inputBase, theme.breakpoints.down('xs'), {\n      padding: 10\n    }), _defineProperty(_inputBase, \"padding\", '25px 20px'), _defineProperty(_inputBase, \"fontSize\", '2rem'), _inputBase),\n    textFieldLabels: (_textFieldLabels = {}, _defineProperty(_textFieldLabels, theme.breakpoints.up('lg'), {\n      fontSize: '2rem',\n      transform: 'translate(20px, 25px) scale(1)'\n    }), _defineProperty(_textFieldLabels, theme.breakpoints.down('md'), {\n      fontSize: '1.2rem',\n      transform: 'translate(15px, 15px) scale(1)'\n    }), _defineProperty(_textFieldLabels, '&.MuiInputLabel-outlined.MuiInputLabel-shrink', (_MuiInputLabelOutl = {}, _defineProperty(_MuiInputLabelOutl, theme.breakpoints.up('lg'), {\n      transform: 'translate(14px, -14px) scale(0.75)'\n    }), _defineProperty(_MuiInputLabelOutl, theme.breakpoints.down('md'), {\n      transform: 'translate(14px, -7.5px) scale(0.75)'\n    }), _defineProperty(_MuiInputLabelOutl, \"transform\", 'translate(14px, -9px) scale(0.75)'), _MuiInputLabelOutl)), _defineProperty(_textFieldLabels, \"fontSize\", '1.5rem'), _defineProperty(_textFieldLabels, \"transform\", 'translate(18px, 22px) scale(1)'), _textFieldLabels),\n    button: (_button = {}, _defineProperty(_button, theme.breakpoints.up('lg'), {\n      marginTop: 40,\n      padding: 15\n    }), _defineProperty(_button, theme.breakpoints.up('sm'), {\n      marginTop: 30\n    }), _defineProperty(_button, theme.breakpoints.down('xs'), {\n      padding: 10\n    }), _defineProperty(_button, \"padding\", 15), _defineProperty(_button, \"marginTop\", 20), _defineProperty(_button, \"width\", '100%'), _defineProperty(_button, \"color\", 'white'), _defineProperty(_button, \"transition\", 'all 0.4s ease'), _defineProperty(_button, \"background\", 'linear-gradient(45deg, rgba(152, 152, 152, 0.07) 0%, rgba(152, 152, 152, 0.07) 48%,rgba(136, 136, 136, 0.07) 48%, rgba(136, 136, 136, 0.07) 100%),linear-gradient(45deg, rgba(235, 235, 235, 0.06) 0%, rgba(235, 235, 235, 0.06) 79%,rgba(218, 218, 218, 0.06) 79%, rgba(218, 218, 218, 0.06) 100%),linear-gradient(135deg, rgba(12, 12, 12, 0.04) 0%, rgba(12, 12, 12, 0.04) 30%,rgba(79, 79, 79, 0.04) 30%, rgba(79, 79, 79, 0.04) 100%),linear-gradient(45deg, rgba(173, 173, 173, 0.03) 0%, rgba(173, 173, 173, 0.03) 66%,rgba(245, 245, 245, 0.03) 66%, rgba(245, 245, 245, 0.03) 100%),linear-gradient(135deg, rgba(84, 84, 84, 0.06) 0%, rgba(84, 84, 84, 0.06) 51%,rgba(165, 165, 165, 0.06) 51%, rgba(165, 165, 165, 0.06) 100%),linear-gradient(45deg, rgba(15, 15, 15, 0.02) 0%, rgba(15, 15, 15, 0.02) 14%,rgba(95, 95, 95, 0.02) 14%, rgba(95, 95, 95, 0.02) 100%),linear-gradient(0deg, rgba(34, 34, 34, 0.05) 0%, rgba(34, 34, 34, 0.05) 58%,rgba(98, 98, 98, 0.05) 58%, rgba(98, 98, 98, 0.05) 100%),linear-gradient(90deg, rgb(50, 216, 218),rgb(2, 110, 165))'), _defineProperty(_button, '&:hover', {\n      transform: 'scale(1.03)',\n      backgroundPosition: '0px -50px'\n    }), _button),\n    snackbar: {\n      backgroundColor: green[600]\n    }\n  };\n});\n\nvar Form = function Form() {\n  var classes = useStyles();\n  var media = useContext(MediaContext);\n\n  var _useState = useState({\n    initInfo: initInfo\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      info = _useState2[0],\n      setInfo = _useState2[1];\n\n  var _useState3 = useState('Your contact information has been sent!'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      status = _useState4[0],\n      setStatus = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      open = _useState6[0],\n      setOpen = _useState6[1];\n\n  var handleSubmit = function handleSubmit() {\n    fetch('/api/contact/contactMe', {\n      method: 'POST',\n      body: JSON.stringify(info),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      if (!result) {\n        setStatus('Something went wrong!');\n      }\n\n      setOpen(true);\n      setInfo(_objectSpread({}, initInfo));\n    });\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var slideTransition = function slideTransition(props) {\n    return React.createElement(Slide, Object.assign({}, props, {\n      direction: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }));\n  };\n\n  var getHeaderVariant = function getHeaderVariant() {\n    switch (true) {\n      case media.xs:\n        return 'h4';\n\n      case media.sm:\n        return 'h2';\n\n      default:\n        return 'h1';\n    }\n  };\n\n  var getButtonVariant = function getButtonVariant() {\n    switch (true) {\n      case media.md:\n        return 'h5';\n\n      case media.lg:\n        return 'h4';\n\n      default:\n        return 'h4';\n    }\n  };\n\n  return React.createElement(Grid, {\n    className: classes.formContainer,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.formPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.formHeader,\n    variant: getHeaderVariant(),\n    color: \"primary\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Contact Us!\"), React.createElement(Divider, {\n    style: {\n      width: '70%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Name\",\n    value: info.name,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        name: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Email\",\n    value: info.email,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        email: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Phone\",\n    value: info.phone,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        phone: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Message\",\n    value: info.message,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        message: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleSubmit,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: getButtonVariant(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, \"Submit\")), React.createElement(Snackbar, {\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: slideTransition,\n    ContentProps: {\n      'aria-describedby': 'message-id'\n    },\n    autoHideDuration: 6000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: classes.snackbar,\n    message: React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, status),\n    action: React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"close\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }))));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Contact/Form.js"],"names":["React","useState","useContext","makeStyles","green","Divider","Grid","Paper","TextField","Typography","Button","Snackbar","SnackbarContent","Slide","Icon","IconButton","MediaContext","initInfo","name","email","phone","message","useStyles","theme","formContainer","paddingTop","paddingBottom","display","justifyContent","alignItems","flexWrap","formPaper","breakpoints","up","width","padding","input","marginTop","inputBase","down","fontSize","textFieldLabels","transform","button","backgroundPosition","snackbar","backgroundColor","Form","classes","media","info","setInfo","status","setStatus","open","setOpen","handleSubmit","fetch","method","body","JSON","stringify","headers","then","res","json","result","handleClose","slideTransition","props","getHeaderVariant","xs","sm","getButtonVariant","md","lg","formHeader","className","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { Divider, Grid, Paper, TextField, Typography, Button, Snackbar, SnackbarContent, Slide, Icon, IconButton } from '@material-ui/core';\n\nimport { MediaContext } from '../../Context/MediaQuery';\n\nconst initInfo = {\n    name: '',\n    email: '',\n    phone: '',\n    message: ''\n};\n\nconst useStyles = makeStyles((theme) => ({\n    formContainer: {\n        paddingTop: 300,\n        paddingBottom: 100,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n    },\n    formPaper: {\n        [theme.breakpoints.up('lg')]: {\n            width: '60%',\n            padding: '30px 60px'\n        },\n        width: '70%',\n        padding: 30,\n        background: 'linear-gradient(120deg, #ffffff 30%, #f6fff5 90%)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap'\n    },\n    input: {\n        [theme.breakpoints.up('lg')]: {\n            marginTop: 40,\n        },\n        [theme.breakpoints.up('sm')]: {\n            marginTop: 30\n        },\n        width: '100%',\n        marginTop: 20,\n    },\n    inputBase: {\n        [theme.breakpoints.down('lg')]: {\n            fontSize: '1.5rem',\n            padding: 15,\n        },\n        [theme.breakpoints.down('md')]: {\n            fontSize: '1.2rem',\n            padding: '10px 10px',\n        },\n        [theme.breakpoints.down('xs')]: {\n            padding: 10\n        },\n        padding: '25px 20px',\n        fontSize: '2rem',\n    },\n    textFieldLabels: {\n        [theme.breakpoints.up('lg')]: {\n            fontSize: '2rem',\n            transform: 'translate(20px, 25px) scale(1)'\n        },\n        [theme.breakpoints.down('md')]: {\n            fontSize: '1.2rem',\n            transform: 'translate(15px, 15px) scale(1)'\n        },\n        '&.MuiInputLabel-outlined.MuiInputLabel-shrink': {\n            [theme.breakpoints.up('lg')]: {\n                transform: 'translate(14px, -14px) scale(0.75)'\n            },\n            [theme.breakpoints.down('md')]: {\n                transform: 'translate(14px, -7.5px) scale(0.75)'\n            },\n            transform: 'translate(14px, -9px) scale(0.75)'\n        },\n        fontSize: '1.5rem',\n        transform: 'translate(18px, 22px) scale(1)'\n    },\n    button: {\n        [theme.breakpoints.up('lg')]: {\n            marginTop: 40,\n            padding: 15\n        },\n        [theme.breakpoints.up('sm')]: {\n            marginTop: 30\n        },\n        [theme.breakpoints.down('xs')]: {\n            padding: 10\n        },\n        padding: 15,\n        marginTop: 20,\n        width: '100%',\n        color: 'white',\n        transition: 'all 0.4s ease',\n        background: 'linear-gradient(45deg, rgba(152, 152, 152, 0.07) 0%, rgba(152, 152, 152, 0.07) 48%,rgba(136, 136, 136, 0.07) 48%, rgba(136, 136, 136, 0.07) 100%),linear-gradient(45deg, rgba(235, 235, 235, 0.06) 0%, rgba(235, 235, 235, 0.06) 79%,rgba(218, 218, 218, 0.06) 79%, rgba(218, 218, 218, 0.06) 100%),linear-gradient(135deg, rgba(12, 12, 12, 0.04) 0%, rgba(12, 12, 12, 0.04) 30%,rgba(79, 79, 79, 0.04) 30%, rgba(79, 79, 79, 0.04) 100%),linear-gradient(45deg, rgba(173, 173, 173, 0.03) 0%, rgba(173, 173, 173, 0.03) 66%,rgba(245, 245, 245, 0.03) 66%, rgba(245, 245, 245, 0.03) 100%),linear-gradient(135deg, rgba(84, 84, 84, 0.06) 0%, rgba(84, 84, 84, 0.06) 51%,rgba(165, 165, 165, 0.06) 51%, rgba(165, 165, 165, 0.06) 100%),linear-gradient(45deg, rgba(15, 15, 15, 0.02) 0%, rgba(15, 15, 15, 0.02) 14%,rgba(95, 95, 95, 0.02) 14%, rgba(95, 95, 95, 0.02) 100%),linear-gradient(0deg, rgba(34, 34, 34, 0.05) 0%, rgba(34, 34, 34, 0.05) 58%,rgba(98, 98, 98, 0.05) 58%, rgba(98, 98, 98, 0.05) 100%),linear-gradient(90deg, rgb(50, 216, 218),rgb(2, 110, 165))',\n        '&:hover': {\n            transform: 'scale(1.03)',\n            backgroundPosition: '0px -50px',\n        },\n    },\n    snackbar: {\n        backgroundColor: green[600]\n    },\n}));\n\nconst Form = () => {\n\n    const classes = useStyles();\n    const media = useContext(MediaContext);\n\n    const [info, setInfo] = useState({ initInfo });\n    const [status, setStatus] = useState('Your contact information has been sent!');\n\n    const [open, setOpen] = useState(false);\n\n    const handleSubmit = () => {\n        fetch('/api/contact/contactMe', {\n            method: 'POST',\n            body: JSON.stringify(info),\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.json())\n            .then(result => {\n                if (!result) { setStatus('Something went wrong!'); }\n                setOpen(true);\n                setInfo({ ...initInfo });\n            });\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const slideTransition = (props) => {\n        return <Slide {...props} direction=\"right\" />\n    };\n\n    const getHeaderVariant = () => {\n        switch (true) {\n            case media.xs:\n                return 'h4';\n            case media.sm:\n                return 'h2';\n            default:\n                return 'h1';\n        }\n    };\n\n    const getButtonVariant = () => {\n        switch (true) {\n            case media.md:\n                return 'h5';\n            case media.lg:\n                return 'h4';\n            default:\n                return 'h4';\n        }\n    };\n\n    return (\n        <Grid className={classes.formContainer} item xs={12}>\n\n            <Paper className={classes.formPaper}>\n\n                <Typography\n                    className={classes.formHeader}\n                    variant={getHeaderVariant()}\n                    color=\"primary\"\n                    align=\"center\"\n                >\n                    Contact Us!\n                </Typography>\n\n                <Divider style={{ width: '70%' }} />\n\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Name\"\n                    value={info.name}\n                    onChange={(e) => setInfo({ ...info, name: e.target.value })}\n                />\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Email\"\n                    value={info.email}\n                    onChange={(e) => setInfo({ ...info, email: e.target.value })}\n                />\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Phone\"\n                    value={info.phone}\n                    onChange={(e) => setInfo({ ...info, phone: e.target.value })}\n                />\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Message\"\n                    value={info.message}\n                    onChange={(e) => setInfo({ ...info, message: e.target.value })}\n                />\n\n                <Button onClick={handleSubmit} className={classes.button}>\n                    <Typography variant={getButtonVariant()}>\n                        Submit\n                    </Typography>\n                </Button>\n\n\n                <Snackbar \n                    open={open}\n                    onClose={handleClose}\n                    TransitionComponent={ slideTransition }\n                    ContentProps={{ 'aria-describedby': 'message-id' }}\n                    autoHideDuration={6000}\n                >\n\n                    <SnackbarContent \n                        className={classes.snackbar}\n                        message={ \n                            <Typography variant=\"h6\" align=\"center\">\n                                {status}\n                            </Typography>\n                        }\n                        action={\n                            <IconButton color=\"inherit\" onClick={handleClose}>\n                                <Icon>close</Icon>\n                            </IconButton>\n                        }\n                    />\n\n                </Snackbar>\n\n            </Paper>\n\n        </Grid>\n    );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}