{"ast":null,"code":"import _defineProperty from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/Context/EditorContext.js\";\nimport React, { useState, createContext, useEffect } from 'react';\nimport { bigIntLiteral } from '@babel/types';\nexport var EditorContext = createContext();\nvar intialPreview = {\n  text: '',\n  bold: false,\n  italic: false,\n  underline: false,\n  color: 'black',\n  highlight: false,\n  font: 'Roboto',\n  justify: 'left',\n  textStyle: 'body1'\n};\nexport var EditorProvider = function EditorProvider(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editMode = _useState2[0],\n      setEditMode = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      articleList = _useState4[0],\n      setArticleList = _useState4[1];\n\n  var _useState5 = useState('title'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sectionMode = _useState6[0],\n      setSectionMode = _useState6[1];\n\n  var _useState7 = useState(_objectSpread({}, intialPreview)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      title = _useState8[0],\n      setTitle = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      jumbotron = _useState10[0],\n      setJumbotron = _useState10[1];\n\n  var _useState11 = useState(_objectSpread({}, intialPreview)),\n      _useState12 = _slicedToArray(_useState11, 2),\n      currentBody = _useState12[0],\n      setCurrentBody = _useState12[1];\n\n  var _useState13 = useState([_objectSpread({}, intialPreview)]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      body = _useState14[0],\n      setBody = _useState14[1];\n\n  useEffect(function () {\n    fetch('/api/editors/getList').then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      var _console;\n\n      (_console = console).log.apply(_console, _toConsumableArray(result));\n\n      setArticleList(result);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  }, []);\n\n  var handleMode = function handleMode() {\n    setEditMode(!editMode);\n  };\n\n  var handleSectionMode = function handleSectionMode(newSection) {\n    switch (newSection) {\n      case 'title':\n      case newSection !== sectionMode:\n        setSectionMode(newSection);\n        break;\n\n      case 'jumbotron':\n      case newSection !== sectionMode:\n        setSectionMode(newSection);\n        break;\n\n      case 'currentBody':\n      case newSection !== sectionMode:\n        setSectionMode(newSection);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  var handleSubmit = function handleSubmit(data) {\n    console.log('SUBMIT');\n    fetch('/api/editors/newSection', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      console.log(result);\n      setTitle(result.title);\n      setJumbotron(result.jumbotron);\n      setBody(result.body);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var handleInput = function handleInput(e) {\n    var input = e.target.value;\n\n    switch (sectionMode) {\n      case 'title':\n        setTitle(_objectSpread({}, title, {\n          text: input\n        }));\n        break;\n\n      case 'jumbotron':\n        setJumbotron(input);\n        break;\n\n      case 'currentBody':\n        setCurrentBody(_objectSpread({}, currentBody, {\n          text: input\n        }));\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  var handleArticle = function handleArticle() {\n    var section = {\n      sectionMode: sectionMode,\n      title: title,\n      jumbotron: jumbotron,\n      text: currentBody\n    };\n    handleSubmit(section);\n  };\n\n  var handleFont = function handleFont(newFont) {\n    switch (sectionMode) {\n      case 'title':\n        setTitle(_objectSpread({}, title, {\n          font: newFont\n        }));\n        break;\n\n      case 'currentBody':\n        setCurrentBody(_objectSpread({}, currentBody, {\n          font: body\n        }));\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  var handleStyling = function handleStyling(style, color) {\n    switch (sectionMode) {\n      case 'title':\n        setTitle(_objectSpread({}, title, _defineProperty({}, style, !title[style])));\n        break;\n\n      case 'currentBody':\n        setCurrentBody(_objectSpread({}, currentBody, _defineProperty({}, style, !body[style])));\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  var handleJustify = function handleJustify(justification) {\n    switch (sectionMode) {\n      case 'title':\n        setTitle(_objectSpread({}, title, {\n          justify: justification\n        }));\n        break;\n\n      case 'currentBody':\n        setCurrentBody(_objectSpread({}, currentBody, {\n          justify: justification\n        }));\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  var handleTextStyle = function handleTextStyle(style) {\n    switch (sectionMode) {\n      case 'title':\n        setTitle(_objectSpread({}, title, {\n          textStyle: style\n        }));\n        break;\n\n      case 'currentBody':\n        setCurrentBody(_objectSpread({}, currentBody, {\n          textStyle: style\n        }));\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return React.createElement(EditorContext.Provider, {\n    value: {\n      handleInput: handleInput,\n      title: title,\n      jumbotron: jumbotron,\n      currentBody: currentBody,\n      body: body,\n      handleStyling: handleStyling,\n      handleFont: handleFont,\n      handleJustify: handleJustify,\n      handleTextStyle: handleTextStyle,\n      handleArticle: handleArticle,\n      editMode: editMode,\n      handleMode: handleMode,\n      articleList: articleList,\n      sectionMode: sectionMode,\n      handleSectionMode: handleSectionMode\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/Context/EditorContext.js"],"names":["React","useState","createContext","useEffect","bigIntLiteral","EditorContext","intialPreview","text","bold","italic","underline","color","highlight","font","justify","textStyle","EditorProvider","props","editMode","setEditMode","articleList","setArticleList","sectionMode","setSectionMode","title","setTitle","jumbotron","setJumbotron","currentBody","setCurrentBody","body","setBody","fetch","then","res","json","result","console","log","catch","error","handleMode","handleSectionMode","newSection","handleSubmit","data","method","JSON","stringify","headers","handleInput","e","input","target","value","handleArticle","section","handleFont","newFont","handleStyling","style","handleJustify","justification","handleTextStyle","children"],"mappings":"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","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\nimport { bigIntLiteral } from '@babel/types';\n\nexport const EditorContext = createContext();\n\nconst intialPreview = {\n    text: '',\n    bold: false,\n    italic: false,\n    underline: false,\n    color: 'black',\n    highlight: false,\n    font: 'Roboto',\n    justify: 'left',\n    textStyle: 'body1',\n}\n\nexport const EditorProvider = props => {\n\n    const [editMode, setEditMode] = useState(false);\n    const [articleList, setArticleList] = useState([]);\n\n    const [sectionMode, setSectionMode] = useState('title');\n    const [title, setTitle] = useState({ ...intialPreview });\n    const [jumbotron, setJumbotron] = useState('');\n    const [currentBody, setCurrentBody] = useState({ ...intialPreview });\n    const [body, setBody] = useState([ { ...intialPreview } ]);\n    \n    useEffect(() => {\n\n        fetch('/api/editors/getList')\n        .then(res => res.json())\n        .then(result => {\n            console.log(...result);\n            setArticleList(result)\n        })\n        .catch(error => console.log(error));\n\n    }, [] );\n\n    const handleMode = () => {\n        setEditMode(!editMode);\n    };\n\n    const handleSectionMode = (newSection) => {\n\n        switch (newSection) {\n\n            case 'title':\n            case newSection !== sectionMode:\n                setSectionMode(newSection);\n                break;\n\n            case 'jumbotron':\n            case newSection !== sectionMode:\n                setSectionMode(newSection);\n                break;\n\n            case 'currentBody':\n            case newSection !== sectionMode:\n                setSectionMode(newSection);\n                break;\n\n            default:\n                return\n        }\n    };\n\n    const handleSubmit = data => {\n\n        console.log('SUBMIT')\n\n        fetch('/api/editors/newSection',{\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {'Content-Type': 'application/json'}\n        })\n        .then(res => res.json())\n        .then((result) => {\n            console.log(result);\n            setTitle(result.title);\n            setJumbotron(result.jumbotron);\n            setBody(result.body);\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    };\n\n    const handleInput = (e) => {\n\n        let input = e.target.value;\n\n        switch (sectionMode) {\n\n            case 'title':\n                setTitle({ ...title, text: input });\n                break;\n            case 'jumbotron':\n                setJumbotron(input);\n                break;\n            case 'currentBody':\n                setCurrentBody({ ...currentBody, text: input });\n                break;\n            default:\n                return\n        }\n    };\n\n    const handleArticle = () => {\n\n        let section = {\n            sectionMode: sectionMode,\n            title: title,\n            jumbotron: jumbotron,\n            text: currentBody,\n        }\n\n        handleSubmit(section);\n    };\n\n    const handleFont = ( newFont ) => {\n\n        switch (sectionMode) {\n        \n            case 'title':\n                setTitle({ ...title, font: newFont });\n                break;\n            case 'currentBody':\n                setCurrentBody({ ...currentBody, font: body });\n                break;\n            default:\n                return\n        }\n    };\n\n    const handleStyling = ( style, color ) => {\n\n        switch (sectionMode) {\n            \n            case 'title':\n                setTitle({ ...title, [style]: !title[style] });\n                break;\n            case 'currentBody':\n                setCurrentBody({ ...currentBody, [style]: !body[style] });   \n                break;\n            default:\n                return\n        }\n    };\n\n    const handleJustify = justification => {\n\n        switch (sectionMode) {\n\n            case 'title':\n                setTitle({ ...title, justify: justification });\n                break;\n            case 'currentBody':\n                setCurrentBody({ ...currentBody, justify: justification });\n                break;\n            default:\n                return\n        }\n    };\n\n    const handleTextStyle = style => {\n\n        switch (sectionMode) {\n\n            case 'title':\n                setTitle({ ...title, textStyle: style });\n                break;\n            case 'currentBody':\n                setCurrentBody({ ...currentBody, textStyle: style });\n                break;\n            default:\n                return\n        }\n    };\n\n    return (\n\n        <EditorContext.Provider\n            value={{\n                handleInput,\n                title,\n                jumbotron,\n                currentBody,\n                body,\n                handleStyling,\n                handleFont,\n                handleJustify,\n                handleTextStyle,\n                handleArticle,\n                editMode,\n                handleMode,\n                articleList,\n                sectionMode,\n                handleSectionMode\n            }}\n        >\n            {props.children}\n        </EditorContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}