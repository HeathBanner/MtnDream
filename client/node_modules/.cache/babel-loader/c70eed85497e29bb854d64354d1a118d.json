{"ast":null,"code":"import _objectSpread from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Navigation/Drawer.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, Icon, IconButton } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  var _list;\n\n  return {\n    menuIcon: {\n      color: 'white',\n      transition: 'transform .4s ease',\n      '&:hover': {\n        transform: 'scale(1.1)'\n      }\n    },\n    list: (_list = {}, _defineProperty(_list, theme.breakpoints.up('lg'), {\n      width: 450\n    }), _defineProperty(_list, \"width\", 250), _list),\n    menuList: {\n      marginTop: '30px'\n    },\n    fullList: {\n      width: 'auto'\n    }\n  };\n});\nvar drawerList = [{\n  text: 'Home',\n  icon: 'home',\n  link: '/'\n}, // {\n//   text: 'Explore',\n//   icon: 'explore',\n//   link: '/explore'\n// },\n{\n  text: 'Contact',\n  icon: 'contact_phone',\n  link: '/contact'\n}];\n\nvar TemporaryDrawer = function TemporaryDrawer(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState({\n    left: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var toggleDrawer = function toggleDrawer(side, open) {\n    return function (event) {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      } else {\n        setState(_objectSpread({}, state, {\n          left: open\n        }));\n      }\n    };\n  };\n\n  var sideList = function sideList() {\n    return React.createElement(\"div\", {\n      className: classes.list,\n      role: \"presentation\",\n      onClick: toggleDrawer('left', false),\n      onKeyDown: toggleDrawer('left', false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(List, {\n      className: classes.menuList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, drawerList.map(function (item) {\n      return React.createElement(Link, {\n        key: item.text,\n        style: {\n          textDecoration: 'none',\n          color: 'black'\n        },\n        to: item.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        button: true,\n        key: item.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, item.icon)), React.createElement(ListItemText, {\n        primary: item.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })));\n    })));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: toggleDrawer('left', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    className: classes.menuIcon,\n    fontSize: props.query ? 'small' : 'large',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"menu\")), React.createElement(Drawer, {\n    open: state.left,\n    onClose: toggleDrawer('left', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, sideList('left')));\n};\n\nexport default TemporaryDrawer;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Navigation/Drawer.js"],"names":["React","Link","makeStyles","Drawer","List","ListItem","ListItemIcon","ListItemText","Icon","IconButton","useStyles","theme","menuIcon","color","transition","transform","list","breakpoints","up","width","menuList","marginTop","fullList","drawerList","text","icon","link","TemporaryDrawer","props","classes","useState","left","state","setState","toggleDrawer","side","open","event","type","key","sideList","map","item","textDecoration","query"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, Icon, IconButton } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n  menuIcon: {\n    color: 'white',\n    transition: 'transform .4s ease',\n    '&:hover': {\n      transform: 'scale(1.1)'\n    },\n  },\n  list: {\n    [theme.breakpoints.up('lg')]: {\n      width: 450\n    },\n    width: 250,\n  },\n  menuList: {\n    marginTop: '30px',\n  },\n  fullList: {\n    width: 'auto',\n  },\n}));\n\nconst drawerList = [\n  {\n    text: 'Home',\n    icon: 'home',\n    link: '/'\n  },\n  // {\n  //   text: 'Explore',\n  //   icon: 'explore',\n  //   link: '/explore'\n  // },\n  {\n    text: 'Contact',\n    icon: 'contact_phone',\n    link: '/contact'\n  },\n  // {\n  //   text: 'Blog',\n  //   icon: 'vertical_split',\n  //   link: '/blog'\n  // }\n]\n\nconst TemporaryDrawer = props => {\n\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const toggleDrawer = (side, open) => event => {\n\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    else {\n      setState({ ...state, left: open });\n    }\n  };\n\n  const sideList = () => (\n\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer('left', false)}\n      onKeyDown={toggleDrawer('left', false)}\n    >\n      <List className={classes.menuList}>\n\n        {\n          drawerList.map((item) => (\n\n            <Link key={item.text} style={{textDecoration: 'none', color: 'black'}} to={item.link}>\n              \n              <ListItem button key={item.text}>\n              \n                <ListItemIcon>\n                  <Icon>{item.icon}</Icon>\n                </ListItemIcon>\n                \n                <ListItemText primary={item.text} />\n              \n              </ListItem>\n\n            </Link>\n          ))\n        }\n\n      </List>\n\n    </div>\n  );\n\n  return (\n\n    <div>\n\n      <IconButton onClick={toggleDrawer('left', true)}>\n\n        <Icon className={classes.menuIcon} fontSize={props.query ? 'small' : 'large'}>\n          menu\n        </Icon>\n\n      </IconButton>\n      \n      <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\n        \n        {sideList('left')}\n      \n      </Drawer>\n\n    </div>\n  );\n};\n\nexport default TemporaryDrawer;"]},"metadata":{},"sourceType":"module"}