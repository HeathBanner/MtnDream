{"ast":null,"code":"var _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/Image.js\";\nimport React, { useContext } from 'react';\nimport { EditorContext } from '../../../Context/EditorContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nvar useStyles = makeStyles(function () {\n  return {\n    container: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    paper: {\n      padding: 20,\n      width: 350\n    }\n  };\n});\nexport default (function (_ref) {\n  var src = _ref.src,\n      alt = _ref.alt,\n      index = _ref.index;\n  var classes = useStyles();\n  var holder = useContext(EditorContext);\n  var imgHelper = \"data:image/jpeg;base64,\";\n\n  var handleClick = function handleClick() {\n    console.log(\"IS IMAGE\");\n    holder.handleSectionMode({\n      el: 'image',\n      index: index\n    });\n  };\n\n  var handleInput = function handleInput(e) {\n    console.log(e.target.files[0]);\n    holder.handleInput(e, {\n      El: \"image\"\n    });\n  };\n\n  if (src) {\n    return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n      style: {\n        width: '100%',\n        height: '100%',\n        display: 'none'\n      },\n      onChange: handleInput,\n      accept: \"image/*\",\n      id: \"bodyUploader\".concat(index),\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"bodyUploader\".concat(index),\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.button,\n      component: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        width: '100%',\n        height: 'auto',\n        margin: '20px 0px'\n      },\n      src: \"\".concat(imgHelper).concat(src),\n      alt: alt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))));\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n      style: {\n        width: '100%',\n        height: '100%',\n        display: 'none'\n      },\n      onChange: handleInput,\n      accept: \"image/*\",\n      id: \"bodyUploader\".concat(index),\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"bodyUploader\".concat(index),\n      style: {\n        width: '60%'\n      },\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.button,\n      component: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Upload Image\")));\n  }\n\n  ;\n});","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/Image.js"],"names":["React","useContext","EditorContext","makeStyles","Button","useStyles","container","width","display","justifyContent","paper","padding","src","alt","index","classes","holder","imgHelper","handleClick","console","log","handleSectionMode","el","handleInput","e","target","files","El","height","button","margin"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { EditorContext } from '../../../Context/EditorContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    paper: {\n        padding: 20,\n        width: 350,\n    }\n}));\n\nexport default ({ src, alt, index }) => {\n    \n    const classes = useStyles();\n    const holder = useContext(EditorContext);\n    const imgHelper = \"data:image/jpeg;base64,\";\n\n    const handleClick = () => {\n        console.log(\"IS IMAGE\");\n        holder.handleSectionMode({ el: 'image', index: index });\n    };\n\n    const handleInput = (e) => {\n        console.log(e.target.files[0]);\n        holder.handleInput(e, { El: \"image\" });\n    };\n\n    if (src) {\n        return (\n            <>\n                <input\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        display: 'none'\n                    }}\n                    onChange={handleInput}\n                    accept=\"image/*\"\n                    id={`bodyUploader${index}`}\n                    type=\"file\"\n                />\n                <label htmlFor={`bodyUploader${index}`} onClick={handleClick}>\n                    <Button className={classes.button} component=\"span\">\n                        <img \n                            style={{\n                                width: '100%',\n                                height: 'auto',\n                                margin: '20px 0px',\n                            }}\n                            src={`${imgHelper}${src}`}\n                            alt={alt} \n                        />                    \n                    </Button>\n                </label>\n            </>\n        );\n    } else {\n        return (\n            <>\n                <input\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        display: 'none'\n                    }}\n                    onChange={handleInput}\n                    accept=\"image/*\"\n                    id={`bodyUploader${index}`}\n                    type=\"file\"\n                />\n                <label htmlFor={`bodyUploader${index}`} style={{ width: '60%' }} onClick={handleClick}>\n                    <Button className={classes.button} component=\"span\">\n                        Upload Image\n                    </Button>\n                </label>\n            </>\n        );\n    };\n};\n"]},"metadata":{},"sourceType":"module"}