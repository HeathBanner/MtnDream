{"ast":null,"code":"import _regeneratorRuntime from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/pages/Blog/Article.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { MediaContext } from '../../Context/MediaQuery';\nimport Nav from '../../components/Navigation/Nav';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Avatar } from '@material-ui/core';\nvar fontSizes = {\n  h1: '6rem',\n  h2: '3.75rem',\n  h3: '3rem',\n  h4: '2.125rem',\n  h5: '1.5rem',\n  h6: '1.25rem'\n};\nvar mobileFontSizes = {\n  h1: '2.125rem',\n  h2: '2.125em',\n  h3: '1.5rem',\n  h4: '1.5rem',\n  h5: '1.25rem',\n  h6: '1rem'\n};\nvar useStyles = makeStyles(function () {\n  return {\n    container: {\n      marginTop: 60,\n      marginBottom: 80,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      flexWrap: 'wrap'\n    },\n    articlesContainer: {\n      paddingLeft: '20%',\n      paddingRight: 40\n    },\n    infoContainer: {\n      position: 'relative',\n      height: 60,\n      marginTop: 20,\n      paddingLeft: 80,\n      display: 'inline-flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      alignContent: 'center',\n      flexWrap: 'wrap',\n      flexBasis: 'auto'\n    },\n    avatar: {\n      height: 60,\n      width: 60,\n      position: 'absolute',\n      top: 0,\n      left: 0\n    },\n    readLength: {\n      color: 'rgba(0, 0, 0, 0.54)'\n    }\n  };\n});\nexport default (function (_ref) {\n  var match = _ref.match;\n  var media = useContext(MediaContext);\n  var classes = useStyles();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      article = _useState2[0],\n      setArticle = _useState2[1]; // Once the component mounts, this function will grab the article that matches\n  // the url parameter value and update the state with the matched article's elements\n\n\n  useEffect(function () {\n    return fetchArticle();\n  }, []);\n\n  var fetchArticle =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var title, options, res, json;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              title = match.params.title;\n              options = {\n                method: 'POST',\n                body: JSON.stringify({\n                  title: title\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context.next = 4;\n              return fetch('/api/editors/getArticle', options);\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.json();\n\n            case 7:\n              json = _context.sent;\n              setArticle(json);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchArticle() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  if (!article) {\n    return '';\n  }\n\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    style: {\n      height: 60\n    },\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    className: classes.container,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      fontSize: media.md ? mobileFontSizes[article.title.textStyle] : fontSizes[article.title.textStyle],\n      fontFamily: \"\".concat(article.title.font, \", Helvetica, Arial, sans-serif\"),\n      fontWeight: article.title.bold ? 'bold' : 'normal',\n      fontStyle: article.title.italic ? 'italic' : 'normal',\n      textDecoration: article.title.underline ? 'underline' : 'none',\n      textAlign: article.title.justify,\n      color: article.title.color,\n      backgroundColor: article.title.highlight ? '#ffff00' : 'none',\n      marginTop: parseInt(article.title.marginTop),\n      marginBottom: parseInt(article.title.marginBottom),\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, article.title.text), React.createElement(Typography, {\n    style: {\n      fontSize: media.md ? mobileFontSizes[article.description.textStyle] : fontSizes[article.description.textStyle],\n      fontFamily: \"\".concat(article.description.font, \", Helvetica, Arial, sans-serif\"),\n      textAlign: article.description.justify,\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, article.description.text), React.createElement(\"div\", {\n    className: classes.infoContainer,\n    style: {\n      width: article.readLength.justify === 'flex-start' ? '100%' : 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    src: \"https://media.licdn.com/dms/image/C4E03AQESXvxigX8NfQ/profile-displayphoto-shrink_800_800/0?e=1571875200&v=beta&t=jVs0jK8YKBHrOOcmnghTMtN9bhPfu7rH9MHADyTboBY\",\n    alt: \"Terri Banner Profile Photo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Terri Banner\")), React.createElement(Typography, {\n    className: classes.readLength,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Aug 21 \", \" \\u2022 \", \" \".concat(article.readLength.text, \" min read\"))), React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: article.jumbotron.justify\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      marginTop: article.jumbotron.marginTop,\n      marginBottom: article.jumbotron.marginBottom,\n      width: '50%'\n    },\n    src: article.jumbotron.src,\n    alt: article.title.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })), article.body.map(function (section, index) {\n    if (section.isText) {\n      return React.createElement(Typography, {\n        style: {\n          width: '100%',\n          fontSize: media.md ? mobileFontSizes[section.textStyle] : fontSizes[section.textStyle],\n          fontFamily: \"\".concat(section.font, \", Helvetica, Arial, sans-serif\"),\n          fontWeight: section.bold ? 'bold' : 'normal',\n          fontStyle: section.italic ? 'italic' : 'normal',\n          textDecoration: section.underline ? 'underline' : 'none',\n          textAlign: section.justify,\n          color: section.color,\n          backgroundColor: section.highlight ? '#ffff00' : 'none',\n          marginTop: parseInt(section.marginTop),\n          marginBottom: parseInt(section.marginBottom)\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, section.text);\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: section.justify\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: section.src,\n      alt: section.alt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }));\n  })));\n});","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/pages/Blog/Article.js"],"names":["React","useEffect","useState","useContext","MediaContext","Nav","makeStyles","Grid","Typography","Avatar","fontSizes","h1","h2","h3","h4","h5","h6","mobileFontSizes","useStyles","container","marginTop","marginBottom","display","justifyContent","alignItems","flexWrap","articlesContainer","paddingLeft","paddingRight","infoContainer","position","height","alignContent","flexBasis","avatar","width","top","left","readLength","color","match","media","classes","article","setArticle","fetchArticle","title","params","options","method","body","JSON","stringify","headers","fetch","res","json","fontSize","md","textStyle","fontFamily","font","fontWeight","bold","fontStyle","italic","textDecoration","underline","textAlign","justify","backgroundColor","highlight","parseInt","text","description","jumbotron","src","map","section","index","isText","alt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { MediaContext } from '../../Context/MediaQuery';\n\nimport Nav from '../../components/Navigation/Nav';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Avatar } from '@material-ui/core';\n\nconst fontSizes = {\n    h1: '6rem',\n    h2: '3.75rem',\n    h3: '3rem',\n    h4: '2.125rem',\n    h5: '1.5rem',\n    h6: '1.25rem',\n};\nconst mobileFontSizes = {\n    h1: '2.125rem',\n    h2: '2.125em',\n    h3: '1.5rem',\n    h4: '1.5rem',\n    h5: '1.25rem',\n    h6: '1rem',\n};\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        marginTop: 60,\n        marginBottom: 80,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        flexWrap: 'wrap',\n    },\n    articlesContainer: {\n        paddingLeft: '20%',\n        paddingRight: 40,\n    },\n    infoContainer: {\n        position: 'relative',\n        height: 60,\n        marginTop: 20,\n        paddingLeft: 80,\n        display: 'inline-flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n        flexBasis: 'auto',\n    },\n    avatar: {\n        height: 60,\n        width: 60,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    readLength: {\n        color: 'rgba(0, 0, 0, 0.54)',\n    },\n}));\n\nexport default ({ match }) => {\n\n    const media = useContext(MediaContext);\n    const classes = useStyles();\n\n    const [article, setArticle] = useState('');\n\n    // Once the component mounts, this function will grab the article that matches\n    // the url parameter value and update the state with the matched article's elements\n    useEffect(() => fetchArticle(), []);\n\n    const fetchArticle = async () => {\n        const title = match.params.title;\n        const options = {\n            method: 'POST',\n            body: JSON.stringify({ title }),\n            headers: { 'Content-Type': 'application/json' },\n        };\n        const res = await fetch('/api/editors/getArticle', options);\n        const json = await res.json();\n        \n        setArticle(json);\n    };\n\n    if (!article) { return '' }\n    return (\n        <Grid container>\n            <Grid style={{ height: 60 }} item xs={12}>\n\n                <Nav />\n                \n            </Grid>\n            <Grid className={classes.container} item xs={12}>\n\n                {/* The elements will have styles applied inline due to\n                the reliance of the information retrieved from the database and stored\n                within the state */}\n                <Typography\n                    style={{\n                        fontSize: media.md ? mobileFontSizes[article.title.textStyle] : fontSizes[article.title.textStyle],\n                        fontFamily: `${article.title.font}, Helvetica, Arial, sans-serif`,\n                        fontWeight: article.title.bold ? 'bold' : 'normal',\n                        fontStyle: article.title.italic ? 'italic' : 'normal',\n                        textDecoration: article.title.underline ? 'underline' : 'none',\n                        textAlign: article.title.justify,\n                        color: article.title.color,\n                        backgroundColor: article.title.highlight ? '#ffff00' : 'none',\n                        marginTop: parseInt(article.title.marginTop),\n                        marginBottom: parseInt(article.title.marginBottom),\n                        width: '100%',\n                    }}\n                >\n                    {article.title.text}\n                </Typography>\n\n                <Typography\n                    style={{\n                        fontSize: media.md ? mobileFontSizes[article.description.textStyle] : fontSizes[article.description.textStyle],\n                        fontFamily: `${article.description.font}, Helvetica, Arial, sans-serif`,\n                        textAlign: article.description.justify,\n                        width: '100%',\n                    }}                \n                >\n                    {article.description.text}\n                </Typography>\n\n                <div\n                    className={classes.infoContainer}\n                    style={{ width: article.readLength.justify === 'flex-start' ? '100%' : 'auto' }}\n                >\n                    <Avatar\n                        className={classes.avatar}\n                        src={`https://media.licdn.com/dms/image/C4E03AQESXvxigX8NfQ/profile-displayphoto-shrink_800_800/0?e=1571875200&v=beta&t=jVs0jK8YKBHrOOcmnghTMtN9bhPfu7rH9MHADyTboBY`}\n                        alt=\"Terri Banner Profile Photo\"\n                    />\n                    <div style={{ width: '100%' }}>\n                        <Typography>\n                            Terri Banner\n                        </Typography>\n                    </div>\n\n                    <Typography className={classes.readLength}>\n                        {`Aug 21 `} &#8226; {` ${article.readLength.text} min read`}\n                    </Typography>\n                </div>\n\n                <div\n                    style={{\n                        width: '100%',\n                        display: 'flex',\n                        justifyContent: article.jumbotron.justify,\n                    }}\n                >\n                    <img\n                        style={{\n                            marginTop: article.jumbotron.marginTop,\n                            marginBottom: article.jumbotron.marginBottom,\n                            width: '50%',\n                        }}\n                        src={article.jumbotron.src}\n                        alt={article.title.text}\n                    />\n                </div>\n\n                {/* Since the body element can contain either text or image elements,\n                I had to write a conditional to appropriately apply elements and their styles */}\n                {article.body.map((section, index) => {\n                    if (section.isText) {\n                        return (\n                            <Typography\n                                style={{\n                                    width: '100%',\n                                    fontSize: media.md ? mobileFontSizes[section.textStyle] : fontSizes[section.textStyle],\n                                    fontFamily: `${section.font}, Helvetica, Arial, sans-serif`,\n                                    fontWeight: section.bold ? 'bold' : 'normal',\n                                    fontStyle: section.italic ? 'italic' : 'normal',\n                                    textDecoration: section.underline ? 'underline' : 'none',\n                                    textAlign: section.justify,\n                                    color: section.color,\n                                    backgroundColor: section.highlight ? '#ffff00' : 'none',\n                                    marginTop: parseInt(section.marginTop),\n                                    marginBottom: parseInt(section.marginBottom),    \n                                }}\n                                key={index}\n                            >\n                                {section.text}\n                            </Typography>\n                        );\n                    }\n                    return (\n                        <div\n                            style={{\n                                width: '100%',\n                                display: 'flex',\n                                justifyContent: section.justify,\n                            }}\n                        >\n                            <img src={section.src} alt={section.alt} />\n                        </div>\n                    );\n                })}\n\n            </Grid>\n        </Grid>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}