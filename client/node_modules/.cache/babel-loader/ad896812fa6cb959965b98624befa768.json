{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/ColorPicker.js\";\nimport React, { useState, Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Popover, Avatar, Button, Icon } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    typography: {\n      padding: theme.spacing(2)\n    },\n    colorsContainer: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    avatars: {\n      height: 30,\n      width: 30,\n      margin: 5,\n      flexGrow: 1\n    }\n  };\n});\n\nvar ColorPicker = function ColorPicker() {\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      anchorEl = _useState2[0],\n      setAnchorEl = _useState2[1];\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var open = Boolean(anchorEl);\n  var id = open ? 'simple-popover' : undefined;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Button, {\n    \"aria-describedby\": id,\n    variant: \"contained\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"format_color_text\")), React.createElement(Popover, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.colorsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatars,\n    style: {\n      backgroundColor: 'rgb(66, 135, 245)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Avatar, {\n    className: classes.avatars,\n    style: {\n      backgroundColor: 'rgb(167, 66, 245)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Avatar, {\n    className: classes.avatars,\n    style: {\n      backgroundColor: 'rgb(245, 66, 66)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))));\n};\n\nexport default ColorPicker;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/ColorPicker.js"],"names":["React","useState","Fragment","makeStyles","Popover","Avatar","Button","Icon","useStyles","theme","typography","padding","spacing","colorsContainer","display","justifyContent","alignItems","avatars","height","width","margin","flexGrow","ColorPicker","classes","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","open","Boolean","id","undefined","vertical","horizontal","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Popover, Avatar, Button, Icon } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n  colorsContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  avatars: {\n    height: 30,\n    width: 30,\n    margin: 5,\n    flexGrow: 1,\n  },\n}));\n\nconst ColorPicker = () => {\n\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    <Fragment>\n\n      <Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n        <Icon>format_color_text</Icon>\n      </Button>\n\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n          <div className={classes.colorsContainer}>\n\n            <Avatar\n                className={classes.avatars}\n                style={{ backgroundColor: 'rgb(66, 135, 245)' }}\n            />\n            <Avatar\n                className={classes.avatars}\n                style={{ backgroundColor: 'rgb(167, 66, 245)' }}\n            />\n            <Avatar\n                className={classes.avatars}\n                style={{ backgroundColor: 'rgb(245, 66, 66)' }}\n            />\n\n          </div>\n\n      </Popover>\n\n    </Fragment>\n  );\n};\n\nexport default ColorPicker;"]},"metadata":{},"sourceType":"module"}