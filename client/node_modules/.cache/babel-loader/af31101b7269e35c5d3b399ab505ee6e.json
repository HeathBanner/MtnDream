{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/Jumbotron.js\";\nimport React, { useContext, useState, Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Popover, Typography, Button, TextField } from '@material-ui/core';\nimport { EditorContext } from '../../../Context/EditorContext';\nvar useStyles = makeStyles(function (theme) {\n  return {};\n});\n\nvar Jumbotron = function Jumbotron() {\n  var classes = useStyles();\n  var holder = useContext(EditorContext);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      anchorEl = _useState2[0],\n      setAnchorEl = _useState2[1];\n\n  var handleClick = function handleClick(e) {\n    setAnchorEl(e.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var open = Boolean(anchorEl);\n  var id = open ? 'simple-popover' : undefined;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Add Jumbotron\"), React.createElement(Popover, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'center',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'center',\n      horizontal: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Paste Url\",\n    variant: \"outlined\",\n    value: holder.jumbotron,\n    onChange: function onChange(e) {\n      return holder.handleInput(e, {\n        el: 'jumbotron'\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/Jumbotron.js"],"names":["React","useContext","useState","Fragment","makeStyles","Popover","Typography","Button","TextField","EditorContext","useStyles","theme","Jumbotron","classes","holder","anchorEl","setAnchorEl","handleClick","e","currentTarget","handleClose","open","Boolean","id","undefined","vertical","horizontal","jumbotron","handleInput","el"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,QAAtC,QAAsD,OAAtD;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,MAA9B,EAAsCC,SAAtC,QAAuD,mBAAvD;AAEA,SAASC,aAAT,QAA8B,gCAA9B;AAEA,IAAMC,SAAS,GAAGN,UAAU,CAAC,UAAAO,KAAK;AAAA,SAAK,EAAL;AAAA,CAAN,CAA5B;;AAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAEpB,MAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,MAAMI,MAAM,GAAGb,UAAU,CAACQ,aAAD,CAAzB;;AAHoB,kBAKYP,QAAQ,CAAC,IAAD,CALpB;AAAA;AAAA,MAKba,QALa;AAAA,MAKHC,WALG;;AAOpB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,CAAC,EAAI;AACrBF,IAAAA,WAAW,CAACE,CAAC,CAACC,aAAH,CAAX;AACH,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,MAAMK,IAAI,GAAGC,OAAO,CAACP,QAAD,CAApB;AACA,MAAMQ,EAAE,GAAGF,IAAI,GAAG,gBAAH,GAAsBG,SAArC;AAEA,SAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEP,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAKI,oBAAC,OAAD;AACI,IAAA,EAAE,EAAEM,EADR;AAEI,IAAA,IAAI,EAAEF,IAFV;AAGI,IAAA,QAAQ,EAAEN,QAHd;AAII,IAAA,OAAO,EAAEK,WAJb;AAKI,IAAA,YAAY,EAAE;AACVK,MAAAA,QAAQ,EAAE,QADA;AAEVC,MAAAA,UAAU,EAAE;AAFF,KALlB;AASI,IAAA,eAAe,EAAE;AACbD,MAAAA,QAAQ,EAAE,QADG;AAEbC,MAAAA,UAAU,EAAE;AAFC,KATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,WADV;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,KAAK,EAAEZ,MAAM,CAACa,SAHlB;AAII,IAAA,QAAQ,EAAE,kBAACT,CAAD;AAAA,aAAOJ,MAAM,CAACc,WAAP,CAAmBV,CAAnB,EAAsB;AAAEW,QAAAA,EAAE,EAAE;AAAN,OAAtB,CAAP;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,CALJ,CAFJ;AAiCH,CAnDD","sourcesContent":["import React, { useContext, useState, Fragment } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Popover, Typography, Button, TextField } from '@material-ui/core';\n\nimport { EditorContext } from '../../../Context/EditorContext';\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\nconst Jumbotron = () => {\n\n    const classes = useStyles();\n    const holder = useContext(EditorContext);\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = e => {\n        setAnchorEl(e.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    return (\n\n        <Fragment>\n\n            <Button variant=\"contained\" onClick={handleClick}>\n                Add Jumbotron\n            </Button>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'center'\n                }}\n                transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'center'\n                }}\n            > \n\n                <TextField \n                    label=\"Paste Url\"\n                    variant=\"outlined\"\n                    value={holder.jumbotron}\n                    onChange={(e) => holder.handleInput(e, { el: 'jumbotron' })}\n                />\n\n            </Popover>\n\n        </Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}