{"ast":null,"code":"import _objectSpread from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/Context/EditorContext.js\";\nimport React, { useState, createContext, useEffect } from 'react';\nexport var EditorContext = createContext();\nexport var EditorProvider = function EditorProvider(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useState3 = useState({\n    bold: false,\n    italic: false,\n    underline: false,\n    color: false,\n    highlight: false\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      styling = _useState4[0],\n      setStyling = _useState4[1];\n\n  var _useState5 = useState({\n    arial: false,\n    georgia: false,\n    impact: false\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      font = _useState6[0],\n      setFont = _useState6[1];\n\n  useEffect(function () {\n    console.log(font);\n  }, [font]);\n\n  var handleFont = function handleFont(newFont) {\n    switch (newFont) {\n      case 'arial':\n        return setFont(_objectSpread({}, font, {\n          arial: !font.arial\n        }));\n\n      case 'georgia':\n        return setFont(_objectSpread({}, font, {\n          georgia: !font.georgia\n        }));\n\n      case 'impact':\n        return setFont(_objectSpread({}, font, {\n          impact: !font.impact\n        }));\n\n      default:\n        return;\n    }\n\n    ;\n  };\n\n  var handleInput = function handleInput(e) {\n    setInput(e.target.value);\n  };\n\n  var handleStyling = function handleStyling(style) {\n    switch (style) {\n      case 'bold':\n        return setStyling(_objectSpread({}, styling, {\n          bold: !styling.bold\n        }));\n\n      case 'italic':\n        return setStyling(_objectSpread({}, styling, {\n          italic: !styling.italic\n        }));\n\n      case 'underline':\n        return setStyling(_objectSpread({}, styling, {\n          underline: !styling.underline\n        }));\n\n      case 'color':\n        return setStyling(_objectSpread({}, styling, {\n          color: !styling.color\n        }));\n\n      case 'highlight':\n        return setStyling(_objectSpread({}, styling, {\n          highlight: !styling.highlight\n        }));\n\n      default:\n        return;\n    }\n\n    ;\n  };\n\n  return React.createElement(EditorContext.Provider, {\n    value: {\n      handleInput: handleInput,\n      input: input,\n      styling: styling,\n      handleStyling: handleStyling,\n      font: font,\n      handleFont: handleFont\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/Context/EditorContext.js"],"names":["React","useState","createContext","useEffect","EditorContext","EditorProvider","props","input","setInput","bold","italic","underline","color","highlight","styling","setStyling","arial","georgia","impact","font","setFont","console","log","handleFont","newFont","handleInput","e","target","value","handleStyling","style","children"],"mappings":"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","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\n\nexport const EditorContext = createContext();\n\nexport const EditorProvider = props => {\n\n    const [input, setInput] = useState('');\n    const [styling, setStyling] = useState({\n        bold: false,\n        italic: false,\n        underline: false,\n        color: false,\n        highlight: false,\n    });\n    const [font, setFont] = useState({\n        arial: false,\n        georgia: false,\n        impact: false\n    });\n\n    useEffect(() => {\n        console.log(font);\n    }, [font])\n\n    const handleFont = ( newFont ) => {\n        switch (newFont) {\n            case 'arial':\n                return setFont({ ...font, arial: !font.arial });\n            case 'georgia':\n                return setFont({ ...font, georgia: !font.georgia });\n            case 'impact':\n                return setFont({ ...font, impact: !font.impact});\n            default:\n                return\n        };\n    };\n\n    const handleInput = (e) => {\n        setInput(e.target.value);\n    }\n\n    const handleStyling = ( style ) => {\n        switch (style) {\n            case 'bold':\n                return setStyling({ ...styling, bold: !styling.bold });\n            case 'italic':\n                return setStyling({ ...styling, italic: !styling.italic });\n            case 'underline':\n                return setStyling({ ...styling, underline: !styling.underline });\n            case 'color':\n                return setStyling({ ...styling, color: !styling.color });\n            case 'highlight':\n                return setStyling({ ...styling, highlight: !styling.highlight });\n            default:\n                return\n        };\n    };\n\n    return (\n        <EditorContext.Provider\n            value={{\n                handleInput,\n                input,\n                styling,\n                handleStyling,\n                font,\n                handleFont\n            }}\n        >\n            {props.children}\n        </EditorContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}