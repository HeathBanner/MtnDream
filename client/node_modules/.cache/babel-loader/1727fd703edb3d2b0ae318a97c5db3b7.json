{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/TextSize.js\";\nimport React, { Fragment, useState, useContext } from 'react';\nimport { Menu, MenuItem, Button, Icon } from '@material-ui/core';\nimport { EditorContext } from '../../../Context/EditorContext';\nvar textOptions = [{\n  cb: 'h1'\n}, {\n  cb: 'h2'\n}, {\n  cb: 'h3'\n}, {\n  cb: 'h4'\n}, {\n  cb: 'h5'\n}, {\n  cb: 'h6'\n}, {\n  cb: 'subtitle1'\n}, {\n  cb: 'subtitle2'\n}, {\n  cb: 'body1'\n}, {\n  cb: 'body2'\n}, {\n  cb: 'caption'\n}, {\n  cb: 'button'\n}, {\n  cb: 'overline'\n}, {\n  cb: 'srOnly'\n}, {\n  cb: 'inherit'\n}];\n\nvar TextSize = function TextSize(props) {\n  var holder = useContext(EditorContext);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      anchorEl = _useState2[0],\n      setAnchorEl = _useState2[1];\n\n  var handleOpen = function handleOpen(e) {\n    setAnchorEl(e.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var wrapper = function wrapper(newStyle) {\n    holder.handleTextStyle(newStyle);\n    handleClose();\n  };\n\n  var sizeSwitch = function sizeSwitch() {\n    switch (holder.sectionMode.el) {\n      case 'body':\n        return React.createElement(Button, {\n          style: {\n            marginRight: props.margin\n          },\n          onClick: handleOpen,\n          variant: \"contained\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, holder[holder.sectionMode.el][holder.sectionMode.index].textStyle);\n\n      case 'jumbotron':\n        return React.createElement(Button, {\n          style: {\n            marginRight: props.margin\n          },\n          disabled: true,\n          variant: \"contained\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"lock\"));\n\n      case 'image':\n        return React.createElement(Button, {\n          style: {\n            marginRight: props.margin\n          },\n          disabled: true,\n          variant: \"contained\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"lock\"));\n\n      case 'readLength':\n        return React.createElement(Button, {\n          style: {\n            marginRight: props.margin\n          },\n          disabled: true,\n          variant: \"contained\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"lock\"));\n\n      default:\n        return React.createElement(Button, {\n          style: {\n            marginRight: props.margin\n          },\n          onClick: handleOpen,\n          variant: \"contained\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, holder[holder.sectionMode.el].textStyle);\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, sizeSwitch(), React.createElement(Menu, {\n    id: \"textSize\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, textOptions.map(function (item) {\n    return React.createElement(MenuItem, {\n      key: item.cb,\n      onClick: function onClick() {\n        return wrapper(item.cb);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, item.cb);\n  })));\n};\n\nexport default TextSize;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/TextSize.js"],"names":["React","Fragment","useState","useContext","Menu","MenuItem","Button","Icon","EditorContext","textOptions","cb","TextSize","props","holder","anchorEl","setAnchorEl","handleOpen","e","currentTarget","handleClose","wrapper","newStyle","handleTextStyle","sizeSwitch","sectionMode","el","marginRight","margin","index","textStyle","Boolean","map","item"],"mappings":"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","sourcesContent":["import React, {\n    Fragment,\n    useState,\n    useContext\n} from 'react';\n\nimport {\n    Menu,\n    MenuItem,\n    Button,\n    Icon,\n} from '@material-ui/core';\n\nimport { EditorContext } from '../../../Context/EditorContext';\n\nconst textOptions = [\n    {\n        cb: 'h1'\n    },\n    {\n        cb: 'h2'\n    },\n    {\n        cb: 'h3'\n    },\n    {\n        cb: 'h4'\n    },\n    {\n        cb: 'h5'\n    },\n    {\n        cb: 'h6'\n    },\n    {\n        cb: 'subtitle1'\n    },\n    {\n        cb: 'subtitle2'\n    },\n    {\n        cb: 'body1'\n    },\n    {\n        cb: 'body2'\n    },\n    {\n        cb: 'caption'\n    },\n    {\n        cb: 'button'\n    },\n    {\n        cb: 'overline'\n    },\n    {\n        cb: 'srOnly'\n    },\n    {\n        cb: 'inherit'\n    }\n];\n\nconst TextSize = (props) => {\n    \n    const holder = useContext(EditorContext);\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleOpen = (e) => {\n        setAnchorEl(e.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };  \n\n    const wrapper = newStyle => {\n        holder.handleTextStyle(newStyle);\n        handleClose();\n    };\n\n    const sizeSwitch = () => {\n        switch (holder.sectionMode.el) {\n            case 'body':\n                return <Button\n                            style={{ marginRight: props.margin }}\n                            onClick={handleOpen}\n                            variant=\"contained\"\n                        >\n                            {holder[holder.sectionMode.el][holder.sectionMode.index].textStyle}\n                        </Button>;\n            case 'jumbotron':\n                return <Button\n                            style={{ marginRight: props.margin }}\n                            disabled={true}\n                            variant=\"contained\"\n                        >\n                            <Icon>lock</Icon>\n                        </Button>;\n            case 'image':\n                return <Button \n                            style={{ marginRight: props.margin }}\n                            disabled={true}\n                            variant=\"contained\"\n                        >\n                            <Icon>lock</Icon>\n                        </Button>;\n            case 'readLength':\n                return <Button\n                            style={{ marginRight: props.margin }}\n                            disabled={true}\n                            variant=\"contained\"\n                        >\n                            <Icon>lock</Icon>\n                        </Button>;\n            default:\n                return <Button\n                            style={{ marginRight: props.margin }}\n                            onClick={handleOpen}\n                            variant=\"contained\"\n                        >\n                            {holder[holder.sectionMode.el].textStyle}\n                        </Button>;\n        }\n    };\n\n    return (\n        <Fragment>\n            \n            {sizeSwitch()}\n\n            <Menu\n                id=\"textSize\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {\n                    textOptions.map(item => {\n                        return (\n                            <MenuItem key={item.cb} onClick={() => wrapper(item.cb)}>\n                                {item.cb}\n                            </MenuItem>\n                        );\n                    })\n                }    \n            </Menu>\n\n        </Fragment>\n    );\n};\n\nexport default TextSize;\n"]},"metadata":{},"sourceType":"module"}