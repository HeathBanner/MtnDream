{"ast":null,"code":"var _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Interface.js\";\nimport React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Grid, Drawer, List, Typography, Divider, ListItem, ListItemIcon, ListItemText, Icon } from '@material-ui/core';\nimport Toolbar from './Toolbar';\nvar drawerWidth = 240;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      marginTop: 40,\n      display: 'flex',\n      zIndex: 2\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: 240\n    },\n    content: {\n      flexGrow: 1\n    }\n  };\n});\n\nvar Interface = function Interface() {\n  var classes = useStyles();\n  return React.createElement(Grid, {\n    className: classes.root,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map(function (text, index) {\n    return React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, index % 2 === 0 ? React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Inbox\") : React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"mail\")), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, ['All mail', 'Trash', 'Spam'].map(function (text, index) {\n    return React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, index % 2 === 0 ? React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"inbox\") : React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"mail\")), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }))), React.createElement(\"main\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })));\n};\n\nexport default Interface;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Interface.js"],"names":["React","Fragment","makeStyles","CssBaseline","Grid","Drawer","List","Typography","Divider","ListItem","ListItemIcon","ListItemText","Icon","Toolbar","drawerWidth","useStyles","theme","root","marginTop","display","zIndex","drawer","width","flexShrink","drawerPaper","content","flexGrow","Interface","classes","paper","toolbar","map","text","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,EAAsBC,IAAtB,EAA4BC,MAA5B,EAAoCC,IAApC,EAA0CC,UAA1C,EAAsDC,OAAtD,EAA+DC,QAA/D,EAAyEC,YAAzE,EAAuFC,YAAvF,EAAqGC,IAArG,QAAiH,mBAAjH;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,IAAMC,WAAW,GAAG,GAApB;AAEA,IAAMC,SAAS,GAAGb,UAAU,CAAC,UAAAc,KAAK;AAAA,SAAK;AACnCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,SAAS,EAAE,EADT;AAEFC,MAAAA,OAAO,EAAE,MAFP;AAGFC,MAAAA,MAAM,EAAE;AAHN,KAD6B;AAMnCC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAER,WADH;AAEJS,MAAAA,UAAU,EAAE;AAFR,KAN2B;AAUnCC,IAAAA,WAAW,EAAE;AACTF,MAAAA,KAAK,EAAE;AADE,KAVsB;AAanCG,IAAAA,OAAO,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL;AAb0B,GAAL;AAAA,CAAN,CAA5B;;AAkBA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAEpB,MAAMC,OAAO,GAAGb,SAAS,EAAzB;AAEA,SAEQ,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEa,OAAO,CAACX,IAAzB;AAA+B,IAAA,IAAI,MAAnC;AAAoC,IAAA,EAAE,EAAE,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAEW,OAAO,CAACP,MADvB;AAEI,IAAA,OAAO,EAAC,WAFZ;AAGI,IAAA,OAAO,EAAE;AACTQ,MAAAA,KAAK,EAAED,OAAO,CAACJ;AADN,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI;AAAK,IAAA,SAAS,EAAEI,OAAO,CAACE,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAUI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,CAAC,OAAD,EAAU,SAAV,EAAqB,YAArB,EAAmC,QAAnC,EAA6CC,GAA7C,CAAiD,UAACC,IAAD,EAAOC,KAAP;AAAA,WAE7C,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,GAAG,EAAED,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeC,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAlB,GAAuC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtD,CAFJ,EAGI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAED,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAF6C;AAAA,GAAjD,CAHJ,CAVJ,EAyBI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,EA2BI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,CAAC,UAAD,EAAa,OAAb,EAAsB,MAAtB,EAA8BD,GAA9B,CAAkC,UAACC,IAAD,EAAOC,KAAP;AAAA,WAE9B,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,GAAG,EAAED,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeC,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAlB,GAAuC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtD,CAFJ,EAGI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAED,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAF8B;AAAA,GAAlC,CAHJ,CA3BJ,CAFJ,EA8CI;AAAM,IAAA,SAAS,EAAEJ,OAAO,CAACH,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA9CJ,CAFR;AAyDH,CA7DD;;AA+DA,eAAeE,SAAf","sourcesContent":["import React, { Fragment } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Grid, Drawer, List, Typography, Divider, ListItem, ListItemIcon, ListItemText, Icon } from '@material-ui/core';\n\nimport Toolbar from './Toolbar';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: 40,\n        display: 'flex',\n        zIndex: 2\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: 240,\n    },\n    content: {\n        flexGrow: 1,\n    },\n}));\n\nconst Interface = () => {\n\n    const classes = useStyles();\n    \n    return (\n\n            <Grid className={classes.root} item xs={12}>\n                <CssBaseline />\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                    paper: classes.drawerPaper,\n                    }}\n                >\n\n                    <div className={classes.toolbar} />\n\n                    <List>\n\n                    {\n                        ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n\n                            <ListItem button key={text}>\n\n                                <ListItemIcon>{index % 2 === 0 ? <Icon>Inbox</Icon> : <Icon>mail</Icon>}</ListItemIcon>\n                                <ListItemText primary={text} />\n\n                            </ListItem>\n                        ))\n                    }\n                    </List>\n\n                    <Divider />\n\n                    <List>\n\n                    {\n                        ['All mail', 'Trash', 'Spam'].map((text, index) => (\n                        \n                            <ListItem button key={text}>\n                            \n                                <ListItemIcon>{index % 2 === 0 ? <Icon>inbox</Icon> : <Icon>mail</Icon>}</ListItemIcon>\n                                <ListItemText primary={text} />\n                            \n                            </ListItem>\n                        ))\n                    }\n                    </List>\n\n                </Drawer>\n\n                <main className={classes.content}>\n\n                    <Toolbar />\n\n                </main>\n\n            </Grid>\n\n    );\n};\n\nexport default Interface;"]},"metadata":{},"sourceType":"module"}