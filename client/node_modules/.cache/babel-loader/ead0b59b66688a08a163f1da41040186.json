{"ast":null,"code":"var _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/pages/Home/Home.js\";\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography } from '@material-ui/core';\nimport { Parallax, Background } from 'react-parallax';\nimport Nav from '../../components/Navigation/Nav';\nimport Body from '../../components/Home/Main/Body';\nimport Footer from '../../components/Home/Footer'; // import { ReactComponent as SVG } from '../../components/Home/imgs/SVG/svg.svg';\n\nimport SVG from '../../components/Home/imgs/1x/placeholder.png';\nimport Boone from '../../components/Home/imgs/Boone.jpeg';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      background: 'linear-gradient(213deg, rgba(191, 191, 191, 0.02) 0%, rgba(191, 191, 191, 0.02) 16.667%,rgba(64, 64, 64, 0.02) 16.667%, rgba(64, 64, 64, 0.02) 33.334%,rgba(162, 162, 162, 0.02) 33.334%, rgba(162, 162, 162, 0.02) 50.001000000000005%,rgba(6, 6, 6, 0.02) 50.001%, rgba(6, 6, 6, 0.02) 66.668%,rgba(53, 53, 53, 0.02) 66.668%, rgba(53, 53, 53, 0.02) 83.33500000000001%,rgba(30, 30, 30, 0.02) 83.335%, rgba(30, 30, 30, 0.02) 100.002%),linear-gradient(245deg, rgba(187, 187, 187, 0.02) 0%, rgba(187, 187, 187, 0.02) 12.5%,rgba(231, 231, 231, 0.02) 12.5%, rgba(231, 231, 231, 0.02) 25%,rgba(123, 123, 123, 0.02) 25%, rgba(123, 123, 123, 0.02) 37.5%,rgba(229, 229, 229, 0.02) 37.5%, rgba(229, 229, 229, 0.02) 50%,rgba(205, 205, 205, 0.02) 50%, rgba(205, 205, 205, 0.02) 62.5%,rgba(21, 21, 21, 0.02) 62.5%, rgba(21, 21, 21, 0.02) 75%,rgba(222, 222, 222, 0.02) 75%, rgba(222, 222, 222, 0.02) 87.5%,rgba(19, 19, 19, 0.02) 87.5%, rgba(19, 19, 19, 0.02) 100%),linear-gradient(333deg, rgba(128, 128, 128, 0.02) 0%, rgba(128, 128, 128, 0.02) 25%,rgba(235, 235, 235, 0.02) 25%, rgba(235, 235, 235, 0.02) 50%,rgba(129, 129, 129, 0.02) 50%, rgba(129, 129, 129, 0.02) 75%,rgba(4, 4, 4, 0.02) 75%, rgba(4, 4, 4, 0.02) 100%),linear-gradient(154deg, rgba(241, 241, 241, 0.03) 0%, rgba(241, 241, 241, 0.03) 16.667%,rgba(248, 248, 248, 0.03) 16.667%, rgba(248, 248, 248, 0.03) 33.334%,rgba(21, 21, 21, 0.03) 33.334%, rgba(21, 21, 21, 0.03) 50.001000000000005%,rgba(94, 94, 94, 0.03) 50.001%, rgba(94, 94, 94, 0.03) 66.668%,rgba(250, 250, 250, 0.03) 66.668%, rgba(250, 250, 250, 0.03) 83.33500000000001%,rgba(5, 5, 5, 0.03) 83.335%, rgba(5, 5, 5, 0.03) 100.002%),linear-gradient(166deg, rgba(104, 104, 104, 0.01) 0%, rgba(104, 104, 104, 0.01) 12.5%,rgba(77, 77, 77, 0.01) 12.5%, rgba(77, 77, 77, 0.01) 25%,rgba(13, 13, 13, 0.01) 25%, rgba(13, 13, 13, 0.01) 37.5%,rgba(194, 194, 194, 0.01) 37.5%, rgba(194, 194, 194, 0.01) 50%,rgba(71, 71, 71, 0.01) 50%, rgba(71, 71, 71, 0.01) 62.5%,rgba(234, 234, 234, 0.01) 62.5%, rgba(234, 234, 234, 0.01) 75%,rgba(38, 38, 38, 0.01) 75%, rgba(38, 38, 38, 0.01) 87.5%,rgba(95, 95, 95, 0.01) 87.5%, rgba(95, 95, 95, 0.01) 100%),linear-gradient(98deg, rgba(253, 253, 253, 0.03) 0%, rgba(253, 253, 253, 0.03) 12.5%,rgba(126, 126, 126, 0.03) 12.5%, rgba(126, 126, 126, 0.03) 25%,rgba(145, 145, 145, 0.03) 25%, rgba(145, 145, 145, 0.03) 37.5%,rgba(70, 70, 70, 0.03) 37.5%, rgba(70, 70, 70, 0.03) 50%,rgba(174, 174, 174, 0.03) 50%, rgba(174, 174, 174, 0.03) 62.5%,rgba(77, 77, 77, 0.03) 62.5%, rgba(77, 77, 77, 0.03) 75%,rgba(123, 123, 123, 0.03) 75%, rgba(123, 123, 123, 0.03) 87.5%,rgba(36, 36, 36, 0.03) 87.5%, rgba(36, 36, 36, 0.03) 100%),linear-gradient(293deg, rgba(55, 55, 55, 0.03) 0%, rgba(55, 55, 55, 0.03) 20%,rgba(142, 142, 142, 0.03) 20%, rgba(142, 142, 142, 0.03) 40%,rgba(159, 159, 159, 0.03) 40%, rgba(159, 159, 159, 0.03) 60%,rgba(139, 139, 139, 0.03) 60%, rgba(139, 139, 139, 0.03) 80%,rgba(9, 9, 9, 0.03) 80%, rgba(9, 9, 9, 0.03) 100%),linear-gradient(26deg, rgba(116, 116, 116, 0.01) 0%, rgba(116, 116, 116, 0.01) 20%,rgba(179, 179, 179, 0.01) 20%, rgba(179, 179, 179, 0.01) 40%,rgba(5, 5, 5, 0.01) 40%, rgba(5, 5, 5, 0.01) 60%,rgba(212, 212, 212, 0.01) 60%, rgba(212, 212, 212, 0.01) 80%,rgba(246, 246, 246, 0.01) 80%, rgba(246, 246, 246, 0.01) 100%),linear-gradient(90deg, rgb(87, 178, 35),rgb(21, 37, 16))'\n    },\n    jumbotron: {\n      marginTop: 60,\n      height: '80vh',\n      width: '100vw',\n      position: 'relative'\n    },\n    jumboText: {\n      position: 'absolute',\n      top: '0%',\n      left: '50%',\n      transform: 'translate(-50%, 0%)',\n      height: '80vh',\n      width: '100vw',\n      zIndex: 2\n    },\n    img: {\n      height: '100%',\n      width: '100vw',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    typo: {\n      zIndex: 3,\n      width: '100%',\n      color: 'white',\n      fontSize: '5rem'\n    },\n    body: {}\n  };\n});\n\nfunction Home() {\n  var classes = useStyles();\n  var theme = useTheme();\n  var media = {\n    xl: useMediaQuery(theme.breakpoints.up('lg')),\n    lg: useMediaQuery(theme.breakpoints.down('lg')),\n    md: useMediaQuery(theme.breakpoints.down('md')),\n    sm: useMediaQuery(theme.breakpoints.down('sm')),\n    xs: useMediaQuery(theme.breakpoints.down('xs'))\n  };\n\n  var getTop = function getTop() {\n    switch (media) {\n      case media.xs:\n        return '55%';\n\n      case media.sm:\n        return '65%';\n\n      case media.md:\n        return '75%';\n\n      case media.lg:\n        return '75%';\n\n      case media.xl:\n        return '95%';\n\n      default:\n        return '95%';\n    }\n\n    ;\n  };\n\n  return React.createElement(Grid, {\n    className: classes.container,\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    style: {\n      height: '80vh'\n    },\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Parallax, {\n    strength: 700,\n    className: classes.jumboText,\n    style: {\n      position: 'absolute',\n      top: '0%',\n      left: '50%',\n      transform: 'translate(-50%, 0%)',\n      height: '80vh',\n      width: '100vw',\n      zIndex: 2\n    },\n    bgStyle: {\n      top: getTop()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Background, {\n    className: classes.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.typo,\n    variant: \"h1\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Welcome to our little piece of paradise!\"))), React.createElement(Parallax, {\n    strength: -800,\n    className: classes.jumbotron,\n    style: {},\n    bgStyle: {\n      top: '40%',\n      zIndex: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Background, {\n    className: classes.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      zIndex: 4,\n      width: '100vw'\n    },\n    src: SVG,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })))), React.createElement(Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/pages/Home/Home.js"],"names":["React","makeStyles","useTheme","useMediaQuery","Grid","Typography","Parallax","Background","Nav","Body","Footer","SVG","Boone","useStyles","theme","container","background","jumbotron","marginTop","height","width","position","jumboText","top","left","transform","zIndex","img","display","justifyContent","alignItems","typo","color","fontSize","body","Home","classes","media","xl","breakpoints","up","lg","down","md","sm","xs","getTop"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography } from '@material-ui/core';\n\nimport { Parallax, Background }  from 'react-parallax';\n\nimport Nav from '../../components/Navigation/Nav';\nimport Body from '../../components/Home/Main/Body';\nimport Footer from '../../components/Home/Footer';\n\n// import { ReactComponent as SVG } from '../../components/Home/imgs/SVG/svg.svg';\nimport SVG from '../../components/Home/imgs/1x/placeholder.png';\n\nimport Boone from '../../components/Home/imgs/Boone.jpeg';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        background: 'linear-gradient(213deg, rgba(191, 191, 191, 0.02) 0%, rgba(191, 191, 191, 0.02) 16.667%,rgba(64, 64, 64, 0.02) 16.667%, rgba(64, 64, 64, 0.02) 33.334%,rgba(162, 162, 162, 0.02) 33.334%, rgba(162, 162, 162, 0.02) 50.001000000000005%,rgba(6, 6, 6, 0.02) 50.001%, rgba(6, 6, 6, 0.02) 66.668%,rgba(53, 53, 53, 0.02) 66.668%, rgba(53, 53, 53, 0.02) 83.33500000000001%,rgba(30, 30, 30, 0.02) 83.335%, rgba(30, 30, 30, 0.02) 100.002%),linear-gradient(245deg, rgba(187, 187, 187, 0.02) 0%, rgba(187, 187, 187, 0.02) 12.5%,rgba(231, 231, 231, 0.02) 12.5%, rgba(231, 231, 231, 0.02) 25%,rgba(123, 123, 123, 0.02) 25%, rgba(123, 123, 123, 0.02) 37.5%,rgba(229, 229, 229, 0.02) 37.5%, rgba(229, 229, 229, 0.02) 50%,rgba(205, 205, 205, 0.02) 50%, rgba(205, 205, 205, 0.02) 62.5%,rgba(21, 21, 21, 0.02) 62.5%, rgba(21, 21, 21, 0.02) 75%,rgba(222, 222, 222, 0.02) 75%, rgba(222, 222, 222, 0.02) 87.5%,rgba(19, 19, 19, 0.02) 87.5%, rgba(19, 19, 19, 0.02) 100%),linear-gradient(333deg, rgba(128, 128, 128, 0.02) 0%, rgba(128, 128, 128, 0.02) 25%,rgba(235, 235, 235, 0.02) 25%, rgba(235, 235, 235, 0.02) 50%,rgba(129, 129, 129, 0.02) 50%, rgba(129, 129, 129, 0.02) 75%,rgba(4, 4, 4, 0.02) 75%, rgba(4, 4, 4, 0.02) 100%),linear-gradient(154deg, rgba(241, 241, 241, 0.03) 0%, rgba(241, 241, 241, 0.03) 16.667%,rgba(248, 248, 248, 0.03) 16.667%, rgba(248, 248, 248, 0.03) 33.334%,rgba(21, 21, 21, 0.03) 33.334%, rgba(21, 21, 21, 0.03) 50.001000000000005%,rgba(94, 94, 94, 0.03) 50.001%, rgba(94, 94, 94, 0.03) 66.668%,rgba(250, 250, 250, 0.03) 66.668%, rgba(250, 250, 250, 0.03) 83.33500000000001%,rgba(5, 5, 5, 0.03) 83.335%, rgba(5, 5, 5, 0.03) 100.002%),linear-gradient(166deg, rgba(104, 104, 104, 0.01) 0%, rgba(104, 104, 104, 0.01) 12.5%,rgba(77, 77, 77, 0.01) 12.5%, rgba(77, 77, 77, 0.01) 25%,rgba(13, 13, 13, 0.01) 25%, rgba(13, 13, 13, 0.01) 37.5%,rgba(194, 194, 194, 0.01) 37.5%, rgba(194, 194, 194, 0.01) 50%,rgba(71, 71, 71, 0.01) 50%, rgba(71, 71, 71, 0.01) 62.5%,rgba(234, 234, 234, 0.01) 62.5%, rgba(234, 234, 234, 0.01) 75%,rgba(38, 38, 38, 0.01) 75%, rgba(38, 38, 38, 0.01) 87.5%,rgba(95, 95, 95, 0.01) 87.5%, rgba(95, 95, 95, 0.01) 100%),linear-gradient(98deg, rgba(253, 253, 253, 0.03) 0%, rgba(253, 253, 253, 0.03) 12.5%,rgba(126, 126, 126, 0.03) 12.5%, rgba(126, 126, 126, 0.03) 25%,rgba(145, 145, 145, 0.03) 25%, rgba(145, 145, 145, 0.03) 37.5%,rgba(70, 70, 70, 0.03) 37.5%, rgba(70, 70, 70, 0.03) 50%,rgba(174, 174, 174, 0.03) 50%, rgba(174, 174, 174, 0.03) 62.5%,rgba(77, 77, 77, 0.03) 62.5%, rgba(77, 77, 77, 0.03) 75%,rgba(123, 123, 123, 0.03) 75%, rgba(123, 123, 123, 0.03) 87.5%,rgba(36, 36, 36, 0.03) 87.5%, rgba(36, 36, 36, 0.03) 100%),linear-gradient(293deg, rgba(55, 55, 55, 0.03) 0%, rgba(55, 55, 55, 0.03) 20%,rgba(142, 142, 142, 0.03) 20%, rgba(142, 142, 142, 0.03) 40%,rgba(159, 159, 159, 0.03) 40%, rgba(159, 159, 159, 0.03) 60%,rgba(139, 139, 139, 0.03) 60%, rgba(139, 139, 139, 0.03) 80%,rgba(9, 9, 9, 0.03) 80%, rgba(9, 9, 9, 0.03) 100%),linear-gradient(26deg, rgba(116, 116, 116, 0.01) 0%, rgba(116, 116, 116, 0.01) 20%,rgba(179, 179, 179, 0.01) 20%, rgba(179, 179, 179, 0.01) 40%,rgba(5, 5, 5, 0.01) 40%, rgba(5, 5, 5, 0.01) 60%,rgba(212, 212, 212, 0.01) 60%, rgba(212, 212, 212, 0.01) 80%,rgba(246, 246, 246, 0.01) 80%, rgba(246, 246, 246, 0.01) 100%),linear-gradient(90deg, rgb(87, 178, 35),rgb(21, 37, 16))',\n    },\n    jumbotron: {\n        marginTop: 60, \n        height: '80vh', \n        width: '100vw', \n        position: 'relative' \n    },\n    jumboText: {\n        position: 'absolute',\n        top: '0%',\n        left: '50%',\n        transform: 'translate(-50%, 0%)', \n        height: '80vh', \n        width: '100vw',\n        zIndex: 2\n    },\n    img: {\n        height: '100%',\n        width: '100vw',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    typo: {\n        zIndex: 3,\n        width:'100%',\n        color: 'white',\n        fontSize: '5rem'\n    },\n    body: {\n    },\n}));\n\nfunction Home() {\n\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const media = {\n        xl: useMediaQuery(theme.breakpoints.up('lg')),\n        lg: useMediaQuery(theme.breakpoints.down('lg')),\n        md: useMediaQuery(theme.breakpoints.down('md')),\n        sm: useMediaQuery(theme.breakpoints.down('sm')),\n        xs: useMediaQuery(theme.breakpoints.down('xs'))\n    };\n\n    const getTop = () => {\n        switch (media) {\n\n            case media.xs:\n                return '55%';\n            case media.sm:\n                return '65%';\n            case media.md:\n                return '75%';\n            case media.lg:\n                return '75%';\n            case media.xl:\n                return '95%';\n            default:\n                return '95%';\n        };\n    };\n\n    return (\n        <Grid className={classes.container} container >\n\n            <Grid item xs={12}>\n\n                <Nav />\n\n            </Grid>\n            <Grid style={{height: '80vh'}} item xs={12}>\n\n                <Parallax \n                    strength={700} \n                    className={classes.jumboText}\n                    style={{\n                        position: 'absolute',\n                        top: '0%',\n                        left: '50%',\n                        transform: 'translate(-50%, 0%)', \n                        height: '80vh', \n                        width: '100vw',\n                        zIndex: 2                \n                    }}\n                    bgStyle={{\n                        top: getTop()\n                    }}\n                >\n\n                    <Background className={classes.img}>\n\n                        <Typography className={classes.typo} variant=\"h1\" align=\"center\">\n                            Welcome to our little piece of paradise!\n                        </Typography>\n\n                    </Background>\n                        \n                </Parallax>\n                <Parallax \n                    strength={-800} \n                    className={classes.jumbotron}\n                    style={{}}\n                    bgStyle={{\n                        top: '40%',\n                        zIndex: 2\n                    }}\n                >\n\n                    <Background className={classes.img}>\n\n                        <img style={{ zIndex: 4, width: '100vw' }} src={SVG} />            \n\n                    </Background>\n                        \n                </Parallax>\n\n            </Grid>\n\n            <Body />\n\n            <Footer />\n\n        </Grid>\n    );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}