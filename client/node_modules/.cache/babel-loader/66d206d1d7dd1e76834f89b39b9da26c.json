{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/LGToolbar.js\";\nimport React, { useContext, useState } from 'react';\nimport TextSize from './Tools/TextSize';\nimport Font from './Tools/Font';\nimport Styling from './Tools/Styling';\nimport Justify from './Tools/Justify';\nimport Margin from './Tools/Margin';\nimport { EditorContext } from '../../Context/EditorContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green, amber } from '@material-ui/core/colors';\nimport { Grid, Icon, Fab, Button, Snackbar, SnackbarContent, Typography } from '@material-ui/core';\nvar months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      padding: 20,\n      background: '#ffffff',\n      position: 'fixed',\n      top: 70,\n      zIndex: 2,\n      boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)'\n    },\n    editorTools: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    input: {\n      width: '80%'\n    },\n    save: {\n      position: 'relative',\n      backgroundColor: 'rgb(0, 0, 0, 0.2)',\n      transition: 'all 0.4s ease',\n      '&:hover': {\n        transform: 'scale(1.03)',\n        backgroundColor: 'rgb(0, 0, 0, 0.05)'\n      }\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark\n    },\n    warning: {\n      backgroundColor: amber[700]\n    },\n    success: {\n      backgroundColor: green[600]\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n});\n\nvar Toolbar = function Toolbar() {\n  var classes = useStyles();\n  var edit = useContext(EditorContext); // These will toggle the notification components\n\n  var _useState = useState({\n    open: false,\n    message: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState({\n    open: false,\n    message: 'Article saved!'\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      success = _useState4[0],\n      setSuccess = _useState4[1];\n\n  var _useState5 = useState({\n    open: false,\n    messsage: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      warning = _useState6[0],\n      setWarning = _useState6[1];\n\n  var closeError = function closeError() {\n    setError({\n      open: false,\n      message: ''\n    });\n  };\n\n  var closeSuccess = function closeSuccess() {\n    setSuccess({\n      open: false,\n      message: 'Article Saved!'\n    });\n  };\n\n  var closeWarning = function closeWarning() {\n    setWarning({\n      open: false,\n      message: ''\n    });\n  }; // This function will check if the required parameters are passing\n  // before passing anything to the database\n\n\n  var preSubmit = function preSubmit() {\n    switch (true) {\n      case !edit.title.text:\n        setWarning({\n          open: true,\n          message: 'Title is required!'\n        });\n        break;\n\n      case !edit.description.text:\n        setWarning({\n          open: true,\n          message: 'Description is required!'\n        });\n        break;\n\n      case !edit.readLength.text:\n        setWarning({\n          open: true,\n          message: 'Read Length is required!'\n        });\n        break;\n\n      case !edit.jumbotron.src:\n        setWarning({\n          open: true,\n          message: 'Jumbotron is required!'\n        });\n        break;\n\n      case !edit.body[0].text:\n        setWarning({\n          open: true,\n          message: 'A body section is required!'\n        });\n        break;\n\n      case edit.title.isPublished:\n        handleChanges();\n        break;\n\n      case !edit.title.isPublished:\n        handleSubmit();\n        break;\n\n      default:\n        setError({\n          open: true,\n          message: 'Something went wrong :('\n        });\n        break;\n    }\n  }; // If the preSubmit function passes with no errors or warnings it will\n  // then log the current date and store it within the database\n\n\n  var handleSubmit = function handleSubmit() {\n    var now = new Date();\n    var date = {\n      parsedDate: \"\".concat(months[now.getMonth()], \" \").concat(now.getDate()),\n      epoch: now.getTime()\n    };\n    var data = {\n      title: edit.title,\n      description: edit.description,\n      readLength: edit.readLength,\n      jumbotron: edit.jumbotron,\n      body: edit.body,\n      date: date\n    };\n    fetch('/api/editors/newArticle', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      if (result.error) {\n        return setError({\n          open: true,\n          message: result.error\n        });\n      }\n\n      setSuccess({\n        open: true,\n        message: 'Article published!'\n      });\n      edit.setPublished();\n    }).catch(function (error) {\n      setError({\n        open: true,\n        message: error\n      });\n    });\n  }; // If the user has already published the article, this function will then\n  // update the article within the database\n\n\n  var handleChanges = function handleChanges() {\n    var data = {\n      title: edit.title,\n      description: edit.description,\n      readLength: edit.readLength,\n      jumbotron: edit.jumbotron,\n      body: edit.body\n    };\n    fetch('/api/editors/saveChanges', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      if (result.error) {\n        return setError({\n          open: true,\n          message: result.error\n        });\n      }\n\n      setSuccess({\n        open: true,\n        message: 'Article Saved!'\n      });\n    }).catch(function (error) {\n      setError({\n        open: true,\n        message: error\n      });\n    });\n  };\n\n  return React.createElement(Grid, {\n    className: classes.container,\n    justify: \"center\",\n    alignItems: \"center\",\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, edit.title.isPublished ? React.createElement(Fab, {\n    className: classes.save,\n    onClick: preSubmit,\n    variant: \"extended\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"save\"), React.createElement(Typography, {\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"Save\")) : React.createElement(Fab, {\n    className: classes.save,\n    onClick: preSubmit,\n    variant: \"extended\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"save\"), React.createElement(Typography, {\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"Publish\")), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    open: error.open,\n    autoHideDuration: 6000,\n    onClose: closeError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: classes.error,\n    message: React.createElement(Typography, {\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"error\"), error.message),\n    action: React.createElement(Button, {\n      onClick: closeError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"close\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    open: success.open,\n    autoHideDuration: 6000,\n    onClose: closeSuccess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: classes.success,\n    message: React.createElement(Typography, {\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"check_circle\"), success.message),\n    action: React.createElement(Button, {\n      onClick: closeSuccess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"close\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    open: warning.open,\n    autoHideDuration: 6000,\n    onClose: closeWarning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: classes.warning,\n    message: React.createElement(Typography, {\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"check_circle\"), warning.message),\n    action: React.createElement(Button, {\n      onClick: closeWarning,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"close\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    className: classes.editorTools,\n    item: true,\n    xs: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }, React.createElement(TextSize, {\n    margin: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }), React.createElement(Font, {\n    margin: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }), React.createElement(Styling, {\n    margin: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }), React.createElement(Justify, {\n    margin: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }), React.createElement(Margin, {\n    margin: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  })));\n};\n\nexport default Toolbar;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/LGToolbar.js"],"names":["React","useContext","useState","TextSize","Font","Styling","Justify","Margin","EditorContext","makeStyles","green","amber","Grid","Icon","Fab","Button","Snackbar","SnackbarContent","Typography","months","useStyles","theme","container","padding","background","position","top","zIndex","boxShadow","editorTools","display","justifyContent","alignItems","input","width","save","backgroundColor","transition","transform","error","palette","dark","warning","success","message","Toolbar","classes","edit","open","setError","setSuccess","messsage","setWarning","closeError","closeSuccess","closeWarning","preSubmit","title","text","description","readLength","jumbotron","src","body","isPublished","handleChanges","handleSubmit","now","Date","date","parsedDate","getMonth","getDate","epoch","getTime","data","fetch","method","JSON","stringify","headers","then","res","json","result","setPublished","catch","marginLeft","vertical","horizontal","marginRight"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\n\nimport TextSize from './Tools/TextSize';\nimport Font from './Tools/Font';\nimport Styling from './Tools/Styling';\nimport Justify from './Tools/Justify';\nimport Margin from './Tools/Margin';\n\nimport { EditorContext } from '../../Context/EditorContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green, amber } from '@material-ui/core/colors';\nimport {\n    Grid,\n    Icon,\n    Fab,\n    Button,\n    Snackbar,\n    SnackbarContent,\n    Typography,\n} from '@material-ui/core';\n\nconst months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: 20,\n        background: '#ffffff',\n        position: 'fixed',\n        top: 70,\n        zIndex: 2,\n        boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)',\n    },\n    editorTools: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    input: {\n        width: '80%'\n    },\n    save: {\n        position: 'relative',\n        backgroundColor: 'rgb(0, 0, 0, 0.2)',\n        transition: 'all 0.4s ease',\n        '&:hover': {\n            transform: 'scale(1.03)',\n            backgroundColor: 'rgb(0, 0, 0, 0.05)',\n        },\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    success: {\n        backgroundColor: green[600],\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\nconst Toolbar = () => {\n\n    const classes = useStyles();\n    const edit = useContext(EditorContext);\n\n    // These will toggle the notification components\n    const [error, setError] = useState({\n        open: false,\n        message: '',\n    });\n    const [success, setSuccess] = useState({\n        open: false,\n        message: 'Article saved!'\n    });\n    const [warning, setWarning] = useState({\n        open: false,\n        messsage: '',\n    });\n\n    const closeError = () => { setError({ open: false, message: '' }); };\n    const closeSuccess = () => { setSuccess({ open: false, message: 'Article Saved!' }); };\n    const closeWarning = () => { setWarning({ open: false, message: '' }); };\n\n    // This function will check if the required parameters are passing\n    // before passing anything to the database\n    const preSubmit = () => {\n        switch (true) {\n            case !edit.title.text:\n                setWarning({ open: true, message: 'Title is required!' });\n                break;\n            case !edit.description.text:\n                setWarning({ open: true, message: 'Description is required!' });\n                break;\n            case !edit.readLength.text:\n                setWarning({ open: true, message: 'Read Length is required!' });\n                break;\n            case !edit.jumbotron.src:\n                setWarning({ open: true, message: 'Jumbotron is required!' });\n                break;\n            case !edit.body[0].text:\n                setWarning({ open: true, message: 'A body section is required!' });\n                break;\n            case edit.title.isPublished:\n                handleChanges();\n                break;\n            case !edit.title.isPublished:\n                handleSubmit();\n                break;\n            default:\n                setError({ open: true, message: 'Something went wrong :(' });\n                break;\n        }\n    };\n\n    // If the preSubmit function passes with no errors or warnings it will\n    // then log the current date and store it within the database\n    const handleSubmit = () => {\n        const now = new Date();\n        const date = {\n            parsedDate: `${months[now.getMonth()]} ${now.getDate()}`,\n            epoch: now.getTime(),\n        };\n        const data = {\n            title: edit.title,\n            description: edit.description,\n            readLength: edit.readLength,\n            jumbotron: edit.jumbotron,\n            body: edit.body,\n            date,\n        };\n        fetch('/api/editors/newArticle',{\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(res => res.json())\n            .then((result) => {\n                if (result.error) {\n                    return setError({ open: true, message: result.error });\n                }\n                setSuccess({ open: true, message: 'Article published!' });\n                edit.setPublished();\n            })\n            .catch((error) => { setError({ open: true, message: error }); });\n    };\n\n    // If the user has already published the article, this function will then\n    // update the article within the database\n    const handleChanges = () => {\n        const data = {\n            title: edit.title,\n            description: edit.description,\n            readLength: edit.readLength,\n            jumbotron: edit.jumbotron,\n            body: edit.body,\n        };\n        fetch('/api/editors/saveChanges', {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(res => res.json())\n            .then((result) => {\n                if (result.error) {\n                    return setError({ open: true, message: result.error });\n                }\n                setSuccess({ open: true, message: 'Article Saved!' });\n            })\n            .catch((error) => { setError({ open: true, message: error }); });\n    };\n\n    return (\n        <Grid\n            className={classes.container}\n            justify=\"center\"\n            alignItems=\"center\"\n            container\n        >\n\n            <Grid item xs={1}>\n\n                {\n                    edit.title.isPublished\n                        ?\n                    <Fab className={classes.save} onClick={preSubmit} variant=\"extended\">\n                        <Icon>save</Icon>\n                        <Typography style={{ marginLeft: 10 }}>\n                            Save\n                        </Typography>\n                    </Fab>\n                        :\n                    <Fab className={classes.save} onClick={preSubmit} variant=\"extended\">\n                        <Icon>save</Icon>\n                        <Typography style={{ marginLeft: 10 }}>\n                            Publish\n                        </Typography>\n                    </Fab>\n                }\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={error.open}\n                    autoHideDuration={6000}\n                    onClose={closeError}\n                >\n                    <SnackbarContent\n                        className={classes.error}\n                        message={\n                            <Typography className={classes.message}>\n\n                                <Icon style={{ marginRight: 10 }}>\n                                    error\n                                </Icon>\n\n                                {error.message}\n\n                            </Typography>\n                        }\n                        action={\n                            <Button onClick={closeError}>\n                                <Icon>close</Icon>\n                            </Button>\n                        }\n                    />\n                </Snackbar>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={success.open}\n                    autoHideDuration={6000}\n                    onClose={closeSuccess}\n                >\n                    <SnackbarContent\n                        className={classes.success}\n                        message={\n                            <Typography className={classes.message}>\n\n                                <Icon style={{ marginRight: 10 }}>\n                                    check_circle\n                                </Icon>\n\n                                {success.message}\n                                \n                            </Typography>\n                        }\n                        action={\n                            <Button onClick={closeSuccess}>\n                                <Icon>close</Icon>\n                            </Button>\n                        }\n                    />\n                </Snackbar>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={warning.open}\n                    autoHideDuration={6000}\n                    onClose={closeWarning}\n                >\n                    <SnackbarContent\n                        className={classes.warning}\n                        message={\n                            <Typography className={classes.message}>\n\n                                <Icon style={{ marginRight: 10 }}>\n                                    check_circle\n                                </Icon>\n\n                                {warning.message}\n                                \n                            </Typography>\n                        }\n                        action={\n                            <Button onClick={closeWarning}>\n                                <Icon>close</Icon>\n                            </Button>\n                        }\n                    />\n                </Snackbar>\n\n            </Grid>\n            <Grid className={classes.editorTools} item xs={11}>\n\n                <TextSize margin={10} />\n                \n                <Font margin={10} />\n\n                <Styling margin={10} />\n\n                <Justify margin={10} />\n\n                <Margin margin={10} />\n\n            </Grid>\n\n        </Grid>\n    );\n};\n\nexport default Toolbar;\n"]},"metadata":{},"sourceType":"module"}