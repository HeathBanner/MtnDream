{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/Font.js\";\nimport React, { Fragment, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Menu, MenuItem, Button } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {};\n});\n\nvar Font = function Font() {\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      anchorEl = _useState2[0],\n      setAnchorEl = _useState2[1];\n\n  var handleOpen = function handleOpen(e) {\n    console.log(e.currentTarget);\n    setAnchorEl(e.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Text Size\"), React.createElement(Menu, {\n    id: \"textSize\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Header 1\"), React.createElement(MenuItem, {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Header 2\"), React.createElement(MenuItem, {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Header 3\")));\n};\n\nexport default Font;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/Font.js"],"names":["React","Fragment","useState","makeStyles","Grid","Menu","MenuItem","Button","useStyles","theme","Font","classes","anchorEl","setAnchorEl","handleOpen","e","console","log","currentTarget","handleClose","Boolean"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,QAArB,EAA+BC,MAA/B,QAA6C,mBAA7C;AAEA,IAAMC,SAAS,GAAGL,UAAU,CAAC,UAAAM,KAAK;AAAA,SAAK,EAAL;AAAA,CAAN,CAA5B;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAEf,MAAMC,OAAO,GAAGH,SAAS,EAAzB;;AAFe,kBAIiBN,QAAQ,CAAC,IAAD,CAJzB;AAAA;AAAA,MAIRU,QAJQ;AAAA,MAIEC,WAJF;;AAMf,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAO;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,aAAd;AACAL,IAAAA,WAAW,CAACE,CAAC,CAACG,aAAH,CAAX;AACH,GAHD;;AAKA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,SAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFA,EAMA,oBAAC,IAAD;AACI,IAAA,EAAE,EAAC,UADP;AAEI,IAAA,QAAQ,EAAEF,QAFd;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,IAAI,EAAEQ,OAAO,CAACR,QAAD,CAJjB;AAKI,IAAA,OAAO,EAAEO,WALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEA,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAUI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEA,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,EAaI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEA,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,CANA,CAFJ;AA8BH,CA7CD;;AA+CA,eAAeT,IAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Menu, MenuItem, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\nconst Font = () => {\n\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleOpen = (e) => {\n        console.log(e.currentTarget)\n        setAnchorEl(e.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };  \n\n    return (\n\n        <Fragment>\n            \n        <Button onClick={handleOpen}>\n            Text Size\n        </Button>\n\n        <Menu\n            id=\"textSize\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n        >\n            <MenuItem onClick={handleClose}>\n                Header 1\n            </MenuItem>\n            <MenuItem onClick={handleClose}>\n                Header 2\n            </MenuItem>\n            <MenuItem onClick={handleClose}>\n                Header 3\n            </MenuItem>\n        </Menu>\n\n    </Fragment>\n\n\n    );\n};\n\nexport default Font;"]},"metadata":{},"sourceType":"module"}