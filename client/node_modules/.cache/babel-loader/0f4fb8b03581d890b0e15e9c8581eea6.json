{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/TextSize.js\";\nimport React, { Fragment, useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Menu, MenuItem, Button } from '@material-ui/core';\nimport { EditorContext } from '../../../Context/EditorContext';\nvar useStyles = makeStyles(function (theme) {\n  return {};\n});\n\nvar TextSize = function TextSize() {\n  var classes = useStyles();\n  var holder = useContext(EditorContext);\n  var style = holder.textStyle;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      anchorEl = _useState2[0],\n      setAnchorEl = _useState2[1];\n\n  var handleOpen = function handleOpen(e) {\n    console.log(e.currentTarget);\n    setAnchorEl(e.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var wrapper = function wrapper(newStyle) {\n    holder.handleTextStyle(newStyle);\n    handleClose();\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Text Size\"), React.createElement(Menu, {\n    id: \"textSize\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    onClick: function onClick() {\n      return wrapper('header1');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Header 1\"), React.createElement(MenuItem, {\n    onClick: function onClick() {\n      return wrapper('header2');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Header 2\"), React.createElement(MenuItem, {\n    onClick: function onClick() {\n      return wrapper('header3');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Header 3\")));\n};\n\nexport default TextSize;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/TextSize.js"],"names":["React","Fragment","useState","useContext","makeStyles","Grid","Menu","MenuItem","Button","EditorContext","useStyles","theme","TextSize","classes","holder","style","textStyle","anchorEl","setAnchorEl","handleOpen","e","console","log","currentTarget","handleClose","wrapper","newStyle","handleTextStyle","Boolean"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,UAApC,QAAsD,OAAtD;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,QAArB,EAA+BC,MAA/B,QAA6C,mBAA7C;AAEA,SAASC,aAAT,QAA8B,gCAA9B;AAEA,IAAMC,SAAS,GAAGN,UAAU,CAAC,UAAAO,KAAK;AAAA,SAAK,EAAL;AAAA,CAAN,CAA5B;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAEnB,MAAMC,OAAO,GAAGH,SAAS,EAAzB;AAEA,MAAMI,MAAM,GAAGX,UAAU,CAACM,aAAD,CAAzB;AACA,MAAMM,KAAK,GAAGD,MAAM,CAACE,SAArB;;AALmB,kBAOad,QAAQ,CAAC,IAAD,CAPrB;AAAA;AAAA,MAOZe,QAPY;AAAA,MAOFC,WAPE;;AASnB,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAO;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,aAAd;AACAL,IAAAA,WAAW,CAACE,CAAC,CAACG,aAAH,CAAX;AACH,GAHD;;AAKA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,MAAMO,OAAO,GAAG,SAAVA,OAAU,CAAAC,QAAQ,EAAI;AACxBZ,IAAAA,MAAM,CAACa,eAAP,CAAuBD,QAAvB;AACAF,IAAAA,WAAW;AACd,GAHD;;AAKA,SAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEL,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAMI,oBAAC,IAAD;AACI,IAAA,EAAE,EAAC,UADP;AAEI,IAAA,QAAQ,EAAEF,QAFd;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,IAAI,EAAEW,OAAO,CAACX,QAAD,CAJjB;AAKI,IAAA,OAAO,EAAEO,WALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE;AAAA,aAAMC,OAAO,CAAC,SAAD,CAAb;AAAA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAUI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE;AAAA,aAAMA,OAAO,CAAC,SAAD,CAAb;AAAA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,EAaI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE;AAAA,aAAMA,OAAO,CAAC,SAAD,CAAb;AAAA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,CANJ,CAFJ;AA6BH,CApDD;;AAsDA,eAAeb,QAAf","sourcesContent":["import React, { Fragment, useState, useContext } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Menu, MenuItem, Button } from '@material-ui/core';\n\nimport { EditorContext } from '../../../Context/EditorContext';\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\nconst TextSize = () => {\n    \n    const classes = useStyles();\n\n    const holder = useContext(EditorContext);\n    const style = holder.textStyle;\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleOpen = (e) => {\n        console.log(e.currentTarget)\n        setAnchorEl(e.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };  \n\n    const wrapper = newStyle => {\n        holder.handleTextStyle(newStyle);\n        handleClose();\n    };\n\n    return (\n        \n        <Fragment>\n            \n            <Button onClick={handleOpen}>\n                Text Size\n            </Button>\n\n            <Menu\n                id=\"textSize\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={() => wrapper('header1')}>\n                    Header 1\n                </MenuItem>\n                <MenuItem onClick={() => wrapper('header2')}>\n                    Header 2\n                </MenuItem>\n                <MenuItem onClick={() => wrapper('header3')}>\n                    Header 3\n                </MenuItem>\n            </Menu>\n\n        </Fragment>\n        \n    );\n};\n\nexport default TextSize;"]},"metadata":{},"sourceType":"module"}