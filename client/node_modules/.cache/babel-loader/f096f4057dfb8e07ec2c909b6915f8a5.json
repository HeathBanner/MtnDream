{"ast":null,"code":"var _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/Jumbotron.js\";\nimport React, { useContext, useState } from 'react';\nimport { EditorContext } from '../../../Context/EditorContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Popover, Button, TextField } from '@material-ui/core';\nvar useStyles = makeStyles(function () {\n  return {\n    paper: {\n      padding: 20,\n      width: 350\n    }\n  };\n});\nexport default (function () {\n  var classes = useStyles();\n  var holder = useContext(EditorContext);\n\n  var handleClick = function handleClick(e) {\n    return holder.handleSectionMode({\n      el: 'jumbotron'\n    });\n  };\n\n  if (holder.jumbotron.src) {\n    return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n      style: {\n        width: '100%',\n        height: '100%',\n        display: 'none'\n      },\n      value: holder.jumbotron.src,\n      onChange: function onChange(e) {\n        return holder.handleInput(e, {\n          El: \"jumbotron\"\n        });\n      },\n      accept: \"image/*\",\n      id: \"image-uploader\",\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"image-uploader\",\n      style: {\n        width: '60%'\n      },\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.button,\n      component: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        width: '100%',\n        height: 'auto',\n        margin: '20px 0px'\n      },\n      src: holder.jumbotron.src,\n      alt: holder.title.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))));\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n      style: {\n        width: '100%',\n        height: '100%',\n        display: 'none'\n      },\n      value: holder.jumbotron.src,\n      onChange: function onChange(e) {\n        return holder.handleInput(e, {\n          El: \"jumbotron\"\n        });\n      },\n      accept: \"image/*\",\n      id: \"image-uploader\",\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"image-uploader\",\n      style: {\n        width: '60%'\n      },\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.button,\n      component: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Upload Jumbotron\")));\n  }\n});","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/Jumbotron.js"],"names":["React","useContext","useState","EditorContext","makeStyles","Popover","Button","TextField","useStyles","paper","padding","width","classes","holder","handleClick","e","handleSectionMode","el","jumbotron","src","height","display","handleInput","El","button","margin","title","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,aAAT,QAA8B,gCAA9B;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,SAA1B,QAA2C,mBAA3C;AAEA,IAAMC,SAAS,GAAGJ,UAAU,CAAC;AAAA,SAAO;AAChCK,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAE,EADN;AAEHC,MAAAA,KAAK,EAAE;AAFJ;AADyB,GAAP;AAAA,CAAD,CAA5B;AAOA,gBAAe,YAAM;AAEjB,MAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,MAAMK,MAAM,GAAGZ,UAAU,CAACE,aAAD,CAAzB;;AAEA,MAAMW,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD;AAAA,WAAQF,MAAM,CAACG,iBAAP,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAAR;AAAA,GAApB;;AAEA,MAAIJ,MAAM,CAACK,SAAP,CAAiBC,GAArB,EAA0B;AACtB,WACI,0CACI;AACI,MAAA,KAAK,EAAE;AACHR,QAAAA,KAAK,EAAE,MADJ;AAEHS,QAAAA,MAAM,EAAE,MAFL;AAGHC,QAAAA,OAAO,EAAE;AAHN,OADX;AAMI,MAAA,KAAK,EAAER,MAAM,CAACK,SAAP,CAAiBC,GAN5B;AAOI,MAAA,QAAQ,EAAE,kBAACJ,CAAD;AAAA,eAAOF,MAAM,CAACS,WAAP,CAAmBP,CAAnB,EAAsB;AAAEQ,UAAAA,EAAE,EAAE;AAAN,SAAtB,CAAP;AAAA,OAPd;AAQI,MAAA,MAAM,EAAC,SARX;AASI,MAAA,EAAE,EAAC,gBATP;AAUI,MAAA,IAAI,EAAC,MAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAaI;AAAO,MAAA,OAAO,EAAC,gBAAf;AAAgC,MAAA,KAAK,EAAE;AAAEZ,QAAAA,KAAK,EAAE;AAAT,OAAvC;AAAyD,MAAA,OAAO,EAAEG,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAEF,OAAO,CAACY,MAA3B;AAAmC,MAAA,SAAS,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,KAAK,EAAE;AACHb,QAAAA,KAAK,EAAE,MADJ;AAEHS,QAAAA,MAAM,EAAE,MAFL;AAGHK,QAAAA,MAAM,EAAE;AAHL,OADX;AAMI,MAAA,GAAG,EAAEZ,MAAM,CAACK,SAAP,CAAiBC,GAN1B;AAOI,MAAA,GAAG,EAAEN,MAAM,CAACa,KAAP,CAAaC,IAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAbJ,CADJ;AA6BH,GA9BD,MA8BO;AACH,WACI,0CACI;AACI,MAAA,KAAK,EAAE;AACHhB,QAAAA,KAAK,EAAE,MADJ;AAEHS,QAAAA,MAAM,EAAE,MAFL;AAGHC,QAAAA,OAAO,EAAE;AAHN,OADX;AAMI,MAAA,KAAK,EAAER,MAAM,CAACK,SAAP,CAAiBC,GAN5B;AAOI,MAAA,QAAQ,EAAE,kBAACJ,CAAD;AAAA,eAAOF,MAAM,CAACS,WAAP,CAAmBP,CAAnB,EAAsB;AAAEQ,UAAAA,EAAE,EAAE;AAAN,SAAtB,CAAP;AAAA,OAPd;AAQI,MAAA,MAAM,EAAC,SARX;AASI,MAAA,EAAE,EAAC,gBATP;AAUI,MAAA,IAAI,EAAC,MAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAaI;AAAO,MAAA,OAAO,EAAC,gBAAf;AAAgC,MAAA,KAAK,EAAE;AAAEZ,QAAAA,KAAK,EAAE;AAAT,OAAvC;AAAyD,MAAA,OAAO,EAAEG,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAEF,OAAO,CAACY,MAA3B;AAAmC,MAAA,SAAS,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CAbJ,CADJ;AAqBH;AACJ,CA5DD","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { EditorContext } from '../../../Context/EditorContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Popover, Button, TextField } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n    paper: {\n        padding: 20,\n        width: 350,\n    }\n}));\n\nexport default () => {\n\n    const classes = useStyles();\n    const holder = useContext(EditorContext);\n\n    const handleClick = (e) =>  holder.handleSectionMode({ el: 'jumbotron' });\n\n    if (holder.jumbotron.src) {\n        return (\n            <>\n                <input\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        display: 'none'\n                    }}\n                    value={holder.jumbotron.src}\n                    onChange={(e) => holder.handleInput(e, { El: \"jumbotron\" })}\n                    accept=\"image/*\"\n                    id=\"image-uploader\"\n                    type=\"file\"\n                />\n                <label htmlFor=\"image-uploader\" style={{ width: '60%' }} onClick={handleClick}>\n                    <Button className={classes.button} component=\"span\">\n                        <img \n                            style={{\n                                width: '100%',\n                                height: 'auto',\n                                margin: '20px 0px',\n                            }} \n                            src={holder.jumbotron.src} \n                            alt={holder.title.text} \n                        />                    \n                    </Button>\n                </label>\n            </>\n        );\n    } else {\n        return (\n            <>\n                <input\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        display: 'none'\n                    }}\n                    value={holder.jumbotron.src}\n                    onChange={(e) => holder.handleInput(e, { El: \"jumbotron\" })}\n                    accept=\"image/*\"\n                    id=\"image-uploader\"\n                    type=\"file\"\n                />\n                <label htmlFor=\"image-uploader\" style={{ width: '60%' }} onClick={handleClick}>\n                    <Button className={classes.button} component=\"span\">\n                        Upload Jumbotron                  \n                    </Button>\n                </label>\n            </>\n        );\n    }\n};\n"]},"metadata":{},"sourceType":"module"}