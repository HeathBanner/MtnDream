{"ast":null,"code":"import _objectSpread from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Contact/Form.js\";\nimport React, { useState, useContext } from 'react';\nimport { MediaContext } from '../../Context/MediaQuery';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Divider, Grid, Paper, TextField, Typography, Button } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  var _formPaper;\n\n  return {\n    formContainer: {\n      height: '100vh',\n      backgroundColor: '#18121E',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexWrap: 'wrap'\n    },\n    formPaper: (_formPaper = {}, _defineProperty(_formPaper, theme.breakpoints.up('lg'), {\n      width: '50%',\n      padding: '30px 60px'\n    }), _defineProperty(_formPaper, \"width\", '70%'), _defineProperty(_formPaper, \"padding\", 30), _defineProperty(_formPaper, \"display\", 'flex'), _defineProperty(_formPaper, \"justifyContent\", 'center'), _defineProperty(_formPaper, \"alignItems\", 'center'), _defineProperty(_formPaper, \"alignContent\", 'center'), _defineProperty(_formPaper, \"flexWrap\", 'wrap'), _formPaper),\n    formHeader: {\n      color: '#25472e'\n    },\n    input: {\n      width: '100%',\n      marginTop: 20\n    },\n    button: {\n      padding: 10,\n      marginTop: 20,\n      width: '100%',\n      color: 'white',\n      backgroundColor: '#25472e',\n      transition: 'all 0.4s ease',\n      '&:hover': {\n        transform: 'scale(1.01)'\n      }\n    }\n  };\n});\nvar initInfo = {\n  name: '',\n  email: '',\n  phone: '',\n  message: ''\n};\nexport default (function () {\n  var classes = useStyles();\n  var media = useContext(MediaContext);\n\n  var _useState = useState(initInfo),\n      _useState2 = _slicedToArray(_useState, 2),\n      info = _useState2[0],\n      setInfo = _useState2[1];\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var options, res, json;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              options = {\n                method: 'POST',\n                body: JSON.stringify(info),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context.next = 4;\n              return fetch('/api/contact/contactMe', options);\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.json();\n\n            case 7:\n              json = _context.sent;\n\n              if (!(!json || json.statusCode === 500)) {\n                _context.next = 10;\n                break;\n              }\n\n              return _context.abrupt(\"return\", media.errorNotify());\n\n            case 10:\n              media.openNotify({\n                success: true,\n                message: 'Contact was successful'\n              });\n              setInfo(initInfo);\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              media.errorNotify();\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 14]]);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Grid, {\n    className: classes.formContainer,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.formPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.formHeader,\n    variant: media.xs ? 'h4' : 'h2',\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Contact Us!\"), React.createElement(Divider, {\n    style: {\n      width: '70%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Name\",\n    value: info.name,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        name: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Email\",\n    value: info.email,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        email: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Phone\",\n    value: info.phone,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        phone: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Message\",\n    value: info.message,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        message: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.button,\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: media.xs ? 'h6' : 'h5',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Submit\"))));\n});","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Contact/Form.js"],"names":["React","useState","useContext","MediaContext","makeStyles","Divider","Grid","Paper","TextField","Typography","Button","useStyles","theme","formContainer","height","backgroundColor","display","justifyContent","alignItems","flexWrap","formPaper","breakpoints","up","width","padding","formHeader","color","input","marginTop","button","transition","transform","initInfo","name","email","phone","message","classes","media","info","setInfo","handleSubmit","options","method","body","JSON","stringify","headers","fetch","res","json","statusCode","errorNotify","openNotify","success","xs","className","textFieldLabels","inputBase","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { MediaContext } from '../../Context/MediaQuery';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Divider,\n    Grid,\n    Paper,\n    TextField,\n    Typography,\n    Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    formContainer: {\n        height: '100vh',\n        backgroundColor: '#18121E',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n    },\n    formPaper: {\n        [theme.breakpoints.up('lg')]: {\n            width: '50%',\n            padding: '30px 60px'\n        },\n        width: '70%',\n        padding: 30,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap'\n    },\n    formHeader: {\n        color: '#25472e',\n    },\n    input: {\n        width: '100%',\n        marginTop: 20,\n    },\n    button: {\n        padding: 10,\n        marginTop: 20,\n        width: '100%',\n        color: 'white',\n        backgroundColor: '#25472e',\n        transition: 'all 0.4s ease',\n        '&:hover': {\n            transform: 'scale(1.01)',\n        },\n    },\n}));\n\nconst initInfo = {\n    name: '',\n    email: '',\n    phone: '',\n    message: '',\n};\n\nexport default () => {\n\n    const classes = useStyles();\n    const media = useContext(MediaContext);\n\n    const [info, setInfo] = useState(initInfo);\n\n    const handleSubmit = async () => {\n        try {\n            const options = {\n                method: 'POST',\n                body: JSON.stringify(info),\n                headers: { 'Content-Type': 'application/json' }\n            };\n            const res = await fetch('/api/contact/contactMe', options);\n            const json = await res.json();\n    \n            if (!json || json.statusCode === 500) {\n                return media.errorNotify();\n            }\n            media.openNotify({ success: true, message: 'Contact was successful' });\n            setInfo(initInfo);\n        } catch (error) {\n            media.errorNotify();\n        }\n    };\n\n    return (\n        <Grid className={classes.formContainer} item xs={12}>\n            <Paper className={classes.formPaper}>\n                <Typography\n                    className={classes.formHeader}\n                    variant={media.xs ? 'h4' : 'h2'}\n                    align=\"center\"\n                >\n                    Contact Us!\n                </Typography>\n\n                <Divider style={{ width: '70%' }} />\n\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Name\"\n                    value={info.name}\n                    onChange={(e) => setInfo({ ...info, name: e.target.value })}\n                />\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Email\"\n                    value={info.email}\n                    onChange={(e) => setInfo({ ...info, email: e.target.value })}\n                />\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Phone\"\n                    value={info.phone}\n                    onChange={(e) => setInfo({ ...info, phone: e.target.value })}\n                />\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Message\"\n                    value={info.message}\n                    onChange={(e) => setInfo({ ...info, message: e.target.value })}\n                />\n\n                <Button\n                    className={classes.button}\n                    onClick={handleSubmit}\n                >\n                    <Typography variant={media.xs ? 'h6' : 'h5'}>\n                        Submit\n                    </Typography>\n                </Button>\n            </Paper>\n        </Grid>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}