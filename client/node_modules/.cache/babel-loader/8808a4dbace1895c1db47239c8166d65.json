{"ast":null,"code":"import _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/pages/Blog/Article.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Avatar } from '@material-ui/core';\nimport Nav from '../../components/Navigation/Nav';\nvar fontSizes = {\n  h1: '6rem',\n  h2: '3.75rem',\n  h3: '3rem',\n  h4: '2.125rem',\n  h5: '1.5rem',\n  h6: '1.25rem'\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      marginTop: 120,\n      marginBottom: 80\n    },\n    articlesContainer: {\n      paddingLeft: '20%',\n      paddingRight: 40\n    }\n  };\n});\n\nvar Article = function Article(_ref) {\n  var match = _ref.match;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      article = _useState2[0],\n      setArticle = _useState2[1];\n\n  useEffect(function () {\n    var title = match.params.title;\n    fetch('/api/editors/getArticle', {\n      method: 'POST',\n      body: JSON.stringify({\n        title: title\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setArticle(result);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  var classes = useStyles();\n\n  if (!article) {\n    return '';\n  }\n\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    style: {\n      height: 60\n    },\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      fontSize: fontSizes[article.title.textStyle],\n      fontFamily: \"\".concat(article.title.font, \", Helvetica, Arial, sans-serif\"),\n      fontWeight: article.title.bold ? 'bold' : 'normal',\n      fontStyle: article.title.italic ? 'italic' : 'normal',\n      textDecoration: article.title.underline ? 'underline' : 'none',\n      textAlign: article.title.justify,\n      color: article.title.color,\n      backgroundColor: article.title.highlight ? '#ffff00' : 'none',\n      marginTop: parseInt(article.title.marginTop),\n      marginBottom: parseInt(article.title.marginBottom)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, article.title.text), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Description goes here\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    src: \"https://media.licdn.com/dms/image/C4E03AQESXvxigX8NfQ/profile-displayphoto-shrink_800_800/0?e=1571875200&v=beta&t=jVs0jK8YKBHrOOcmnghTMtN9bhPfu7rH9MHADyTboBY\",\n    alt: \"Terri Banner Profile Photo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Aug 21 * 4 min read\")), React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: article.jumbotron.justify\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      marginTop: article.jumbotron.marginTop,\n      marginBottom: article.jumbotron.marginBottom\n    },\n    src: article.jumbotron.src,\n    alt: article.title.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"By Terri Banner\"), article.body.map(function (section, index) {\n    if (section.isText) {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        style: {\n          width: '100%',\n          fontSize: fontSizes[section.textStyle],\n          fontFamily: \"\".concat(section.font, \", Helvetica, Arial, sans-serif\"),\n          fontWeight: section.bold ? 'bold' : 'normal',\n          fontStyle: section.italic ? 'italic' : 'normal',\n          textDecoration: section.underline ? 'underline' : 'none',\n          textAlign: section.justify,\n          color: section.color,\n          backgroundColor: section.highlight ? '#ffff00' : 'none',\n          marginTop: parseInt(section.marginTop),\n          marginBottom: parseInt(section.marginBottom)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, section.text));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: section.justify\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: section.src,\n      alt: section.alt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }));\n  })));\n};\n\nexport default Article;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/pages/Blog/Article.js"],"names":["React","useEffect","useState","Fragment","makeStyles","Grid","Typography","Avatar","Nav","fontSizes","h1","h2","h3","h4","h5","h6","useStyles","theme","container","marginTop","marginBottom","articlesContainer","paddingLeft","paddingRight","Article","match","article","setArticle","title","params","fetch","method","body","JSON","stringify","headers","then","res","json","result","catch","error","console","log","classes","height","fontSize","textStyle","fontFamily","font","fontWeight","bold","fontStyle","italic","textDecoration","underline","textAlign","justify","color","backgroundColor","highlight","parseInt","text","width","display","justifyContent","jumbotron","src","map","section","index","isText","alt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Avatar } from '@material-ui/core';\n\nimport Nav from '../../components/Navigation/Nav';\n\nconst fontSizes = {\n    h1: '6rem',\n    h2: '3.75rem',\n    h3: '3rem',\n    h4: '2.125rem',\n    h5: '1.5rem',\n    h6: '1.25rem',\n};\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        marginTop: 120,\n        marginBottom: 80,\n    },\n    articlesContainer: {\n        paddingLeft: '20%',\n        paddingRight: 40,\n    },\n}));\n\nconst Article = ({ match }) => {\n\n    const [article, setArticle] = useState('');\n\n    useEffect(() => {\n        const title = match.params.title;\n        fetch('/api/editors/getArticle', {\n            method: 'POST',\n            body: JSON.stringify({ title }),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(res => res.json())\n            .then((result) => { setArticle(result); })\n            .catch((error) => { console.log(error); });\n    }, []);\n\n    const classes = useStyles();\n\n    if (!article) { return '' }\n    return (\n        <Grid container>\n            \n            <Grid style={{ height: 60 }} item xs={12}>\n\n                <Nav />\n\n            </Grid>\n            <Grid item xs={12}>\n\n                <Typography\n                    style={{\n                        fontSize: fontSizes[article.title.textStyle],\n                        fontFamily: `${article.title.font}, Helvetica, Arial, sans-serif`,\n                        fontWeight: article.title.bold ? 'bold' : 'normal',\n                        fontStyle: article.title.italic ? 'italic' : 'normal',\n                        textDecoration: article.title.underline ? 'underline' : 'none',\n                        textAlign: article.title.justify,\n                        color: article.title.color,\n                        backgroundColor: article.title.highlight ? '#ffff00' : 'none',\n                        marginTop: parseInt(article.title.marginTop),\n                        marginBottom: parseInt(article.title.marginBottom),\n                    }}\n                >\n                    {article.title.text}\n                </Typography>\n\n                <Typography>\n                    Description goes here\n                </Typography>\n\n                <div>\n\n                    <Avatar\n                        src={`https://media.licdn.com/dms/image/C4E03AQESXvxigX8NfQ/profile-displayphoto-shrink_800_800/0?e=1571875200&v=beta&t=jVs0jK8YKBHrOOcmnghTMtN9bhPfu7rH9MHADyTboBY`}\n                        alt=\"Terri Banner Profile Photo\"\n                    />\n\n                    <Typography>\n                        Aug 21 * 4 min read\n                    </Typography>\n\n                </div>\n\n                <div\n                    style={{\n                        width: '100%',\n                        display: 'flex',\n                        justifyContent: article.jumbotron.justify,\n                    }}\n                >\n                    <img\n                        style={{\n                            marginTop: article.jumbotron.marginTop,\n                            marginBottom: article.jumbotron.marginBottom,\n                        }}\n                        src={article.jumbotron.src}\n                        alt={article.title.text}\n                    />\n                </div>\n\n                <Typography>\n                    By Terri Banner\n                </Typography>\n\n                {\n                    article.body.map((section, index) => {\n                        if (section.isText) {\n                            return (\n                                <Fragment>\n\n                                    <Typography\n                                        style={{\n                                            width: '100%',\n                                            fontSize: fontSizes[section.textStyle],\n                                            fontFamily: `${section.font}, Helvetica, Arial, sans-serif`,\n                                            fontWeight: section.bold ? 'bold' : 'normal',\n                                            fontStyle: section.italic ? 'italic' : 'normal',\n                                            textDecoration: section.underline ? 'underline' : 'none',\n                                            textAlign: section.justify,\n                                            color: section.color,\n                                            backgroundColor: section.highlight ? '#ffff00' : 'none',\n                                            marginTop: parseInt(section.marginTop),\n                                            marginBottom: parseInt(section.marginBottom),    \n                                        }}\n                                    >\n                                        {section.text}\n                                    </Typography>\n\n                                </Fragment>\n                            );\n                        }\n                        return (\n                            <div\n                                style={{\n                                    width: '100%',\n                                    display: 'flex',\n                                    justifyContent: section.justify,\n                                }}\n                            >\n                                <img src={section.src} alt={section.alt} />\n                            </div>\n                        )\n                    })\n                }\n\n            </Grid>\n\n        </Grid>\n    );\n};\n\nexport default Article;"]},"metadata":{},"sourceType":"module"}