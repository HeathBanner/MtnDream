{"ast":null,"code":"var _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/Jumbotron.js\";\nimport React, { useContext } from 'react';\nimport { EditorContext } from '../../../Context/EditorContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nvar useStyles = makeStyles(function () {\n  return {\n    paper: {\n      padding: 20,\n      width: 350\n    },\n    button: {\n      width: '100%',\n      padding: 10,\n      color: 'white',\n      backgroundColor: '#379683'\n    }\n  };\n});\nexport default (function () {\n  var classes = useStyles();\n  var holder = useContext(EditorContext);\n  var imgHelper = \"data:image/jpeg;base64,\";\n\n  var handleClick = function handleClick(e) {\n    return holder.handleSectionMode({\n      el: 'jumbotron'\n    });\n  };\n\n  if (holder.jumbotron.src) {\n    return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n      style: {\n        width: '100%',\n        height: '100%',\n        display: 'none'\n      },\n      onChange: function onChange(e) {\n        return holder.handleImage(e.target.files[0], {\n          El: \"jumbotron\"\n        });\n      },\n      accept: \"image/*\",\n      id: \"image-uploader\",\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"image-uploader\",\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Button, {\n      component: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        width: '100%',\n        height: 'auto',\n        margin: '20px 0px'\n      },\n      src: \"\".concat(imgHelper).concat(holder.jumbotron.src),\n      alt: holder.title.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))));\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n      style: {\n        width: '100%',\n        height: '100%',\n        display: 'none'\n      },\n      onChange: function onChange(e) {\n        return holder.handleImage(e.target.files[0], {\n          El: \"jumbotron\"\n        });\n      },\n      accept: \"image/*\",\n      id: \"image-uploader\",\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"image-uploader\",\n      style: {\n        width: '60%'\n      },\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.button,\n      component: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Upload Jumbotron\")));\n  }\n});","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Editor/Tools/Jumbotron.js"],"names":["React","useContext","EditorContext","makeStyles","Button","useStyles","paper","padding","width","button","color","backgroundColor","classes","holder","imgHelper","handleClick","e","handleSectionMode","el","jumbotron","src","height","display","handleImage","target","files","El","margin","title","text"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { EditorContext } from '../../../Context/EditorContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n    paper: {\n        padding: 20,\n        width: 350,\n    },\n    button: {\n        width: '100%',\n        padding: 10,\n        color: 'white',\n        backgroundColor: '#379683'\n    }\n}));\n\nexport default () => {\n\n    const classes = useStyles();\n    const holder = useContext(EditorContext);\n    const imgHelper = \"data:image/jpeg;base64,\";\n\n    const handleClick = (e) =>  holder.handleSectionMode({ el: 'jumbotron' });\n\n    if (holder.jumbotron.src) {\n        return (\n            <>\n                <input\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        display: 'none'\n                    }}\n                    onChange={(e) => holder.handleImage(e.target.files[0], { El: \"jumbotron\" })}\n                    accept=\"image/*\"\n                    id=\"image-uploader\"\n                    type=\"file\"\n                />\n                <label htmlFor=\"image-uploader\" onClick={handleClick}>\n                    <Button component=\"span\">\n                        <img \n                            style={{\n                                width: '100%',\n                                height: 'auto',\n                                margin: '20px 0px',\n                            }}\n                            src={`${imgHelper}${holder.jumbotron.src}`}\n                            alt={holder.title.text} \n                        />                    \n                    </Button>\n                </label>\n            </>\n        );\n    } else {\n        return (\n            <>\n                <input\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        display: 'none'\n                    }}\n                    onChange={(e) => holder.handleImage(e.target.files[0], { El: \"jumbotron\" })}\n                    accept=\"image/*\"\n                    id=\"image-uploader\"\n                    type=\"file\"\n                />\n                <label htmlFor=\"image-uploader\" style={{ width: '60%' }} onClick={handleClick}>\n                    <Button className={classes.button} component=\"span\">\n                        Upload Jumbotron                  \n                    </Button>\n                </label>\n            </>\n        );\n    }\n};\n"]},"metadata":{},"sourceType":"module"}