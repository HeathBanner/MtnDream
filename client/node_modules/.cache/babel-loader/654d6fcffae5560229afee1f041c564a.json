{"ast":null,"code":"import _objectSpread from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Contact/Form.js\";\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { Divider, Grid, Paper, TextField, Typography, Button, Snackbar, SnackbarContent, Slide, Icon, IconButton } from '@material-ui/core';\nimport { MediaContext } from '../../Context/MediaQuery';\nvar initInfo = {\n  name: '',\n  email: '',\n  phone: '',\n  message: ''\n};\nvar useStyles = makeStyles(function (theme) {\n  var _formPaper;\n\n  return {\n    formContainer: {\n      height: '100vh',\n      backgroundColor: '#18121E',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexWrap: 'wrap'\n    },\n    formPaper: (_formPaper = {}, _defineProperty(_formPaper, theme.breakpoints.up('lg'), {\n      width: '50%',\n      padding: '30px 60px'\n    }), _defineProperty(_formPaper, \"width\", '70%'), _defineProperty(_formPaper, \"padding\", 30), _defineProperty(_formPaper, \"display\", 'flex'), _defineProperty(_formPaper, \"justifyContent\", 'center'), _defineProperty(_formPaper, \"alignItems\", 'center'), _defineProperty(_formPaper, \"alignContent\", 'center'), _defineProperty(_formPaper, \"flexWrap\", 'wrap'), _formPaper),\n    formHeader: {\n      color: '#25472e'\n    },\n    input: {\n      width: '100%',\n      marginTop: 20\n    },\n    button: {\n      padding: 10,\n      marginTop: 20,\n      width: '100%',\n      color: 'white',\n      backgroundColor: '#25472e',\n      transition: 'all 0.4s ease',\n      '&:hover': {\n        transform: 'scale(1.01)'\n      }\n    },\n    snackbar: {\n      backgroundColor: green[600]\n    }\n  };\n});\n\nvar Form = function Form() {\n  var classes = useStyles();\n  var media = useContext(MediaContext);\n\n  var _useState = useState({\n    initInfo: initInfo\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      info = _useState2[0],\n      setInfo = _useState2[1];\n\n  var _useState3 = useState('Your contact information has been sent!'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      status = _useState4[0],\n      setStatus = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      open = _useState6[0],\n      setOpen = _useState6[1];\n\n  var handleSubmit = function handleSubmit() {\n    fetch('/api/contact/contactMe', {\n      method: 'POST',\n      body: JSON.stringify(info),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      if (!result) {\n        return setStatus('Something went wrong!');\n      }\n\n      setOpen(true);\n      setInfo(_objectSpread({}, initInfo));\n    }).catch(function () {\n      return;\n    });\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var slideTransition = function slideTransition(props) {\n    return React.createElement(Slide, Object.assign({}, props, {\n      direction: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(Grid, {\n    className: classes.formContainer,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.formPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.formHeader,\n    variant: media.xs ? 'h4' : 'h2',\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Contact Us!\"), React.createElement(Divider, {\n    style: {\n      width: '70%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Name\",\n    value: info.name,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        name: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Email\",\n    value: info.email,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        email: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Phone\",\n    value: info.phone,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        phone: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.input,\n    InputLabelProps: {\n      className: classes.textFieldLabels\n    },\n    inputProps: {\n      className: classes.inputBase\n    },\n    variant: \"outlined\",\n    label: \"Message\",\n    value: info.message,\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread({}, info, {\n        message: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.button,\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: media.xs ? 'h6' : 'h5',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Submit\")), React.createElement(Snackbar, {\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: slideTransition,\n    ContentProps: {\n      'aria-describedby': 'message-id'\n    },\n    autoHideDuration: 6000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: classes.snackbar,\n    message: React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, status),\n    action: React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"close\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }))));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/components/Contact/Form.js"],"names":["React","useState","useContext","makeStyles","green","Divider","Grid","Paper","TextField","Typography","Button","Snackbar","SnackbarContent","Slide","Icon","IconButton","MediaContext","initInfo","name","email","phone","message","useStyles","theme","formContainer","height","backgroundColor","display","justifyContent","alignItems","flexWrap","formPaper","breakpoints","up","width","padding","formHeader","color","input","marginTop","button","transition","transform","snackbar","Form","classes","media","info","setInfo","status","setStatus","open","setOpen","handleSubmit","fetch","method","body","JSON","stringify","headers","then","res","json","result","catch","handleClose","slideTransition","props","xs","className","textFieldLabels","inputBase","e","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IACIC,QADJ,EAEIC,UAFJ,QAGO,OAHP;AAKA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SACIC,OADJ,EAEIC,IAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,UALJ,EAMIC,MANJ,EAOIC,QAPJ,EAQIC,eARJ,EASIC,KATJ,EAUIC,IAVJ,EAWIC,UAXJ,QAYO,mBAZP;AAcA,SAASC,YAAT,QAA6B,0BAA7B;AAEA,IAAMC,QAAQ,GAAG;AACbC,EAAAA,IAAI,EAAE,EADO;AAEbC,EAAAA,KAAK,EAAE,EAFM;AAGbC,EAAAA,KAAK,EAAE,EAHM;AAIbC,EAAAA,OAAO,EAAE;AAJI,CAAjB;AAOA,IAAMC,SAAS,GAAGnB,UAAU,CAAC,UAACoB,KAAD;AAAA;;AAAA,SAAY;AACrCC,IAAAA,aAAa,EAAE;AACXC,MAAAA,MAAM,EAAE,OADG;AAEXC,MAAAA,eAAe,EAAE,SAFN;AAGXC,MAAAA,OAAO,EAAE,MAHE;AAIXC,MAAAA,cAAc,EAAE,QAJL;AAKXC,MAAAA,UAAU,EAAE,QALD;AAMXC,MAAAA,QAAQ,EAAE;AANC,KADsB;AASrCC,IAAAA,SAAS,gDACJR,KAAK,CAACS,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CADI,EACyB;AAC1BC,MAAAA,KAAK,EAAE,KADmB;AAE1BC,MAAAA,OAAO,EAAE;AAFiB,KADzB,wCAKE,KALF,0CAMI,EANJ,0CAOI,MAPJ,iDAQW,QARX,6CASO,QATP,+CAUS,QAVT,2CAWK,MAXL,cAT4B;AAsBrCC,IAAAA,UAAU,EAAE;AACRC,MAAAA,KAAK,EAAE;AADC,KAtByB;AAyBrCC,IAAAA,KAAK,EAAE;AACHJ,MAAAA,KAAK,EAAE,MADJ;AAEHK,MAAAA,SAAS,EAAE;AAFR,KAzB8B;AA6BrCC,IAAAA,MAAM,EAAE;AACJL,MAAAA,OAAO,EAAE,EADL;AAEJI,MAAAA,SAAS,EAAE,EAFP;AAGJL,MAAAA,KAAK,EAAE,MAHH;AAIJG,MAAAA,KAAK,EAAE,OAJH;AAKJX,MAAAA,eAAe,EAAE,SALb;AAMJe,MAAAA,UAAU,EAAE,eANR;AAOJ,iBAAW;AACPC,QAAAA,SAAS,EAAE;AADJ;AAPP,KA7B6B;AAwCrCC,IAAAA,QAAQ,EAAE;AACNjB,MAAAA,eAAe,EAAEtB,KAAK,CAAC,GAAD;AADhB;AAxC2B,GAAZ;AAAA,CAAD,CAA5B;;AA6CA,IAAMwC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAEf,MAAMC,OAAO,GAAGvB,SAAS,EAAzB;AACA,MAAMwB,KAAK,GAAG5C,UAAU,CAACc,YAAD,CAAxB;;AAHe,kBAKSf,QAAQ,CAAC;AAAEgB,IAAAA,QAAQ,EAARA;AAAF,GAAD,CALjB;AAAA;AAAA,MAKR8B,IALQ;AAAA,MAKFC,OALE;;AAAA,mBAMa/C,QAAQ,CAAC,yCAAD,CANrB;AAAA;AAAA,MAMRgD,MANQ;AAAA,MAMAC,SANA;;AAAA,mBAQSjD,QAAQ,CAAC,KAAD,CARjB;AAAA;AAAA,MAQRkD,IARQ;AAAA,MAQFC,OARE;;AAUf,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBC,IAAAA,KAAK,CAAC,wBAAD,EAA2B;AAC5BC,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAFsB;AAG5BY,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHmB,KAA3B,CAAL,CAKKC,IALL,CAKU,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KALb,EAMKF,IANL,CAMU,UAAAG,MAAM,EAAI;AACZ,UAAI,CAACA,MAAL,EAAa;AAAE,eAAOb,SAAS,CAAC,uBAAD,CAAhB;AAA4C;;AAC3DE,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAJ,MAAAA,OAAO,mBAAM/B,QAAN,EAAP;AACH,KAVL,EAWK+C,KAXL,CAWW,YAAM;AAAE;AAAS,KAX5B;AAYH,GAbD;;AAeA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAEb,IAAAA,OAAO,CAAC,KAAD,CAAP;AAAiB,GAA7C;;AAEA,MAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,WAAO,oBAAC,KAAD,oBAAWA,KAAX;AAAkB,MAAA,SAAS,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH,GAFD;;AAIA,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEtB,OAAO,CAACrB,aAAzB;AAAwC,IAAA,IAAI,MAA5C;AAA6C,IAAA,EAAE,EAAE,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEqB,OAAO,CAACd,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,UAAD;AACI,IAAA,SAAS,EAAEc,OAAO,CAACT,UADvB;AAEI,IAAA,OAAO,EAAEU,KAAK,CAACsB,EAAN,GAAW,IAAX,GAAkB,IAF/B;AAGI,IAAA,KAAK,EAAC,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAUI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAElC,MAAAA,KAAK,EAAE;AAAT,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAYI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAEW,OAAO,CAACP,KADvB;AAEI,IAAA,eAAe,EAAE;AAAE+B,MAAAA,SAAS,EAAExB,OAAO,CAACyB;AAArB,KAFrB;AAGI,IAAA,UAAU,EAAE;AAAED,MAAAA,SAAS,EAAExB,OAAO,CAAC0B;AAArB,KAHhB;AAII,IAAA,OAAO,EAAC,UAJZ;AAKI,IAAA,KAAK,EAAC,MALV;AAMI,IAAA,KAAK,EAAExB,IAAI,CAAC7B,IANhB;AAOI,IAAA,QAAQ,EAAE,kBAACsD,CAAD;AAAA,aAAOxB,OAAO,mBAAMD,IAAN;AAAY7B,QAAAA,IAAI,EAAEsD,CAAC,CAACC,MAAF,CAASC;AAA3B,SAAd;AAAA,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAqBI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAE7B,OAAO,CAACP,KADvB;AAEI,IAAA,eAAe,EAAE;AAAE+B,MAAAA,SAAS,EAAExB,OAAO,CAACyB;AAArB,KAFrB;AAGI,IAAA,UAAU,EAAE;AAAED,MAAAA,SAAS,EAAExB,OAAO,CAAC0B;AAArB,KAHhB;AAII,IAAA,OAAO,EAAC,UAJZ;AAKI,IAAA,KAAK,EAAC,OALV;AAMI,IAAA,KAAK,EAAExB,IAAI,CAAC5B,KANhB;AAOI,IAAA,QAAQ,EAAE,kBAACqD,CAAD;AAAA,aAAOxB,OAAO,mBAAMD,IAAN;AAAY5B,QAAAA,KAAK,EAAEqD,CAAC,CAACC,MAAF,CAASC;AAA5B,SAAd;AAAA,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,EA8BI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAE7B,OAAO,CAACP,KADvB;AAEI,IAAA,eAAe,EAAE;AAAE+B,MAAAA,SAAS,EAAExB,OAAO,CAACyB;AAArB,KAFrB;AAGI,IAAA,UAAU,EAAE;AAAED,MAAAA,SAAS,EAAExB,OAAO,CAAC0B;AAArB,KAHhB;AAII,IAAA,OAAO,EAAC,UAJZ;AAKI,IAAA,KAAK,EAAC,OALV;AAMI,IAAA,KAAK,EAAExB,IAAI,CAAC3B,KANhB;AAOI,IAAA,QAAQ,EAAE,kBAACoD,CAAD;AAAA,aAAOxB,OAAO,mBAAMD,IAAN;AAAY3B,QAAAA,KAAK,EAAEoD,CAAC,CAACC,MAAF,CAASC;AAA5B,SAAd;AAAA,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,EAuCI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAE7B,OAAO,CAACP,KADvB;AAEI,IAAA,eAAe,EAAE;AAAE+B,MAAAA,SAAS,EAAExB,OAAO,CAACyB;AAArB,KAFrB;AAGI,IAAA,UAAU,EAAE;AAAED,MAAAA,SAAS,EAAExB,OAAO,CAAC0B;AAArB,KAHhB;AAII,IAAA,OAAO,EAAC,UAJZ;AAKI,IAAA,KAAK,EAAC,SALV;AAMI,IAAA,KAAK,EAAExB,IAAI,CAAC1B,OANhB;AAOI,IAAA,QAAQ,EAAE,kBAACmD,CAAD;AAAA,aAAOxB,OAAO,mBAAMD,IAAN;AAAY1B,QAAAA,OAAO,EAAEmD,CAAC,CAACC,MAAF,CAASC;AAA9B,SAAd;AAAA,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCJ,EAiDI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAE7B,OAAO,CAACL,MADvB;AAEI,IAAA,OAAO,EAAEa,YAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEP,KAAK,CAACsB,EAAN,GAAW,IAAX,GAAkB,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CAjDJ,EA2DI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEjB,IADV;AAEI,IAAA,OAAO,EAAEc,WAFb;AAGI,IAAA,mBAAmB,EAAGC,eAH1B;AAII,IAAA,YAAY,EAAE;AAAE,0BAAoB;AAAtB,KAJlB;AAKI,IAAA,gBAAgB,EAAE,IALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,eAAD;AACI,IAAA,SAAS,EAAErB,OAAO,CAACF,QADvB;AAEI,IAAA,OAAO,EACH,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,KAAK,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKM,MADL,CAHR;AAOI,IAAA,MAAM,EACF,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAEgB,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CA3DJ,CAFJ,CADJ;AA0FH,CAzHD;;AA2HA,eAAerB,IAAf","sourcesContent":["import React, {\n    useState,\n    useContext\n} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport {\n    Divider,\n    Grid,\n    Paper,\n    TextField,\n    Typography,\n    Button,\n    Snackbar,\n    SnackbarContent,\n    Slide,\n    Icon,\n    IconButton\n} from '@material-ui/core';\n\nimport { MediaContext } from '../../Context/MediaQuery';\n\nconst initInfo = {\n    name: '',\n    email: '',\n    phone: '',\n    message: ''\n};\n\nconst useStyles = makeStyles((theme) => ({\n    formContainer: {\n        height: '100vh',\n        backgroundColor: '#18121E',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n    },\n    formPaper: {\n        [theme.breakpoints.up('lg')]: {\n            width: '50%',\n            padding: '30px 60px'\n        },\n        width: '70%',\n        padding: 30,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap'\n    },\n    formHeader: {\n        color: '#25472e',\n    },\n    input: {\n        width: '100%',\n        marginTop: 20,\n    },\n    button: {\n        padding: 10,\n        marginTop: 20,\n        width: '100%',\n        color: 'white',\n        backgroundColor: '#25472e',\n        transition: 'all 0.4s ease',\n        '&:hover': {\n            transform: 'scale(1.01)',\n        },\n    },\n    snackbar: {\n        backgroundColor: green[600]\n    },\n}));\n\nconst Form = () => {\n\n    const classes = useStyles();\n    const media = useContext(MediaContext);\n\n    const [info, setInfo] = useState({ initInfo });\n    const [status, setStatus] = useState('Your contact information has been sent!');\n\n    const [open, setOpen] = useState(false);\n\n    const handleSubmit = () => {\n        fetch('/api/contact/contactMe', {\n            method: 'POST',\n            body: JSON.stringify(info),\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.json())\n            .then(result => {\n                if (!result) { return setStatus('Something went wrong!'); }\n                setOpen(true);\n                setInfo({ ...initInfo });\n            })\n            .catch(() => { return; })\n    };\n\n    const handleClose = () => { setOpen(false); };\n\n    const slideTransition = (props) => {\n        return <Slide {...props} direction=\"right\" />;\n    };\n\n    return (\n        <Grid className={classes.formContainer} item xs={12}>\n\n            <Paper className={classes.formPaper}>\n\n                <Typography\n                    className={classes.formHeader}\n                    variant={media.xs ? 'h4' : 'h2'}\n                    align=\"center\"\n                >\n                    Contact Us!\n                </Typography>\n\n                <Divider style={{ width: '70%' }} />\n\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Name\"\n                    value={info.name}\n                    onChange={(e) => setInfo({ ...info, name: e.target.value })}\n                />\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Email\"\n                    value={info.email}\n                    onChange={(e) => setInfo({ ...info, email: e.target.value })}\n                />\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Phone\"\n                    value={info.phone}\n                    onChange={(e) => setInfo({ ...info, phone: e.target.value })}\n                />\n                <TextField \n                    className={classes.input}\n                    InputLabelProps={{ className: classes.textFieldLabels }}\n                    inputProps={{ className: classes.inputBase }}\n                    variant=\"outlined\"\n                    label=\"Message\"\n                    value={info.message}\n                    onChange={(e) => setInfo({ ...info, message: e.target.value })}\n                />\n\n                <Button\n                    className={classes.button}\n                    onClick={handleSubmit}\n                >\n                    <Typography variant={media.xs ? 'h6' : 'h5'}>\n                        Submit\n                    </Typography>\n                </Button>\n\n\n                <Snackbar \n                    open={open}\n                    onClose={handleClose}\n                    TransitionComponent={ slideTransition }\n                    ContentProps={{ 'aria-describedby': 'message-id' }}\n                    autoHideDuration={6000}\n                >\n\n                    <SnackbarContent \n                        className={classes.snackbar}\n                        message={ \n                            <Typography variant=\"h6\" align=\"center\">\n                                {status}\n                            </Typography>\n                        }\n                        action={\n                            <IconButton color=\"inherit\" onClick={handleClose}>\n                                <Icon>close</Icon>\n                            </IconButton>\n                        }\n                    />\n\n                </Snackbar>\n\n            </Paper>\n\n        </Grid>\n    );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}