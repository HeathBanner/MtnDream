{"ast":null,"code":"import _regeneratorRuntime from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/pages/Blog/Article.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { MediaContext } from '../../Context/MediaQuery';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Avatar, CircularProgress } from '@material-ui/core';\nvar fontSizes = {\n  h1: '6rem',\n  h2: '3.75rem',\n  h3: '3rem',\n  h4: '2.125rem',\n  h5: '1.5rem',\n  h6: '1.25rem'\n};\nvar mobileFontSizes = {\n  h1: '2.125rem',\n  h2: '2.125em',\n  h3: '1.5rem',\n  h4: '1.5rem',\n  h5: '1.25rem',\n  h6: '1rem'\n};\nvar useStyles = makeStyles(function () {\n  return {\n    container: {\n      minHeight: '100vh',\n      marginTop: 60,\n      marginBottom: 80,\n      padding: '0px 10%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      flexWrap: 'wrap'\n    },\n    progressContainer: {\n      minHeight: '100vh',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexWrap: 'wrap'\n    },\n    articlesContainer: {\n      paddingLeft: '20%',\n      paddingRight: 40\n    },\n    infoContainer: {\n      position: 'relative',\n      height: 60,\n      marginTop: 20,\n      paddingLeft: 80,\n      display: 'inline-flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      alignContent: 'center',\n      flexWrap: 'wrap',\n      flexBasis: 'auto'\n    },\n    avatar: {\n      height: 60,\n      width: 60,\n      position: 'absolute',\n      top: 0,\n      left: 0\n    },\n    readLength: {\n      color: 'rgba(0, 0, 0, 0.54)'\n    }\n  };\n});\nexport default (function (_ref) {\n  var match = _ref.match;\n  var media = useContext(MediaContext);\n  var classes = useStyles();\n  var imgHelper = \"data:image/jpeg;base64,\";\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      article = _useState2[0],\n      setArticle = _useState2[1]; // Once the component mounts, this function will grab the article that matches\n  // the url parameter value and update the state with the matched article's elements\n\n\n  useEffect(function () {\n    return fetchArticle();\n  }, []);\n\n  var fetchArticle =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var title, options, res, json;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              title = match.params.title;\n              options = {\n                method: 'POST',\n                body: JSON.stringify({\n                  title: title\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context.next = 5;\n              return fetch('/api/editors/getArticle', options);\n\n            case 5:\n              res = _context.sent;\n              _context.next = 8;\n              return res.json();\n\n            case 8:\n              json = _context.sent;\n\n              if (!json.error) {\n                _context.next = 12;\n                break;\n              }\n\n              return _context.abrupt(\"return\", media.openNotify({\n                error: true,\n                message: json.message\n              }));\n\n            case 12:\n              setArticle(json);\n              _context.next = 18;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              media.errorNotify();\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 15]]);\n    }));\n\n    return function fetchArticle() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  if (!article) return React.createElement(Grid, {\n    container: true,\n    className: classes.progressContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }));\n  var data;\n\n  try {\n    data = Buffer.from(article.jumbotron.src.data, 'binary');\n  } catch (error) {\n    media.errorNotify();\n  }\n\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.container,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      fontSize: media.md ? mobileFontSizes[article.title.textStyle] : fontSizes[article.title.textStyle],\n      fontFamily: \"\".concat(article.title.font, \", Helvetica, Arial, sans-serif\"),\n      fontWeight: article.title.bold ? 'bold' : 'normal',\n      fontStyle: article.title.italic ? 'italic' : 'normal',\n      textDecoration: article.title.underline ? 'underline' : 'none',\n      textAlign: article.title.justify,\n      color: article.title.color,\n      backgroundColor: article.title.highlight ? '#ffff00' : 'none',\n      marginTop: parseInt(article.title.marginTop),\n      marginBottom: parseInt(article.title.marginBottom),\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, article.title.text), React.createElement(Typography, {\n    style: {\n      fontSize: media.md ? mobileFontSizes[article.description.textStyle] : fontSizes[article.description.textStyle],\n      fontFamily: \"\".concat(article.description.font, \", Helvetica, Arial, sans-serif\"),\n      textAlign: article.description.justify,\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, article.description.text), React.createElement(\"div\", {\n    className: classes.infoContainer,\n    style: {\n      width: article.readLength.justify === 'flex-start' ? '100%' : 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    src: \"https://media.licdn.com/dms/image/C4E03AQESXvxigX8NfQ/profile-displayphoto-shrink_800_800/0?e=1571875200&v=beta&t=jVs0jK8YKBHrOOcmnghTMtN9bhPfu7rH9MHADyTboBY\",\n    alt: \"Terri Banner Profile Photo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Terri Banner\")), React.createElement(Typography, {\n    className: classes.readLength,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Aug 21 \", \" \\u2022 \", \" \".concat(article.readLength.text, \" min read\"))), React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: article.jumbotron.justify\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      marginTop: article.jumbotron.marginTop,\n      marginBottom: article.jumbotron.marginBottom,\n      width: '50%'\n    },\n    src: \"\".concat(imgHelper).concat(data),\n    alt: article.title.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  })), article.body.map(function (section, index) {\n    if (section.isText) {\n      return React.createElement(Typography, {\n        style: {\n          width: '100%',\n          fontSize: media.md ? mobileFontSizes[section.textStyle] : fontSizes[section.textStyle],\n          fontFamily: \"\".concat(section.font, \", Helvetica, Arial, sans-serif\"),\n          fontWeight: section.bold ? 'bold' : 'normal',\n          fontStyle: section.italic ? 'italic' : 'normal',\n          textDecoration: section.underline ? 'underline' : 'none',\n          textAlign: section.justify,\n          color: section.color,\n          backgroundColor: section.highlight ? '#ffff00' : 'none',\n          marginTop: parseInt(section.marginTop),\n          marginBottom: parseInt(section.marginBottom)\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, section.text);\n    }\n\n    var bodyImage;\n\n    try {\n      bodyImage = Buffer.from(section.src.data, 'binary');\n    } catch (error) {\n      media.errorNotify();\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: section.justify,\n        marginTop: section.marginTop,\n        marginBottom: section.marginBottom\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"\".concat(imgHelper).concat(bodyImage),\n      alt: section.alt,\n      style: {\n        width: '70%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }));\n  })));\n});","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/pages/Blog/Article.js"],"names":["React","useEffect","useState","useContext","MediaContext","makeStyles","Grid","Typography","Avatar","CircularProgress","fontSizes","h1","h2","h3","h4","h5","h6","mobileFontSizes","useStyles","container","minHeight","marginTop","marginBottom","padding","display","justifyContent","alignItems","flexWrap","progressContainer","articlesContainer","paddingLeft","paddingRight","infoContainer","position","height","alignContent","flexBasis","avatar","width","top","left","readLength","color","match","media","classes","imgHelper","article","setArticle","fetchArticle","title","params","options","method","body","JSON","stringify","headers","fetch","res","json","error","openNotify","message","errorNotify","data","Buffer","from","jumbotron","src","fontSize","md","textStyle","fontFamily","font","fontWeight","bold","fontStyle","italic","textDecoration","underline","textAlign","justify","backgroundColor","highlight","parseInt","text","description","map","section","index","isText","bodyImage","alt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { MediaContext } from '../../Context/MediaQuery';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Avatar, CircularProgress } from '@material-ui/core';\n\nconst fontSizes = {\n    h1: '6rem',\n    h2: '3.75rem',\n    h3: '3rem',\n    h4: '2.125rem',\n    h5: '1.5rem',\n    h6: '1.25rem',\n};\nconst mobileFontSizes = {\n    h1: '2.125rem',\n    h2: '2.125em',\n    h3: '1.5rem',\n    h4: '1.5rem',\n    h5: '1.25rem',\n    h6: '1rem',\n};\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        minHeight: '100vh',\n        marginTop: 60,\n        marginBottom: 80,\n        padding: '0px 10%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        flexWrap: 'wrap',\n    },\n    progressContainer: {\n        minHeight: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n    },\n    articlesContainer: {\n        paddingLeft: '20%',\n        paddingRight: 40,\n    },\n    infoContainer: {\n        position: 'relative',\n        height: 60,\n        marginTop: 20,\n        paddingLeft: 80,\n        display: 'inline-flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexWrap: 'wrap',\n        flexBasis: 'auto',\n    },\n    avatar: {\n        height: 60,\n        width: 60,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    },\n    readLength: {\n        color: 'rgba(0, 0, 0, 0.54)',\n    },\n}));\n\nexport default ({ match }) => {\n\n    const media = useContext(MediaContext);\n    const classes = useStyles();\n    const imgHelper = \"data:image/jpeg;base64,\";\n\n    const [article, setArticle] = useState('');\n\n    // Once the component mounts, this function will grab the article that matches\n    // the url parameter value and update the state with the matched article's elements\n    useEffect(() => fetchArticle(), []);\n\n    const fetchArticle = async () => {\n        try {\n            const title = match.params.title;\n            const options = {\n                method: 'POST',\n                body: JSON.stringify({ title }),\n                headers: { 'Content-Type': 'application/json' },\n            };\n            const res = await fetch('/api/editors/getArticle', options);\n            const json = await res.json();\n            if (json.error) {\n                return media.openNotify({ error: true, message: json.message });                ;\n            }\n            \n            setArticle(json);\n        } catch (error) {\n            media.errorNotify();\n        }\n    };\n\n    if (!article) return (\n        <Grid container className={classes.progressContainer}>\n            <CircularProgress />\n        </Grid>\n    );\n\n    let data;\n    try {\n        data = Buffer.from(article.jumbotron.src.data, 'binary');\n    } catch (error) {\n        media.errorNotify();\n    }\n\n    return (\n        <Grid container>\n            <Grid className={classes.container} item xs={12}>\n\n                {/* The elements will have styles applied inline due to\n                the reliance of the information retrieved from the database and stored\n                within the state */}\n                <Typography\n                    style={{\n                        fontSize: media.md ? mobileFontSizes[article.title.textStyle] : fontSizes[article.title.textStyle],\n                        fontFamily: `${article.title.font}, Helvetica, Arial, sans-serif`,\n                        fontWeight: article.title.bold ? 'bold' : 'normal',\n                        fontStyle: article.title.italic ? 'italic' : 'normal',\n                        textDecoration: article.title.underline ? 'underline' : 'none',\n                        textAlign: article.title.justify,\n                        color: article.title.color,\n                        backgroundColor: article.title.highlight ? '#ffff00' : 'none',\n                        marginTop: parseInt(article.title.marginTop),\n                        marginBottom: parseInt(article.title.marginBottom),\n                        width: '100%',\n                    }}\n                >\n                    {article.title.text}\n                </Typography>\n\n                <Typography\n                    style={{\n                        fontSize: media.md ? mobileFontSizes[article.description.textStyle] : fontSizes[article.description.textStyle],\n                        fontFamily: `${article.description.font}, Helvetica, Arial, sans-serif`,\n                        textAlign: article.description.justify,\n                        width: '100%',\n                    }}                \n                >\n                    {article.description.text}\n                </Typography>\n\n                <div\n                    className={classes.infoContainer}\n                    style={{ width: article.readLength.justify === 'flex-start' ? '100%' : 'auto' }}\n                >\n                    <Avatar\n                        className={classes.avatar}\n                        src={`https://media.licdn.com/dms/image/C4E03AQESXvxigX8NfQ/profile-displayphoto-shrink_800_800/0?e=1571875200&v=beta&t=jVs0jK8YKBHrOOcmnghTMtN9bhPfu7rH9MHADyTboBY`}\n                        alt=\"Terri Banner Profile Photo\"\n                    />\n                    <div style={{ width: '100%' }}>\n                        <Typography>\n                            Terri Banner\n                        </Typography>\n                    </div>\n\n                    <Typography className={classes.readLength}>\n                        {`Aug 21 `} &#8226; {` ${article.readLength.text} min read`}\n                    </Typography>\n                </div>\n\n                <div\n                    style={{\n                        width: '100%',\n                        display: 'flex',\n                        justifyContent: article.jumbotron.justify,\n                    }}\n                >\n                    <img\n                        style={{\n                            marginTop: article.jumbotron.marginTop,\n                            marginBottom: article.jumbotron.marginBottom,\n                            width: '50%',\n                        }}\n                        src={`${imgHelper}${data}`}\n                        alt={article.title.text}\n                    />\n                </div>\n\n                {/* Since the body element can contain either text or image elements,\n                I had to write a conditional to appropriately apply elements and their styles */}\n                {article.body.map((section, index) => {\n                    if (section.isText) {\n                        return (\n                            <Typography\n                                style={{\n                                    width: '100%',\n                                    fontSize: media.md ? mobileFontSizes[section.textStyle] : fontSizes[section.textStyle],\n                                    fontFamily: `${section.font}, Helvetica, Arial, sans-serif`,\n                                    fontWeight: section.bold ? 'bold' : 'normal',\n                                    fontStyle: section.italic ? 'italic' : 'normal',\n                                    textDecoration: section.underline ? 'underline' : 'none',\n                                    textAlign: section.justify,\n                                    color: section.color,\n                                    backgroundColor: section.highlight ? '#ffff00' : 'none',\n                                    marginTop: parseInt(section.marginTop),\n                                    marginBottom: parseInt(section.marginBottom),    \n                                }}\n                                key={index}\n                            >\n                                {section.text}\n                            </Typography>\n                        );\n                    }\n                    let bodyImage;\n                    try {\n                        bodyImage = Buffer.from(section.src.data, 'binary');\n                    } catch (error) {\n                        media.errorNotify();\n                    }\n\n                    return (\n                        <div\n                            style={{\n                                width: '100%',\n                                display: 'flex',\n                                justifyContent: section.justify,\n                                marginTop: section.marginTop,\n                                marginBottom: section.marginBottom\n                            }}\n                        >\n                            <img\n                                src={`${imgHelper}${bodyImage}`}\n                                alt={section.alt}\n                                style={{ width: '70%' }}\n                            />\n                        </div>\n                    );\n                })}\n\n            </Grid>\n        </Grid>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}