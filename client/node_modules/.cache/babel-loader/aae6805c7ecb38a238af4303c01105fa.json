{"ast":null,"code":"import _objectSpread from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/God/Desktop/github/mtndream/MtnDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/God/Desktop/github/mtndream/MtnDream/client/src/Context/EditorContext.js\";\nimport React, { useState, createContext, useEffect } from 'react';\nexport var EditorContext = createContext();\nvar initialStyling = {\n  bold: false,\n  italic: false,\n  underline: false,\n  color: 'black',\n  highlight: false\n};\nexport var EditorProvider = function EditorProvider(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      article = _useState4[0],\n      setArticle = _useState4[1];\n\n  var _useState5 = useState(initialStyling),\n      _useState6 = _slicedToArray(_useState5, 2),\n      styling = _useState6[0],\n      setStyling = _useState6[1];\n\n  var _useState7 = useState('Roboto'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      font = _useState8[0],\n      setFont = _useState8[1];\n\n  var _useState9 = useState('left'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      justify = _useState10[0],\n      setJustify = _useState10[1];\n\n  var _useState11 = useState('body1'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      textStyle = _useState12[0],\n      setTextStyle = _useState12[1];\n\n  var handleSubmit = function handleSubmit(data) {\n    console.log(data);\n    fetch('/api/editor/test').then(function (res) {\n      return res.data.json();\n    }).then(function (result) {\n      console.log(result);\n    }); // fetch('/api', {\n    //     method: 'POST',\n    //     body: JSON.stringify(data),\n    //     headers: {'Content-Type': 'application/json'}\n    // })\n    // .then(res => res.json())\n    // .then(result => {\n    //     console.log(result);\n    // })\n    // .catch(error => {\n    //     console.log(error)\n    // }) \n  };\n\n  var handleInput = function handleInput(e) {\n    setInput(e.target.value);\n  };\n\n  var handleArticle = function handleArticle() {\n    var newArticle = article;\n    var section = {\n      text: input,\n      font: font,\n      justify: justify,\n      textStyle: textStyle,\n      bold: styling.bold,\n      italic: styling.italic,\n      underline: styling.underline,\n      color: styling.color,\n      highlight: styling.highlight\n    };\n    handleSubmit(section);\n    newArticle.push(section);\n    setArticle(newArticle);\n    setInput('');\n    setStyling(initialStyling);\n    setFont('Roboto');\n    setJustify('left');\n    setTextStyle('body1');\n  };\n\n  var handleFont = function handleFont(newFont) {\n    setFont(newFont);\n  };\n\n  var handleStyling = function handleStyling(style, color) {\n    switch (style) {\n      case 'bold':\n        return setStyling(_objectSpread({}, styling, {\n          bold: !styling.bold\n        }));\n\n      case 'italic':\n        return setStyling(_objectSpread({}, styling, {\n          italic: !styling.italic\n        }));\n\n      case 'underline':\n        return setStyling(_objectSpread({}, styling, {\n          underline: !styling.underline\n        }));\n\n      case 'color':\n        return setStyling(_objectSpread({}, styling, {\n          color: color\n        }));\n\n      case 'highlight':\n        return setStyling(_objectSpread({}, styling, {\n          highlight: !styling.highlight\n        }));\n\n      default:\n        return;\n    }\n\n    ;\n  };\n\n  var handleJustify = function handleJustify(justification) {\n    setJustify(justification);\n  };\n\n  var handleTextStyle = function handleTextStyle(style) {\n    setTextStyle(style);\n  };\n\n  return React.createElement(EditorContext.Provider, {\n    value: {\n      handleInput: handleInput,\n      input: input,\n      styling: styling,\n      handleStyling: handleStyling,\n      font: font,\n      handleFont: handleFont,\n      justify: justify,\n      handleJustify: handleJustify,\n      textStyle: textStyle,\n      handleTextStyle: handleTextStyle,\n      article: article,\n      handleArticle: handleArticle\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/God/Desktop/github/mtndream/MtnDream/client/src/Context/EditorContext.js"],"names":["React","useState","createContext","useEffect","EditorContext","initialStyling","bold","italic","underline","color","highlight","EditorProvider","props","input","setInput","article","setArticle","styling","setStyling","font","setFont","justify","setJustify","textStyle","setTextStyle","handleSubmit","data","console","log","fetch","then","res","json","result","handleInput","e","target","value","handleArticle","newArticle","section","text","push","handleFont","newFont","handleStyling","style","handleJustify","justification","handleTextStyle","children"],"mappings":"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","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\n\nexport const EditorContext = createContext();\n\nconst initialStyling = {\n    bold: false,\n    italic: false,\n    underline: false,\n    color: 'black',\n    highlight: false,\n}\n\nexport const EditorProvider = props => {\n\n    const [input, setInput] = useState('');\n    const [article, setArticle] = useState([]);\n    const [styling, setStyling] = useState(initialStyling);\n    const [font, setFont] = useState( 'Roboto' );\n    const [justify, setJustify] = useState('left');\n    const [textStyle, setTextStyle] = useState('body1');\n    \n    const handleSubmit = data => {\n\n        console.log(data);\n        fetch('/api/editor/test')\n        .then(res => res.data.json())\n        .then(result => {\n            console.log(result);\n        });\n\n        // fetch('/api', {\n        //     method: 'POST',\n        //     body: JSON.stringify(data),\n        //     headers: {'Content-Type': 'application/json'}\n        // })\n        // .then(res => res.json())\n        // .then(result => {\n        //     console.log(result);\n        // })\n        // .catch(error => {\n        //     console.log(error)\n        // }) \n    };\n\n    const handleInput = (e) => {\n        setInput(e.target.value);\n    };\n\n    const handleArticle = () => {\n        let newArticle = article;\n        let section = {\n            text: input,\n            font: font,\n            justify: justify,\n            textStyle: textStyle,\n            bold: styling.bold,\n            italic: styling.italic,\n            underline: styling.underline,\n            color: styling.color,\n            highlight: styling.highlight\n        }\n\n        handleSubmit(section);\n\n        newArticle.push(section);\n\n        setArticle(newArticle);\n        setInput('');\n        setStyling(initialStyling);\n        setFont('Roboto');\n        setJustify('left');\n        setTextStyle('body1');\n\n    };\n\n    const handleFont = ( newFont ) => {\n        setFont(newFont);\n    };\n\n    const handleStyling = ( style, color ) => {\n        switch (style) {\n            case 'bold':\n                return setStyling({ ...styling, bold: !styling.bold });\n            case 'italic':\n                return setStyling({ ...styling, italic: !styling.italic });\n            case 'underline':\n                return setStyling({ ...styling, underline: !styling.underline });\n            case 'color':\n                return setStyling({ ...styling, color: color });\n            case 'highlight':\n                return setStyling({ ...styling, highlight: !styling.highlight });\n            default:\n                return\n        };\n    };\n\n    const handleJustify = justification => {\n        setJustify(justification);\n    };\n\n    const handleTextStyle = style => {\n        setTextStyle(style);\n    };\n\n    return (\n        <EditorContext.Provider\n            value={{\n                handleInput,\n                input,\n                styling,\n                handleStyling,\n                font,\n                handleFont,\n                justify,\n                handleJustify,\n                textStyle,\n                handleTextStyle,\n                article,\n                handleArticle\n            }}\n        >\n            {props.children}\n        </EditorContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}